"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["8745"],{10712:function(e,s,t){t.r(s),t.d(s,{frontMatter:()=>a,default:()=>h,toc:()=>l,metadata:()=>i,assets:()=>d,contentTitle:()=>c});var i=JSON.parse('{"id":"guides/components/scene-objects/sprite","title":"Sprite","description":"Learn how to create and manipulate Sprites in PixiJS, including texture updates, scaling, and transformations.","source":"@site/docs/guides/components/scene-objects/sprite.md","sourceDirName":"guides/components/scene-objects","slug":"/guides/components/scene-objects/sprite","permalink":"/8.x/guides/components/scene-objects/sprite","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/components/scene-objects/sprite.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"description":"Learn how to create and manipulate Sprites in PixiJS, including texture updates, scaling, and transformations."},"sidebar":"guidesSidebar","previous":{"title":"Cache As Texture","permalink":"/8.x/guides/components/scene-objects/container/cache-as-texture"},"next":{"title":"NineSlice Sprite","permalink":"/8.x/guides/components/scene-objects/nine-slice-sprite"}}'),n=t(85893),r=t(50065);let a={sidebar_position:1,description:"Learn how to create and manipulate Sprites in PixiJS, including texture updates, scaling, and transformations."},c="Sprite",d={},l=[{value:"Updating the Texture",id:"updating-the-texture",level:2},{value:"<strong>Scale vs Width/Height</strong>",id:"scale-vs-widthheight",level:2},{value:"API Reference",id:"api-reference",level:2}];function o(e){let s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"sprite",children:"Sprite"})}),"\n",(0,n.jsxs)(s.p,{children:["Sprites are the foundational visual elements in PixiJS. They represent a single image to be displayed on the screen. Each ",(0,n.jsx)(s.a,{href:"https://pixijs.download/release/docs/scene.Sprite.html",children:"Sprite"})," contains a ",(0,n.jsx)(s.a,{href:"https://pixijs.download/release/docs/rendering.Texture.html",children:"Texture"})," to be drawn, along with all the transformation and display state required to function in the scene graph."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"import { Assets, Sprite } from 'pixi.js';\n\nconst texture = await Assets.load('path/to/image.png');\nconst sprite = new Sprite(texture);\n\nsprite.anchor.set(0.5);\nsprite.position.set(100, 100);\nsprite.scale.set(2);\nsprite.rotation = Math.PI / 4; // Rotate 45 degrees\n"})}),"\n",(0,n.jsx)(s.h2,{id:"updating-the-texture",children:"Updating the Texture"}),"\n",(0,n.jsx)(s.p,{children:"If you change the texture of a sprite, it will automatically:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Rebind listeners for texture updates"}),"\n",(0,n.jsx)(s.li,{children:"Recalculate width/height if set so that the visual size remains the same"}),"\n",(0,n.jsx)(s.li,{children:"Trigger a visual update"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"const texture = Assets.get('path/to/image.png');\nsprite.texture = texture;\n"})}),"\n",(0,n.jsx)(s.h2,{id:"scale-vs-widthheight",children:(0,n.jsx)(s.strong,{children:"Scale vs Width/Height"})}),"\n",(0,n.jsxs)(s.p,{children:["Sprites inherit ",(0,n.jsx)(s.code,{children:"scale"})," from ",(0,n.jsx)(s.code,{children:"Container"}),", allowing for percentage-based resizing:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"sprite.scale.set(2); // Double the size\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Sprites also have ",(0,n.jsx)(s.code,{children:"width"})," and ",(0,n.jsx)(s.code,{children:"height"})," properties that act as ",(0,n.jsx)(s.em,{children:"convenience setters"})," for ",(0,n.jsx)(s.code,{children:"scale"}),", based on the texture\u2019s dimensions:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ts",children:"sprite.width = 100; // Automatically updates scale.x\n// sets: sprite.scale.x = 100 / sprite.texture.orig.width;\n"})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://pixijs.download/release/docs/scene.Sprite.html",children:"Sprite"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://pixijs.download/release/docs/rendering.Texture.html",children:"Texture"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://pixijs.download/release/docs/assets.Assets.html",children:"Assets"})}),"\n"]})]})}function h(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}}}]);
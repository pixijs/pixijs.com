"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["7066"],{11843:function(e,t,n){n.r(t),n.d(t,{default:()=>u,frontMatter:()=>o,metadata:()=>i,assets:()=>l,toc:()=>c,contentTitle:()=>p});var i=JSON.parse('{"id":"examples/events/click","title":"Click","description":"","source":"@site/docs/examples/events/click.mdx","sourceDirName":"examples/events","slug":"/examples/events/click","permalink":"/8.x/examples/events/click","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":0,"custom_edit_url":null,"title":"Click"},"sidebar":"examplesSidebar","previous":{"title":"Render Layer","permalink":"/8.x/examples/ordering/render-layer"},"next":{"title":"Interactivity","permalink":"/8.x/examples/events/interactivity"}}'),s=n("85893"),a=n("50065"),r=n("43076");let o={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:0,custom_edit_url:null,title:"Click"},p=void 0,l={},c=[];function d(e){return(0,s.jsx)(r.N,{files:{"index.js":"import { Application, Assets, SCALE_MODES, settings, Sprite } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ background: '#1099bb', resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    // Load the bunny texture\n    const texture = await Assets.load('https://pixijs.com/assets/bunny.png');\n\n    // Set the texture's scale mode to nearest to preserve pixelation\n    texture.baseTexture.scaleMode = SCALE_MODES.NEAREST;\n\n    // Create the bunny sprite\n    const sprite = Sprite.from(texture);\n\n    // Set the initial position\n    sprite.anchor.set(0.5);\n    sprite.x = app.screen.width / 2;\n    sprite.y = app.screen.height / 2;\n\n    // Opt-in to interactivity\n    sprite.eventMode = 'static';\n\n    // Shows hand cursor\n    sprite.cursor = 'pointer';\n\n    // Pointers normalize touch and mouse (good for mobile and desktop)\n    sprite.on('pointerdown', onClick);\n\n    // Alternatively, use the mouse & touch events:\n    // sprite.on('click', onClick); // mouse-only\n    // sprite.on('tap', onClick); // touch-only\n\n    app.stage.addChild(sprite);\n\n    function onClick()\n    {\n        sprite.scale.x *= 1.25;\n        sprite.scale.y *= 1.25;\n    }\n})();\n"}})}function u(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);
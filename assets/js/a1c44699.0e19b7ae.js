"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["3320"],{27594:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>s,default:()=>u,toc:()=>l,metadata:()=>i,assets:()=>p,contentTitle:()=>d});var i=JSON.parse('{"id":"examples/basic/render-group","title":"Render Group","description":"","source":"@site/docs/examples/basic/render-group.mdx","sourceDirName":"examples/basic","slug":"/examples/basic/render-group","permalink":"/8.x/examples/basic/render-group","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":6,"custom_edit_url":null,"title":"Render Group"},"sidebar":"examplesSidebar","previous":{"title":"Mesh Plane","permalink":"/8.x/examples/basic/mesh-plane"},"next":{"title":"Cache As Texture","permalink":"/8.x/examples/basic/cache-as-texture"}}'),r=t(85893),a=t(50065),o=t(31531);let s={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:6,custom_edit_url:null,title:"Render Group"},d=void 0,p={},l=[];function c(e){return(0,r.jsx)(o.N,{files:{"index.js":"import { Application, Assets, Container, Sprite } from 'pixi.js';\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({\n    backgroundColor: 'brown',\n    resizeTo: window,\n  });\n\n  const treeTexture = await Assets.load(`https://pixijs.com/assets/tree.png`);\n\n  const worldContainer = new Container({\n    // this will make moving this container GPU powered\n    isRenderGroup: true,\n  });\n\n  const worldSize = 5000;\n\n  for (let i = 0; i < 100000; i++) {\n    const yPos = Math.random() * worldSize;\n\n    const tree = new Sprite({\n      texture: treeTexture,\n      x: Math.random() * worldSize,\n      y: yPos,\n      scale: 0.25,\n      anchor: 0.5,\n    });\n\n    worldContainer.addChild(tree);\n  }\n\n  // sort the trees by their y position\n  worldContainer.children.sort((a, b) => a.position.y - b.position.y);\n\n  app.stage.addChild(worldContainer);\n\n  // Append the application canvas to the document body\n  document.body.appendChild(app.canvas);\n\n  let x = 0;\n  let y = 0;\n\n  app.canvas.addEventListener('mousemove', (e) => {\n    x = e.clientX;\n    y = e.clientY;\n  });\n\n  app.ticker.add(() => {\n    const screenWidth = app.renderer.width;\n    const screenHeight = app.renderer.height;\n\n    const targetX = (x / screenWidth) * (worldSize - screenWidth);\n    const targetY = (y / screenHeight) * (worldSize - screenHeight);\n\n    worldContainer.x += (-targetX - worldContainer.x) * 0.1;\n    worldContainer.y += (-targetY - worldContainer.y) * 0.1;\n  });\n})();\n"}})}function u(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},31531:function(e,n,t){t.d(n,{N:()=>o});var i=t(958),r=t(18146),a=t(85893);function o(e){return(0,r.J)("example",!0),(0,a.jsx)(i.M,{height:"calc(100vh - 325px)",fontSize:14,...e})}}}]);
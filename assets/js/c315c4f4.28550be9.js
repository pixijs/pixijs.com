"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["9655"],{8517:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,default:()=>x,toc:()=>a,metadata:()=>i,assets:()=>d,contentTitle:()=>c});var i=JSON.parse('{"id":"guides/components/scene-objects/text/split-text","title":"SplitText & SplitBitmapText","description":"The SplitText and SplitBitmapText classes let you break a string into individual lines, words, and characters\u2014each as its own display object\u2014unlocking rich, per-segment animations and advanced text layout effects.","source":"@site/docs/guides/components/scene-objects/text/split-text.md","sourceDirName":"guides/components/scene-objects/text","slug":"/guides/components/scene-objects/text/split-text","permalink":"/8.x/guides/components/scene-objects/text/split-text","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/components/scene-objects/text/split-text.md","tags":[],"version":"current","frontMatter":{"title":"SplitText & SplitBitmapText","category":"text"},"sidebar":"guidesSidebar","previous":{"title":"Text Style","permalink":"/8.x/guides/components/scene-objects/text/style"},"next":{"title":"Mesh","permalink":"/8.x/guides/components/scene-objects/mesh/"}}'),s=n(85893),r=n(50065);let l={title:"SplitText & SplitBitmapText",category:"text"},c="SplitText & SplitBitmapText",d={},a=[{value:"What Are SplitText &amp; SplitBitmapText?",id:"what-are-splittext--splitbitmaptext",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"SplitText Example",id:"splittext-example",level:3},{value:"SplitBitmapText Example",id:"splitbitmaptext-example",level:3},{value:"Accessing Segments",id:"accessing-segments",level:2},{value:"Anchor Points Explained",id:"anchor-points-explained",level:2},{value:"Animation Example (with GSAP)",id:"animation-example-with-gsap",level:2},{value:"Creating from Existing Text",id:"creating-from-existing-text",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Global Defaults",id:"global-defaults",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Performance Notes",id:"performance-notes",level:2},{value:"API Reference",id:"api-reference",level:2}];function o(e){let t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"splittext--splitbitmaptext",children:"SplitText & SplitBitmapText"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"SplitText"})," and ",(0,s.jsx)(t.code,{children:"SplitBitmapText"})," classes let you break a string into individual lines, words, and characters\u2014each as its own display object\u2014unlocking rich, per-segment animations and advanced text layout effects."]}),"\n",(0,s.jsxs)(t.p,{children:["These classes work just like regular ",(0,s.jsx)(t.code,{children:"Text"})," or ",(0,s.jsx)(t.code,{children:"BitmapText"}),", but provide fine-grained control over every part of your text."]}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Experimental:"})," These features are new and may evolve in future versions."]})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"what-are-splittext--splitbitmaptext",children:"What Are SplitText & SplitBitmapText?"}),"\n",(0,s.jsxs)(t.p,{children:["Both ",(0,s.jsx)(t.code,{children:"SplitText"})," and ",(0,s.jsx)(t.code,{children:"SplitBitmapText"})," extend PixiJS containers, generating nested display objects for each line, word, and character of your string."]}),"\n",(0,s.jsx)(t.p,{children:"The difference is in the underlying text rendering:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Class"}),(0,s.jsx)(t.th,{children:"Base Type"}),(0,s.jsx)(t.th,{children:"Best For"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"SplitText"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Text"})}),(0,s.jsx)(t.td,{children:"Richly styled text"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"SplitBitmapText"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"BitmapText"})}),(0,s.jsx)(t.td,{children:"High-performance dynamic text"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Perfect for:"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Per-character or per-word animations"}),"\n",(0,s.jsx)(t.li,{children:"Line-based entrance or exit effects"}),"\n",(0,s.jsx)(t.li,{children:"Interactive text elements"}),"\n",(0,s.jsx)(t.li,{children:"Complex animated typography"}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(t.h3,{id:"splittext-example",children:"SplitText Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { SplitText } from 'pixi.js';\n\nconst text = new SplitText({\n  text: 'Hello World',\n  style: { fontSize: 32, fill: 0xffffff },\n\n  // Optional: Anchor points (0-1 range)\n  lineAnchor: 0.5, // Center lines\n  wordAnchor: { x: 0, y: 0.5 }, // Left-center words\n  charAnchor: { x: 0.5, y: 1 }, // Bottom-center characters\n  autoSplit: true,\n});\n\napp.stage.addChild(text);\n"})}),"\n",(0,s.jsx)(t.h3,{id:"splitbitmaptext-example",children:"SplitBitmapText Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { SplitBitmapText, BitmapFont } from 'pixi.js';\n\n// Ensure your bitmap font is installed\nBitmapFont.install({\n  name: 'Game Font',\n  style: { fontFamily: 'Arial', fontSize: 32 },\n});\n\nconst text = new SplitBitmapText({\n  text: 'High Performance',\n  style: { fontFamily: 'Game Font', fontSize: 32 },\n  autoSplit: true,\n});\n\napp.stage.addChild(text);\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"accessing-segments",children:"Accessing Segments"}),"\n",(0,s.jsx)(t.p,{children:"Both classes provide convenient segment arrays:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"console.log(text.lines); // Array of line containers\nconsole.log(text.words); // Array of word containers\nconsole.log(text.chars); // Array of character display objects\n"})}),"\n",(0,s.jsx)(t.p,{children:"Each line contains its words, and each word contains its characters."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"anchor-points-explained",children:"Anchor Points Explained"}),"\n",(0,s.jsx)(t.p,{children:"Segment anchors control the origin for transformations like rotation or scaling."}),"\n",(0,s.jsxs)(t.p,{children:["Normalized range: ",(0,s.jsx)(t.code,{children:"0"})," (start) to ",(0,s.jsx)(t.code,{children:"1"})," (end)"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Anchor"}),(0,s.jsx)(t.th,{children:"Meaning"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"0,0"})}),(0,s.jsx)(t.td,{children:"Top-left"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"0.5,0.5"})}),(0,s.jsx)(t.td,{children:"Center"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"1,1"})}),(0,s.jsx)(t.td,{children:"Bottom-right"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Example:"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const text = new SplitText({\n  text: 'Animate Me',\n  lineAnchor: { x: 1, y: 0 }, // Top-right lines\n  wordAnchor: 0.5, // Center words\n  charAnchor: { x: 0, y: 1 }, // Bottom-left characters\n});\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"animation-example-with-gsap",children:"Animation Example (with GSAP)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { gsap } from 'gsap';\n\nconst text = new SplitBitmapText({\n  text: 'Split and Animate',\n  style: { fontFamily: 'Game Font', fontSize: 48 },\n});\n\napp.stage.addChild(text);\n\n// Animate characters one by one\ntext.chars.forEach((char, i) => {\n  gsap.from(char, {\n    alpha: 0,\n    delay: i * 0.05,\n  });\n});\n\n// Animate words with scaling\ntext.words.forEach((word, i) => {\n  gsap.to(word.scale, {\n    x: 1.2,\n    y: 1.2,\n    yoyo: true,\n    repeat: -1,\n    delay: i * 0.2,\n  });\n});\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"creating-from-existing-text",children:"Creating from Existing Text"}),"\n",(0,s.jsx)(t.p,{children:"Convert existing text objects into segmented versions:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { Text, SplitText, BitmapText, SplitBitmapText } from 'pixi.js';\n\nconst basicText = new Text({\n  text: 'Standard Text',\n  style: { fontSize: 32 },\n});\nconst splitText = SplitText.from(basicText);\n\nconst bitmapText = new BitmapText({\n  text: 'Bitmap Example',\n  style: { fontFamily: 'Game Font', fontSize: 32 },\n});\nconst splitBitmap = SplitBitmapText.from(bitmapText);\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsx)(t.p,{children:"Shared options for both classes:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Option"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"text"})}),(0,s.jsx)(t.td,{children:"String content to render and split"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.em,{children:"Required"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"style"})}),(0,s.jsx)(t.td,{children:"Text style configuration (varies by text type)"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"{}"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"autoSplit"})}),(0,s.jsx)(t.td,{children:"Auto-update segments when text or style changes"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"true"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"lineAnchor"})}),(0,s.jsxs)(t.td,{children:["Anchor for line containers (",(0,s.jsx)(t.code,{children:"number"})," or ",(0,s.jsx)(t.code,{children:"{x, y}"}),")"]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"0"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"wordAnchor"})}),(0,s.jsxs)(t.td,{children:["Anchor for word containers (",(0,s.jsx)(t.code,{children:"number"})," or ",(0,s.jsx)(t.code,{children:"{x, y}"}),")"]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"0"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"charAnchor"})}),(0,s.jsxs)(t.td,{children:["Anchor for character objects (",(0,s.jsx)(t.code,{children:"number"})," or ",(0,s.jsx)(t.code,{children:"{x, y}"}),")"]}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"0"})})]})]})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"global-defaults",children:"Global Defaults"}),"\n",(0,s.jsx)(t.p,{children:"Change global defaults for each class:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"SplitText.defaultOptions = {\n  lineAnchor: 0.5,\n  wordAnchor: { x: 0, y: 0.5 },\n  charAnchor: { x: 0.5, y: 1 },\n};\n\nSplitBitmapText.defaultOptions = {\n  autoSplit: false,\n};\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"limitations",children:"Limitations"}),"\n",(0,s.jsxs)(t.p,{children:["\u26A0\uFE0F ",(0,s.jsx)(t.strong,{children:"Character Spacing:"}),"\nSplitting text into individual objects removes browser or font kerning. Expect slight differences in spacing compared to standard ",(0,s.jsx)(t.code,{children:"Text"}),"."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"performance-notes",children:"Performance Notes"}),"\n",(0,s.jsxs)(t.p,{children:["Splitting text creates additional display objects. For simple static text, a regular ",(0,s.jsx)(t.code,{children:"Text"})," object is more efficient. Use ",(0,s.jsx)(t.code,{children:"SplitText"})," when you need:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Per-segment animations"}),"\n",(0,s.jsx)(t.li,{children:"Interactive or responsive text effects"}),"\n",(0,s.jsx)(t.li,{children:"Complex layouts"}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["The same performance limitations outlined ",(0,s.jsx)(t.a,{href:"/8.x/guides/components/scene-objects/text/",children:"here"})," apply for these classes as well."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://pixijs.download/release/docs/scene.Text.html",children:"Text"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://pixijs.download/release/docs/text.TextStyle.html",children:"TextStyle"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://pixijs.download/release/docs/text.BitmapFont.html",children:"BitmapFont"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://pixijs.download/release/docs/text.SplitText.html",children:"SplitText"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://pixijs.download/release/docs/text.SplitBitmapText.html",children:"SplitBitmapText"})}),"\n"]})]})}function x(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},50065:function(e,t,n){n.d(t,{Z:()=>c,a:()=>l});var i=n(67294);let s={},r=i.createContext(s);function l(e){let t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["9158"],{1589:function(t,n,e){e.r(n),e.d(n,{default:()=>x,frontMatter:()=>i,metadata:()=>o,assets:()=>c,toc:()=>p,contentTitle:()=>u});var o=JSON.parse('{"id":"examples/events/custom-hitarea","title":"Custom Hitarea","description":"","source":"@site/docs/examples/events/custom-hitarea.mdx","sourceDirName":"examples/events","slug":"/examples/events/custom-hitarea","permalink":"/8.x/examples/events/custom-hitarea","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":4,"custom_edit_url":null,"title":"Custom Hitarea"},"sidebar":"examplesSidebar","previous":{"title":"Custom Mouse Icon","permalink":"/8.x/examples/events/custom-mouse-icon"},"next":{"title":"Logger","permalink":"/8.x/examples/events/logger"}}'),s=e("85893"),a=e("50065"),r=e("67963");let i={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:4,custom_edit_url:null,title:"Custom Hitarea"},u=void 0,c={},p=[];function l(t){return(0,s.jsx)(r.N,{files:{"index.js":"import { Application, Assets, Graphics, Polygon, Sprite, Text, TextStyle } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ background: '#1099bb', resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    // Load the star texture\n    const starTexture = await Assets.load('https://pixijs.com/assets/yellowstar.png');\n\n    // Standard Sprite Button\n    const starButton1 = new Sprite(starTexture);\n\n    starButton1.position.set(50, 200);\n    starButton1.cursor = 'pointer';\n    starButton1.eventMode = 'static';\n\n    starButton1\n        .on('pointerdown', onClick, starButton1)\n        .on('pointerover', onPointerOver, starButton1)\n        .on('pointerout', onPointerOut, starButton1);\n\n    // Custom Hitarea Button\n    const starButton2 = new Sprite(starTexture);\n\n    starButton2.position.set(250, 200);\n\n    // Create a hitarea that matches the sprite, which will be used for point intersection\n    starButton2.hitArea = new Polygon([80, 0, 100, 50, 160, 55, 115, 95, 130, 150, 80, 120, 30, 150, 45, 95, 0, 55, 60, 50]);\n    starButton2.cursor = 'pointer';\n    starButton2.eventMode = 'static';\n\n    starButton2\n        .on('pointerdown', onClick, starButton2)\n        .on('pointerover', onPointerOver, starButton2)\n        .on('pointerout', onPointerOut, starButton2);\n\n    // With Mask, No Hit Area\n    const starButton3 = new Sprite(starTexture);\n\n    starButton3.position.set(450, 200);\n    starButton3.cursor = 'pointer';\n    starButton3.eventMode = 'static';\n\n    const squareMask = new Graphics().rect(starButton3.x, starButton3.y, 75, 200).fill({ color: 0xffffff });\n\n    starButton3.mask = squareMask;\n\n    starButton3\n        .on('pointerdown', onClick, starButton3)\n        .on('pointerover', onPointerOver, starButton3)\n        .on('pointerout', onPointerOut, starButton3);\n\n    // With a Mask and Hit Area\n    // Hitareas ignore masks. You can still click on a button made in this way,\n    // even from areas covered by a mask\n    const starButton4 = new Sprite(starTexture);\n\n    starButton4.position.set(600, 200);\n\n    const squareMask2 = new Graphics().rect(starButton4.x, starButton4.y, 75, 200).fill({ color: 0xffffff });\n\n    starButton4.mask = squareMask2;\n\n    // Again, hitarea for intersection checks\n    starButton4.hitArea = new Polygon([80, 0, 100, 50, 160, 55, 115, 95, 130, 150, 80, 120, 30, 150, 45, 95, 0, 55, 60, 50]);\n    starButton4.cursor = 'pointer';\n    starButton4.eventMode = 'static';\n\n    starButton4\n        .on('pointerdown', onClick, starButton4)\n        .on('pointerover', onPointerOver, starButton4)\n        .on('pointerout', onPointerOut, starButton4);\n\n    const style = new TextStyle({ fill: '#ffffff' });\n\n    const text1 = new Text({ text: 'Standard', style });\n\n    text1.x = starButton1.x + 25;\n    text1.y = starButton1.y + 170;\n\n    const text2 = new Text({ text: 'Hit Area', style });\n\n    text2.x = starButton2.x + 35;\n    text2.y = starButton2.y + 170;\n\n    const text3 = new Text({ text: 'Mask', style });\n\n    text3.x = starButton3.x + 10;\n    text3.y = starButton3.y + 170;\n\n    const text4 = new Text({ text: 'Mask + Hit Area', style });\n\n    text4.x = starButton4.x - 10;\n    text4.y = starButton4.y + 170;\n\n    // Add to stage\n    app.stage.addChild(\n        starButton2,\n        starButton1,\n        starButton3,\n        starButton4,\n        squareMask,\n        squareMask2,\n        text1,\n        text2,\n        text3,\n        text4,\n    );\n\n    function onClick()\n    {\n        this.tint = 0x333333;\n    }\n\n    function onPointerOver()\n    {\n        this.tint = 0x666666;\n    }\n\n    function onPointerOut()\n    {\n        this.tint = 0xffffff;\n    }\n})();\n"}})}function x(t={}){let{wrapper:n}={...(0,a.a)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}}}]);
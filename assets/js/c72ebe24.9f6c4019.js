"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["2915"],{50954:function(n,e,t){t.r(e),t.d(e,{default:()=>c,frontMatter:()=>s,metadata:()=>a,assets:()=>u,toc:()=>l,contentTitle:()=>p});var a=JSON.parse('{"id":"examples/events/dragging","title":"Dragging","description":"","source":"@site/docs/examples/events/dragging.mdx","sourceDirName":"examples/events","slug":"/examples/events/dragging","permalink":"/8.x/examples/events/dragging","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":2,"custom_edit_url":null,"title":"Dragging"},"sidebar":"examplesSidebar","previous":{"title":"Interactivity","permalink":"/8.x/examples/events/interactivity"},"next":{"title":"Custom Mouse Icon","permalink":"/8.x/examples/events/custom-mouse-icon"}}'),i=t("85893"),o=t("50065"),r=t("43076");let s={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:2,custom_edit_url:null,title:"Dragging"},p=void 0,u={},l=[];function d(n){return(0,i.jsx)(r.N,{files:{"index.js":"import { Application, Assets, SCALE_MODES, Sprite } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ background: '#1099bb', resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    // Load the bunny texture\n    const texture = await Assets.load('https://pixijs.com/assets/bunny.png');\n\n    // Set the texture's scale mode to nearest to preserve pixelation\n    texture.baseTexture.scaleMode = SCALE_MODES.NEAREST;\n\n    for (let i = 0; i < 10; i++)\n    {\n        createBunny(Math.floor(Math.random() * app.screen.width), Math.floor(Math.random() * app.screen.height));\n    }\n\n    function createBunny(x, y)\n    {\n        // Create our little bunny friend..\n        const bunny = new Sprite(texture);\n\n        // Enable the bunny to be interactive... this will allow it to respond to mouse and touch events\n        bunny.eventMode = 'static';\n\n        // This button mode will mean the hand cursor appears when you roll over the bunny with your mouse\n        bunny.cursor = 'pointer';\n\n        // Center the bunny's anchor point\n        bunny.anchor.set(0.5);\n\n        // Make it a bit bigger, so it's easier to grab\n        bunny.scale.set(3);\n\n        // Setup events for mouse + touch using the pointer events\n        bunny.on('pointerdown', onDragStart, bunny);\n\n        // Move the sprite to its designated position\n        bunny.x = x;\n        bunny.y = y;\n\n        // Add it to the stage\n        app.stage.addChild(bunny);\n    }\n\n    let dragTarget = null;\n\n    app.stage.eventMode = 'static';\n    app.stage.hitArea = app.screen;\n    app.stage.on('pointerup', onDragEnd);\n    app.stage.on('pointerupoutside', onDragEnd);\n\n    function onDragMove(event)\n    {\n        if (dragTarget)\n        {\n            dragTarget.parent.toLocal(event.global, null, dragTarget.position);\n        }\n    }\n\n    function onDragStart()\n    {\n        // Store a reference to the data\n        // * The reason for this is because of multitouch *\n        // * We want to track the movement of this particular touch *\n        this.alpha = 0.5;\n        dragTarget = this;\n        app.stage.on('pointermove', onDragMove);\n    }\n\n    function onDragEnd()\n    {\n        if (dragTarget)\n        {\n            app.stage.off('pointermove', onDragMove);\n            dragTarget.alpha = 1;\n            dragTarget = null;\n        }\n    }\n})();\n"}})}function c(n={}){let{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["4504"],{91769:function(e,s,n){n.r(s),n.d(s,{frontMatter:()=>r,default:()=>h,toc:()=>o,metadata:()=>t,assets:()=>l,contentTitle:()=>a});var t=JSON.parse('{"id":"guides/components/assets/index","title":"Assets","description":"Learn how to manage and load assets in PixiJS using the Assets API.","source":"@site/docs/guides/components/assets/index.md","sourceDirName":"guides/components/assets","slug":"/guides/components/assets/","permalink":"/8.x/guides/components/assets/","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/components/assets/index.md","tags":[],"version":"current","sidebarPosition":-1,"frontMatter":{"sidebar_position":-1,"description":"Learn how to manage and load assets in PixiJS using the Assets API."},"sidebar":"guidesSidebar","previous":{"title":"Performance Tips","permalink":"/8.x/guides/concepts/performance-tips"},"next":{"title":"Resolver","permalink":"/8.x/guides/components/assets/resolver"}}'),d=n(85893),i=n(50065);let r={sidebar_position:-1,description:"Learn how to manage and load assets in PixiJS using the Assets API."},a="Assets",l={},o=[{value:"Key Capabilities",id:"key-capabilities",level:2},{value:"Supported File Types",id:"supported-file-types",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Loading Assets",id:"loading-assets",level:3},{value:"Repeated Loads Are Safe",id:"repeated-loads-are-safe",level:3},{value:"Asset Aliases",id:"asset-aliases",level:3},{value:"Retrieving Loaded Assets",id:"retrieving-loaded-assets",level:3},{value:"Unloading Assets",id:"unloading-assets",level:3},{value:"Customizing Asset Loading",id:"customizing-asset-loading",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"API Reference",id:"api-reference",level:2}];function c(e){let s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"assets",children:"Assets"})}),"\n",(0,d.jsxs)(s.p,{children:["PixiJS has the ",(0,d.jsx)(s.code,{children:"Assets"})," singleton which is used to streamline resource loading. It\u2019s modern, Promise-based, cache-aware, and highly extensible\u2014making it the one stop shop for all PixiJS resource management!"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"import { Assets } from 'pixi.js';\n\nawait Assets.init({ ... });\n\nconst texture = await Assets.load('path/to/hero.png');\n"})}),"\n",(0,d.jsx)(s.h2,{id:"key-capabilities",children:"Key Capabilities"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Asynchronous loading"})," of assets via Promises or async/await."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Caching"})," prevents redundant network requests."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Built-in support"})," for common media formats (images, video, fonts)."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Custom parsers"})," and ",(0,d.jsx)(s.strong,{children:"resolvers"})," for flexibility."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Background loading, manifest-based bundles,"})," and ",(0,d.jsx)(s.strong,{children:"smart fallbacks"}),"."]}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"supported-file-types",children:"Supported File Types"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Extensions"}),(0,d.jsx)(s.th,{children:"Loaders"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"Textures"}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:".png"}),", ",(0,d.jsx)(s.code,{children:".jpg"}),", ",(0,d.jsx)(s.code,{children:".gif"}),", ",(0,d.jsx)(s.code,{children:".webp"}),", ",(0,d.jsx)(s.code,{children:".avif"}),", ",(0,d.jsx)(s.code,{children:".svg"})]}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"loadTextures"}),", ",(0,d.jsx)(s.code,{children:"loadSvg"})]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"Video Textures"}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:".mp4"}),", ",(0,d.jsx)(s.code,{children:".m4v"}),", ",(0,d.jsx)(s.code,{children:".webm"}),", ",(0,d.jsx)(s.code,{children:".ogg"}),", ",(0,d.jsx)(s.code,{children:".ogv"}),", ",(0,d.jsx)(s.code,{children:".h264"}),", ",(0,d.jsx)(s.code,{children:".avi"}),", ",(0,d.jsx)(s.code,{children:".mov"})]}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"loadVideoTextures"})})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"Sprite Sheets"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:".json"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"spritesheetAsset"})})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"Bitmap Fonts"}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:".fnt"}),", ",(0,d.jsx)(s.code,{children:".xml"}),", ",(0,d.jsx)(s.code,{children:".txt"})]}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"loadBitmapFont"})})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"Web Fonts"}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:".ttf"}),", ",(0,d.jsx)(s.code,{children:".otf"}),", ",(0,d.jsx)(s.code,{children:".woff"}),", ",(0,d.jsx)(s.code,{children:".woff2"})]}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"loadWebFont"})})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"JSON"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:".json"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"loadJson"})})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"Text"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:".txt"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"loadTxt"})})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"Compressed Textures"}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:".basis"}),", ",(0,d.jsx)(s.code,{children:".dds"}),", ",(0,d.jsx)(s.code,{children:".ktx"}),", ",(0,d.jsx)(s.code,{children:".ktx2"})]}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"loadBasis"}),", ",(0,d.jsx)(s.code,{children:"loadDDS"}),", ",(0,d.jsx)(s.code,{children:"loadKTX"})]})]})]})]}),"\n",(0,d.jsxs)(s.blockquote,{children:["\n",(0,d.jsx)(s.p,{children:"Need more? Add custom parsers!"}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"getting-started",children:"Getting started"}),"\n",(0,d.jsx)(s.h3,{id:"loading-assets",children:"Loading Assets"}),"\n",(0,d.jsxs)(s.p,{children:["Loading an asset with PixiJS is as simple as calling ",(0,d.jsx)(s.code,{children:"Assets.load()"})," and passing in the asset\u2019s URL. This function returns a ",(0,d.jsx)(s.code,{children:"Promise"})," that resolves to the loaded resource\u2014whether that\u2019s a texture, font, JSON, or another supported format."]}),"\n",(0,d.jsxs)(s.p,{children:["You can provide either an ",(0,d.jsx)(s.strong,{children:"absolute URL"})," (e.g. from a CDN):"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"const texture = await Assets.load('https://example.com/assets/hero.png');\n"})}),"\n",(0,d.jsxs)(s.p,{children:["Or a ",(0,d.jsx)(s.strong,{children:"relative path"})," within your project:"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"const texture = await Assets.load('assets/hero.png');\n"})}),"\n",(0,d.jsxs)(s.p,{children:["PixiJS will ",(0,d.jsx)(s.strong,{children:(0,d.jsx)(s.em,{children:"typically"})})," automatically determine how to load the asset based on its ",(0,d.jsx)(s.strong,{children:"file extension"})," and will cache the result to avoid redundant downloads."]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-typescript",children:"import { Application, Assets, Texture } from 'pixi.js';\n\nconst app = new Application();\n// Application must be initialized before loading assets\nawait app.init({ backgroundColor: 0x1099bb });\n\n// Load a single asset\nconst bunnyTexture = await Assets.load<Texture>('path/to/bunny.png');\nconst sprite = new Sprite(bunnyTexture);\n\n// Load multiple assets at once\nconst textures = await Assets.load<Texture>(['path/to/bunny.png', 'path/to/cat.png']);\nconst bunnySprite = new Sprite(textures['path/to/bunny.png']);\nconst catSprite = new Sprite(textures['path/to/cat.png']);\n"})}),"\n",(0,d.jsx)(s.h3,{id:"repeated-loads-are-safe",children:"Repeated Loads Are Safe"}),"\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.code,{children:"Assets"})," caches by URL or alias. Requests for the same resource return the ",(0,d.jsx)(s.strong,{children:"same texture"}),"."]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"const p1 = await Assets.load('bunny.png');\nconst p2 = await Assets.load('bunny.png');\nconsole.log(p1 === p2); // true\n"})}),"\n",(0,d.jsx)(s.h3,{id:"asset-aliases",children:"Asset Aliases"}),"\n",(0,d.jsx)(s.p,{children:"You can also use aliases to refer to assets instead of their full URLs. This provides a more convenient way to manage assets, especially when you have long or complex URLs."}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"await Assets.load<Texture>({ alias: 'bunny', src: 'path/to/bunny.png' });\nconst bunnyTexture = Assets.get('bunny');\n"})}),"\n",(0,d.jsxs)(s.p,{children:["All Asset APIs support aliases, including ",(0,d.jsx)(s.code,{children:"Assets.load()"}),", ",(0,d.jsx)(s.code,{children:"Assets.get()"}),", and ",(0,d.jsx)(s.code,{children:"Assets.unload()"}),"."]}),"\n",(0,d.jsxs)(s.p,{children:["There is more complex ways of defining assets and you can read about them in the ",(0,d.jsx)(s.a,{href:"/8.x/guides/components/assets/resolver",children:"Resolver"})," section."]}),"\n",(0,d.jsx)(s.h3,{id:"retrieving-loaded-assets",children:"Retrieving Loaded Assets"}),"\n",(0,d.jsxs)(s.p,{children:["You can also retrieve assets that have already been loaded using ",(0,d.jsx)(s.code,{children:"Assets.get()"}),":"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"await Assets.load<Texture>('path/to/bunny.png');\nconst bunnyTexture = Assets.get('path/to/bunny.png');\nconst sprite = new Sprite(bunnyTexture);\n"})}),"\n",(0,d.jsx)(s.p,{children:"This is useful for when you have preloaded your assets elsewhere in your code and want to access them later without having to pass round references from the initial load."}),"\n",(0,d.jsx)(s.h3,{id:"unloading-assets",children:"Unloading Assets"}),"\n",(0,d.jsxs)(s.p,{children:["To unload an asset, you can use ",(0,d.jsx)(s.code,{children:"Assets.unload()"}),". This will remove the asset from the cache and free up memory. Note that if you try to access the asset after unloading it, you will need to load it again."]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"await Assets.load<Texture>('path/to/bunny.png');\nconst bunnyTexture = Assets.get('path/to/bunny.png');\nconst sprite = new Sprite(bunnyTexture);\n// Unload the asset\nawait Assets.unload('path/to/bunny.png');\n"})}),"\n",(0,d.jsx)(s.h3,{id:"customizing-asset-loading",children:"Customizing Asset Loading"}),"\n",(0,d.jsxs)(s.p,{children:["You can customize the asset loading process by providing options to the ",(0,d.jsx)(s.code,{children:"Assets.init()"})," method. This allows you to set preferences for how assets are loaded, specify a base path for assets, and more."]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-ts",children:"import { Assets } from 'pixi.js';\n\nawait Assets.init({...});\n"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Option"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"basePath"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string"})}),(0,d.jsx)(s.td,{children:"Prefix applied to all relative asset paths (e.g. for CDNs)."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"defaultSearchParams"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string"})}),(0,d.jsx)(s.td,{children:"A default URL parameter string to append to all assets loaded"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"skipDetections"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"boolean"})}),(0,d.jsx)(s.td,{children:"Skip environment detection parsers for assets."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"manifest"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Manifest"})}),(0,d.jsx)(s.td,{children:"A descriptor of named asset bundles and their contents."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"preferences"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"AssetPreferences"})}),(0,d.jsx)(s.td,{children:"Specifies preferences for each loader"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"bundleIdentifier"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"BundleIdentifierOptions"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.strong,{children:"Advanced"})," - Override how bundlesIds are generated."]})]})]})]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,d.jsxs)(s.p,{children:["There are several advanced features available in the ",(0,d.jsx)(s.code,{children:"Assets"})," API that can help you manage your assets more effectively.\nYou can read more about these features in the rest of the documentation:"]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.a,{href:"/8.x/guides/components/assets/resolver",children:"Resolving Assets"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.a,{href:"/8.x/guides/components/assets/manifest",children:"Manifests & Bundles (Recommended)"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.a,{href:"/8.x/guides/components/assets/background-loader",children:"Background Loading"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.a,{href:"/8.x/guides/components/assets/compressed-textures",children:"Compressed Textures"})}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.a,{href:"https://pixijs.download/release/docs/assets.html",children:"Overview"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.a,{href:"https://pixijs.download/release/docs/assets.Assets.html",children:"Assets"})}),"\n"]})]})}function h(e={}){let{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},50065:function(e,s,n){n.d(s,{Z:()=>a,a:()=>r});var t=n(67294);let d={},i=t.createContext(d);function r(e){let s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["8785"],{83090:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,default:()=>h,toc:()=>l,metadata:()=>d,assets:()=>p,contentTitle:()=>u});var d=JSON.parse('{"id":"examples/basic/particle-container","title":"Particle Container","description":"","source":"@site/versioned_docs/version-7.x/examples/basic/particle-container.mdx","sourceDirName":"examples/basic","slug":"/examples/basic/particle-container","permalink":"/7.x/examples/basic/particle-container","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":4,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":4,"custom_edit_url":null,"title":"Particle Container"},"sidebar":"examplesSidebar","previous":{"title":"Blend Modes","permalink":"/7.x/examples/basic/blend-modes"},"next":{"title":"Simple Plane","permalink":"/7.x/examples/basic/simple-plane"}}'),i=t(85893),s=t(50065),a=t(31531),o=t(99883);let r={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:4,custom_edit_url:null,title:"Particle Container"},u=void 0,p={},l=[];function c(e){return(0,i.jsx)(a.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\nconst sprites = new PIXI.ParticleContainer(10000, {\n  scale: true,\n  position: true,\n  rotation: true,\n  uvs: true,\n  alpha: true,\n});\n\napp.stage.addChild(sprites);\n\n// create an array to store all the sprites\nconst maggots = [];\n\nconst totalSprites = app.renderer instanceof PIXI.Renderer ? 10000 : 100;\n\nfor (let i = 0; i < totalSprites; i++) {\n  // create a new Sprite\n  const dude = PIXI.Sprite.from('https://pixijs.com/assets/maggot_tiny.png');\n\n  // set the anchor point so the texture is centerd on the sprite\n  dude.anchor.set(0.5);\n\n  // different maggots, different sizes\n  dude.scale.set(0.8 + Math.random() * 0.3);\n\n  // scatter them all\n  dude.x = Math.random() * app.screen.width;\n  dude.y = Math.random() * app.screen.height;\n\n  dude.tint = Math.random() * 0x808080;\n\n  // create a random direction in radians\n  dude.direction = Math.random() * Math.PI * 2;\n\n  // this number will be used to modify the direction of the sprite over time\n  dude.turningSpeed = Math.random() - 0.8;\n\n  // create a random speed between 0 - 2, and these maggots are slooww\n  dude.speed = (2 + Math.random() * 2) * 0.2;\n\n  dude.offset = Math.random() * 100;\n\n  // finally we push the dude into the maggots array so it it can be easily accessed later\n  maggots.push(dude);\n\n  sprites.addChild(dude);\n}\n\n// create a bounding box box for the little maggots\nconst dudeBoundsPadding = 100;\nconst dudeBounds = new PIXI.Rectangle(\n  -dudeBoundsPadding,\n  -dudeBoundsPadding,\n  app.screen.width + dudeBoundsPadding * 2,\n  app.screen.height + dudeBoundsPadding * 2,\n);\n\nlet tick = 0;\n\napp.ticker.add(() => {\n  // iterate through the sprites and update their position\n  for (let i = 0; i < maggots.length; i++) {\n    const dude = maggots[i];\n\n    dude.scale.y = 0.95 + Math.sin(tick + dude.offset) * 0.05;\n    dude.direction += dude.turningSpeed * 0.01;\n    dude.x += Math.sin(dude.direction) * (dude.speed * dude.scale.y);\n    dude.y += Math.cos(dude.direction) * (dude.speed * dude.scale.y);\n    dude.rotation = -dude.direction + Math.PI;\n\n    // wrap the maggots\n    if (dude.x < dudeBounds.x) {\n      dude.x += dudeBounds.width;\n    } else if (dude.x > dudeBounds.x + dudeBounds.width) {\n      dude.x -= dudeBounds.width;\n    }\n\n    if (dude.y < dudeBounds.y) {\n      dude.y += dudeBounds.height;\n    } else if (dude.y > dudeBounds.y + dudeBounds.height) {\n      dude.y -= dudeBounds.height;\n    }\n  }\n\n  // increment the ticker\n  tick += 0.1;\n});\n"},dependencies:{"pixi.js":o.npm}})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
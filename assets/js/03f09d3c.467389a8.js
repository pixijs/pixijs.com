"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["8125"],{24398:function(e,t,i){i.r(t),i.d(t,{frontMatter:()=>o,default:()=>x,toc:()=>c,metadata:()=>s,assets:()=>u,contentTitle:()=>l});var s=JSON.parse('{"id":"examples/graphics/svg-texture","title":"Svg Texture","description":"","source":"@site/docs/examples/graphics/svg-texture.mdx","sourceDirName":"examples/graphics","slug":"/examples/graphics/svg-texture","permalink":"/8.x/examples/graphics/svg-texture","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":3,"custom_edit_url":null,"title":"Svg Texture"},"sidebar":"examplesSidebar","previous":{"title":"Svg Texture Large","permalink":"/8.x/examples/graphics/svg-texture-large"},"next":{"title":"Svg","permalink":"/8.x/examples/graphics/svg"}}'),n=i(85893),a=i(50065),r=i(31531),p=i(52946);let o={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:3,custom_edit_url:null,title:"Svg Texture"},l=void 0,u={},c=[];function d(e){return(0,n.jsx)(r.N,{files:{"index.js":p.Z}})}function x(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},31531:function(e,t,i){i.d(t,{N:()=>r});var s=i(958),n=i(18146),a=i(85893);function r(e){return(0,n.J)("example",!0),(0,a.jsx)(s.M,{height:"calc(100vh - 325px)",fontSize:14,...e})}},52946:function(e,t,i){i.d(t,{Z:()=>s});let s="import { Application, Assets, Sprite } from 'pixi.js';\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({ antialias: true, resizeTo: window });\n\n  // Append the application canvas to the document body\n  document.body.appendChild(app.canvas);\n\n  const tigerTexture = await Assets.load({\n    src: 'https://pixijs.com/assets/tiger.svg',\n  });\n\n  const sprite = new Sprite(tigerTexture);\n\n  // line it up as this svg is not centered\n  const bounds = sprite.getLocalBounds();\n\n  sprite.pivot.set((bounds.x + bounds.width) / 2, (bounds.y + bounds.height) / 2);\n\n  sprite.position.set(app.screen.width / 2, app.screen.height / 2);\n\n  app.stage.addChild(sprite);\n\n  app.ticker.add(() => {\n    sprite.rotation += 0.01;\n    sprite.scale.set(2 + Math.sin(sprite.rotation));\n  });\n})();\n"}}]);
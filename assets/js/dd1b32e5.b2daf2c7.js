"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["839"],{8477:function(n,t,e){e.r(t),e.d(t,{frontMatter:()=>r,default:()=>g,toc:()=>h,metadata:()=>i,assets:()=>l,contentTitle:()=>c});var i=JSON.parse('{"id":"examples/masks/graphics","title":"Graphics","description":"","source":"@site/versioned_docs/version-7.x/examples/masks/graphics.mdx","sourceDirName":"examples/masks","slug":"/examples/masks/graphics","permalink":"/7.x/examples/masks/graphics","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":0,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":0,"custom_edit_url":null,"title":"Graphics"},"sidebar":"examplesSidebar","previous":{"title":"Slider","permalink":"/7.x/examples/events/slider"},"next":{"title":"Sprite","permalink":"/7.x/examples/masks/sprite"}}'),s=e(85893),a=e(50065),o=e(31531),p=e(99883);let r={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:0,custom_edit_url:null,title:"Graphics"},c=void 0,l={},h=[];function d(n){return(0,s.jsx)(o.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ antialias: true, resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\napp.stage.eventMode = 'static';\n\nconst bg = PIXI.Sprite.from('https://pixijs.com/assets/bg_rotate.jpg');\n\nbg.anchor.set(0.5);\n\nbg.x = app.screen.width / 2;\nbg.y = app.screen.height / 2;\n\napp.stage.addChild(bg);\n\nconst container = new PIXI.Container();\n\ncontainer.x = app.screen.width / 2;\ncontainer.y = app.screen.height / 2;\n\n// add a bunch of sprites\nconst bgFront = PIXI.Sprite.from('https://pixijs.com/assets/bg_scene_rotate.jpg');\n\nbgFront.anchor.set(0.5);\n\nconst light2 = PIXI.Sprite.from('https://pixijs.com/assets/light_rotate_2.png');\n\nlight2.anchor.set(0.5);\n\nconst light1 = PIXI.Sprite.from('https://pixijs.com/assets/light_rotate_1.png');\n\nlight1.anchor.set(0.5);\n\nconst panda = PIXI.Sprite.from('https://pixijs.com/assets/panda.png');\n\npanda.anchor.set(0.5);\n\ncontainer.addChild(bgFront, light2, light1, panda);\n\napp.stage.addChild(container);\n\n// let's create a moving shape\nconst thing = new PIXI.Graphics();\n\napp.stage.addChild(thing);\nthing.x = app.screen.width / 2;\nthing.y = app.screen.height / 2;\nthing.lineStyle(0);\n\ncontainer.mask = thing;\n\nlet count = 0;\n\napp.stage.on('pointertap', () => {\n  if (!container.mask) {\n    container.mask = thing;\n  } else {\n    container.mask = null;\n  }\n});\n\nconst help = new PIXI.Text('Click or tap to turn masking on / off.', {\n  fontFamily: 'Arial',\n  fontSize: 12,\n  fontWeight: 'bold',\n  fill: 'white',\n});\n\nhelp.y = app.screen.height - 26;\nhelp.x = 10;\napp.stage.addChild(help);\n\napp.ticker.add(() => {\n  bg.rotation += 0.01;\n  bgFront.rotation -= 0.01;\n\n  light1.rotation += 0.02;\n  light2.rotation += 0.01;\n\n  panda.scale.x = 1 + Math.sin(count) * 0.04;\n  panda.scale.y = 1 + Math.cos(count) * 0.04;\n\n  count += 0.1;\n\n  thing.clear();\n\n  thing.beginFill(0x8bc5ff, 0.4);\n  thing.moveTo(-120 + Math.sin(count) * 20, -100 + Math.cos(count) * 20);\n  thing.lineTo(120 + Math.cos(count) * 20, -100 + Math.sin(count) * 20);\n  thing.lineTo(120 + Math.sin(count) * 20, 100 + Math.cos(count) * 20);\n  thing.lineTo(-120 + Math.cos(count) * 20, 100 + Math.sin(count) * 20);\n  thing.rotation = count * 0.1;\n});\n"},dependencies:{"pixi.js":p.npm}})}function g(n={}){let{wrapper:t}={...(0,a.a)(),...n.components};return t?(0,s.jsx)(t,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},31531:function(n,t,e){e.d(t,{N:()=>o});var i=e(958),s=e(18146),a=e(85893);function o(n){return(0,s.J)("example",!0),(0,a.jsx)(i.M,{height:"calc(100vh - 325px)",fontSize:14,...n})}},99883:function(n){n.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
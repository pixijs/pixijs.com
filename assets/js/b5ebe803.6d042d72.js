"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["4955"],{91897:function(e,s,r){r.r(s),r.d(s,{default:()=>p,frontMatter:()=>d,metadata:()=>t,assets:()=>a,toc:()=>c,contentTitle:()=>o});var t=JSON.parse('{"id":"guides/components/assets/compressed-textures","title":"Compressed Textures","description":"Learn how to use compressed textures in PixiJS for efficient memory usage and GPU performance.","source":"@site/docs/guides/components/assets/compressed-textures.md","sourceDirName":"guides/components/assets","slug":"/guides/components/assets/compressed-textures","permalink":"/8.x/guides/components/assets/compressed-textures","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/components/assets/compressed-textures.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"description":"Learn how to use compressed textures in PixiJS for efficient memory usage and GPU performance."},"sidebar":"guidesSidebar","previous":{"title":"Background Loader","permalink":"/8.x/guides/components/assets/background-loader"},"next":{"title":"SVG\'s","permalink":"/8.x/guides/components/assets/svg"}}'),i=r("85893"),n=r("50065");let d={sidebar_position:3,description:"Learn how to use compressed textures in PixiJS for efficient memory usage and GPU performance."},o="Compressed Textures",a={},c=[{value:"Supported Compressed Texture Formats",id:"supported-compressed-texture-formats",level:2},{value:"Registering Loaders",id:"registering-loaders",level:2},{value:"Using Compressed Textures in Assets",id:"using-compressed-textures-in-assets",level:2},{value:"Integration with AssetPack",id:"integration-with-assetpack",level:2},{value:"Example",id:"example",level:3}];function l(e){let s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"compressed-textures",children:"Compressed Textures"})}),"\n",(0,i.jsxs)(s.p,{children:["Compressed textures significantly reduce memory usage and GPU upload time, especially on mobile devices or lower-end hardware. PixiJS supports multiple compressed texture formats, but ",(0,i.jsx)(s.strong,{children:"you must configure the appropriate loaders"})," before using them."]}),"\n",(0,i.jsx)(s.h2,{id:"supported-compressed-texture-formats",children:"Supported Compressed Texture Formats"}),"\n",(0,i.jsx)(s.p,{children:"PixiJS provides built-in support for several widely-used compressed texture formats:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Format"}),(0,i.jsx)(s.th,{children:"File Extension"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"DDS"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:".dds"})}),(0,i.jsx)(s.td,{children:"DirectDraw Surface format, supports DXT variants (S3TC)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"KTX"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:".ktx"})}),(0,i.jsx)(s.td,{children:"Khronos format, supports ETC and other schemes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"KTX2"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:".ktx2"})}),(0,i.jsx)(s.td,{children:"Modern container supporting Basis Universal and Supercompressed formats"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.strong,{children:"Basis"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:".basis"})}),(0,i.jsx)(s.td,{children:"Highly compressed format that can transcode to multiple GPU formats"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"registering-loaders",children:"Registering Loaders"}),"\n",(0,i.jsxs)(s.p,{children:["PixiJS does ",(0,i.jsx)(s.strong,{children:"not automatically include compressed texture support"}),". To use these formats, you must explicitly import the necessary loaders before loading any assets:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"import 'pixi.js/dds';\nimport 'pixi.js/ktx';\nimport 'pixi.js/ktx2';\nimport 'pixi.js/basis';\n"})}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:["You only need to import the loaders for the formats you're using. These imports must run ",(0,i.jsx)(s.strong,{children:"before"})," any call to ",(0,i.jsx)(s.code,{children:"Assets.load"}),"."]})}),"\n",(0,i.jsx)(s.h2,{id:"using-compressed-textures-in-assets",children:"Using Compressed Textures in Assets"}),"\n",(0,i.jsx)(s.p,{children:"Once loaders are registered, you can load compressed textures just like any other asset:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-ts",children:"import 'pixi.js/ktx2'; // Import the KTX2 loader\nimport { Assets } from 'pixi.js';\n\nawait Assets.load('textures/background.ktx2');\n"})}),"\n",(0,i.jsx)(s.p,{children:"PixiJS will parse and upload the texture using the correct loader and GPU-compatible transcoding path based on the user's device."}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"integration-with-assetpack",children:"Integration with AssetPack"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://pixijs.io/assetpack",children:(0,i.jsx)(s.strong,{children:"AssetPack"})})," supports automatic generation of compressed texture variants during the build step. You can:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Convert ",(0,i.jsx)(s.code,{children:".png"})," or ",(0,i.jsx)(s.code,{children:".jpg"})," files into ",(0,i.jsx)(s.code,{children:".basis"}),", ",(0,i.jsx)(s.code,{children:".ktx2"}),", or ",(0,i.jsx)(s.code,{children:".dds"})," formats."]}),"\n",(0,i.jsx)(s.li,{children:"Reference compressed files in your manifest using the same aliases or wildcard patterns."}),"\n",(0,i.jsxs)(s.li,{children:["Use the ",(0,i.jsx)(s.strong,{children:"same manifest and loading workflow"})," \u2014 PixiJS will resolve and load the best available variant based on the device."]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(s.p,{children:"Your manifest might include:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n    "bundles": [\n        {\n            "name": "scene",\n            "assets": [\n                {\n                    "alias": "bg",\n                    "src": [\n                      "assets/bg.ktx2",\n                      "assets/bg.basis",\n                      "assets/bg.png"\n                    ]\n                }\n            ]\n        }\n    ]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["PixiJS will try to load ",(0,i.jsx)(s.code,{children:"bg.ktx2"})," or ",(0,i.jsx)(s.code,{children:"bg.basis"})," first if the device supports it, falling back to ",(0,i.jsx)(s.code,{children:"bg.png"})," as needed."]})]})}function p(e={}){let{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);
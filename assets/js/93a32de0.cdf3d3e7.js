"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["6985"],{94057:function(e,i,t){t.r(i),t.d(i,{assets:function(){return l},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return a},metadata:function(){return n},toc:function(){return h}});var n=t(11333),r=t(85893),s=t(50065);let a={title:"PixiJS v8 Beta! \uD83C\uDF89",description:"PixiJS v8 The Future of 2D Web Graphics Is (almost!) Here!",slug:"pixi-v8-beta",authors:["mat","zyie"],tags:["PixiJS","WebGPU","WebGL"],hide_table_of_contents:!0,keywords:["PixiJS","pixi.js","webGL","webGPU","performance","2d rendering","2d webGL","javascript graphics","game development"]},o=void 0,l={authorsImageUrls:[void 0,void 0]},h=[{value:"1. \uD83D\uDE0D Embracing WebGPU",id:"1--embracing-webgpu",level:3},{value:"2. \uD83D\uDE80 Turbocharging Performance",id:"2--turbocharging-performance",level:3},{value:"v7 approach:",id:"v7-approach",level:4},{value:"v8 approach",id:"v8-approach",level:4},{value:"But Wait, There&#39;s More!",id:"but-wait-theres-more",level:3},{value:"Over to you!",id:"over-to-you",level:3},{value:"Steps to install:",id:"steps-to-install",level:3},{value:"Keep in touch!",id:"keep-in-touch",level:3}];function d(e){let i={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"We're thrilled to offer an exclusive preview of the future of 2D web graphics with the Beta release of PixiJS v8. Although not yet finalized, this Beta iteration is packed with killer performance improvements and features we're eager for you to start playing with!"}),"\n",(0,r.jsx)(i.p,{children:"Over the course of a decade\u2014yes, you read that right, ten years!\u2014we've implemented significant changes to the PixiJS engine. But the advancements in this new release are among the most monumental we've ever made!"}),"\n",(0,r.jsx)(i.p,{children:"Two driving factors catalysed our approach to re-engineering the codebase and rendering pipeline in v8:"}),"\n",(0,r.jsx)(i.h3,{id:"1--embracing-webgpu",children:"1. \uD83D\uDE0D Embracing WebGPU"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"PixiJS + webGPU = love",src:t(34421).Z+"",width:"1390",height:"322"})}),"\n",(0,r.jsx)(i.p,{children:"The newcomer WebGPU offers a substantial performance improvement over its predecessor, WebGL. It propels web computations and graphics into a new era, providing a more efficient and robust API. Soon, it will be the go-to method for rendering most GPU-powered content on the web."}),"\n",(0,r.jsxs)(i.p,{children:["This shift is reminiscent of PixiJS's initial launch. At that time, WebGL was new and only available in a handful of desktop browsers, while Canvas was ubiquitous. PixiJS's standout feature was its ability to first attempt rendering with WebGL and then fall back to Canvas as a Plan B. This approach allowed PixiJS content to immediately benefit as WebGL gained traction. Fast forward to today, and WebGL is now ",(0,r.jsx)(i.a,{href:"https://caniuse.com/webgl",children:"available on 95% of browsers"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["History is repeating itself with WebGPU, currently supported in only a few desktop browsers and roughly ",(0,r.jsx)(i.a,{href:"https://caniuse.com/webgpu",children:"27% of the market"}),". However, it's only a matter of time before it becomes universally supported. PixiJS aims to execute the same fallback strategy, allowing you to always leverage the best technology available without needing to rewrite your code. This is precisely what version 8 achieves and will future proof everything we make for another ten years ",":D"]}),"\n",(0,r.jsx)(i.h3,{id:"2--turbocharging-performance",children:"2. \uD83D\uDE80 Turbocharging Performance"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"bunnies",src:t(31280).Z+"",width:"1600",height:"718"})}),"\n",(0,r.jsx)(i.p,{children:"PixiJS has always been synonymous with speed and high-performance graphics. With v8, we've revisited our architecture to optimize both static and dynamic rendering. While v7 is fast, it operates as a somewhat \u2018na\xefve\u2019 renderer."}),"\n",(0,r.jsx)(i.h4,{id:"v7-approach",children:"v7 approach:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Traverse the scene graph and make sure all the transforms are correct"}),"\n",(0,r.jsxs)(i.li,{children:["Traverse the scene graph a second time and do the following","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Build batches to render"}),"\n",(0,r.jsx)(i.li,{children:"Upload the data to the GPU"}),"\n",(0,r.jsx)(i.li,{children:"Draw the batch to the screen."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"v8-approach",children:"v8 approach"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Update the transform of ",(0,r.jsx)(i.em,{children:"only things that changed"})]}),"\n",(0,r.jsx)(i.li,{children:"Traverse the scene graph and construct a set of instructions."}),"\n",(0,r.jsx)(i.li,{children:"Upload all scene data to GPU in one go."}),"\n",(0,r.jsx)(i.li,{children:"Execute rendering based on the instructions."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"There are three key changes to this loop that give us a performance bump."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"First, we update only the elements that have changed. If nothing has moved, no code is executed, optimizing computational overhead."}),"\n",(0,r.jsx)(i.li,{children:"Second, if the scene graph remains unchanged in subsequent frames, we reuse the existing rendering instructions. This avoids the overhead of reconstructing these instructions for each frame."}),"\n",(0,r.jsx)(i.li,{children:"Third, if no elements in the scene change position, the data upload step (Step 3) is entirely skipped, thereby saving bandwidth and further reducing computational work."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"The net effect of these improvements? A decent performance leap across varying use-cases:"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"CPU"})," = time spent by the cpu rendering a single frame\n",(0,r.jsx)(i.strong,{children:"GPU"})," = time spend by the gpu rendering a single frame"]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Bunny Situation"}),(0,r.jsx)(i.th,{children:"V7 CPU"}),(0,r.jsx)(i.th,{children:"V8 CPU"}),(0,r.jsx)(i.th,{children:"CPU Dif"}),(0,r.jsx)(i.th,{children:"V7 GPU"}),(0,r.jsx)(i.th,{children:"V8 GPU"}),(0,r.jsx)(i.th,{children:"GPU dif"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"100k sprites all moving"}),(0,r.jsx)(i.td,{children:"~50ms"}),(0,r.jsx)(i.td,{children:"~15ms"}),(0,r.jsx)(i.td,{children:(0,r.jsx)("div",{style:{backgroundColor:"lightgreen",color:"black"},children:"233%"})}),(0,r.jsx)(i.td,{children:"~9ms"}),(0,r.jsx)(i.td,{children:"~2ms"}),(0,r.jsx)(i.td,{children:(0,r.jsx)("div",{style:{backgroundColor:"lightgreen",color:"black"},children:"350%"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"100k sprites not moving"}),(0,r.jsx)(i.td,{children:"~21ms"}),(0,r.jsx)(i.td,{children:"~0.12ms"}),(0,r.jsx)(i.td,{children:(0,r.jsx)("div",{style:{backgroundColor:"lightgreen",color:"black"},children:"17417%"})}),(0,r.jsx)(i.td,{children:"~9ms"}),(0,r.jsx)(i.td,{children:"~0.5ms"}),(0,r.jsx)(i.td,{children:(0,r.jsx)("div",{style:{backgroundColor:"lightgreen",color:"black"},children:"1700%"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"100k sprites (changing scene structure)"}),(0,r.jsx)(i.td,{children:"~50ms"}),(0,r.jsx)(i.td,{children:"~24ms"}),(0,r.jsx)(i.td,{children:(0,r.jsx)("div",{style:{backgroundColor:"lightgreen",color:"black"},children:"108%"})}),(0,r.jsx)(i.td,{children:"~9ms"}),(0,r.jsx)(i.td,{children:"~2ms"}),(0,r.jsx)(i.td,{children:(0,r.jsx)("div",{style:{backgroundColor:"lightgreen",color:"black"},children:"350%"})})]})]})]}),"\n",(0,r.jsx)(i.p,{children:"These benchmark numbers are based on this Bunnymark test that you can try yourself!"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://goodboydigital.github.io/pixi-bunnymark/dist/?version=v7&count=100000&renderer=webgpu",children:"v7 Bunnymark"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://goodboydigital.github.io/pixi-bunnymark/dist/?version=v8&count=100000&renderer=webgpu",children:"v8 Bunnymark - WebGPU"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://goodboydigital.github.io/pixi-bunnymark/dist/?version=v8&count=100000&renderer=webgl",children:"v8 Bunnymark - WebGL"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/GoodBoyDigital/pixi-bunnymark",children:"Repo"})}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Please have a play, you can fiddle with the parameters in the url to change the number of bunnies. Curious to see what numbers all of you get!"}),"\n",(0,r.jsxs)(i.p,{children:["Best of all, these improvements apply to WebGPU ",(0,r.jsx)(i.em,{children:"and"})," the WebGL renderer. As with all of PixiJs\u2019s party tricks, this all happens automatically ",":D"]}),"\n",(0,r.jsx)(i.h3,{id:"but-wait-theres-more",children:"But Wait, There's More!"}),"\n",(0,r.jsx)(i.p,{children:"While the two key drivers behind this overhaul were performance and usability, we didn't stop there. We've seized this opportunity to enhance the API and introduce a plethora of new features to the engine\u2014far too many to encapsulate in a single post!"}),"\n",(0,r.jsxs)(i.p,{children:["Stay tuned for upcoming blog posts where we'll delve deeper into these additional improvements and API refinements, empowering you to create even more remarkable projects. For a comprehensive overview of what's new, don't miss the ",(0,r.jsx)(i.a,{href:"https://github.com/pixijs/pixijs/releases/tag/v8.0.0-beta.0",children:(0,r.jsx)(i.strong,{children:"release notes"})}),"."]}),"\n",(0,r.jsx)(i.p,{children:"As a crucial note, PixiJS v8 retains much of the familiar API despite undergoing significant internal updates. Our changes are geared toward making PixiJS more robust and user-friendly. When you encounter modifications, rest assured that the v7 methodology will continue to work\u2014you'll simply see a deprecation warning, guiding you towards optimal practices."}),"\n",(0,r.jsx)(i.h3,{id:"over-to-you",children:"Over to you!"}),"\n",(0,r.jsx)(i.p,{children:"As we progress toward the release candidate, now is the perfect time for you to dive in and explore v8. Your feedback at this stage is invaluable for fine-tuning our engine. We invite you to share your thoughts\u2014the good, the bad, and the ugly\u2014report bugs, and even contribute code. Together, we can elevate PixiJS to unprecedented heights."}),"\n",(0,r.jsxs)(i.p,{children:["\uD83D\uDC47 Don't wait\u2014dive right in!\n",(0,r.jsx)(i.a,{href:"https://github.com/pixijs/pixijs/tree/dev",children:"Explore the PixiJS v8 Codebase on GitHub"})]}),"\n",(0,r.jsx)(i.h3,{id:"steps-to-install",children:"Steps to install:"}),"\n",(0,r.jsx)(i.p,{children:"via npm you can install the beta version like so:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"npm install pixi.js@prerelease-v8\n"})}),"\n",(0,r.jsxs)(i.p,{children:["then you can create the most appropriate renderer using the new ",(0,r.jsx)(i.code,{children:"autoDetectRenderer"})," function:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'import { autoDetectRenderer } from "pixi.js";\n\nasync function init()\n{\n  const renderer = await autoDetectRenderer({\n    // any settings\n  }); // will return a WebGL or WebGPU renderer\n}\n'})}),"\n",(0,r.jsx)(i.p,{children:"Start experimenting with PixiJS v8 Beta today and join us in shaping the future of 2D web graphics! \uD83C\uDF89"}),"\n",(0,r.jsx)(i.h3,{id:"keep-in-touch",children:"Keep in touch!"}),"\n",(0,r.jsxs)(i.p,{children:['"To stay in the loop, we invite you to follow ',(0,r.jsx)(i.a,{href:"https://twitter.com/Doormat23",children:"Doormat23"})," and ",(0,r.jsx)(i.a,{href:"https://bsky.app/profile/pixijs.com",children:"PixiJS"})," on social media, where we'll be unveiling more exciting updates shortly. Alternatively, you can join our vibrant community on ",(0,r.jsx)(i.a,{href:"https://discord.gg/nrnDP9wtyX",children:"Discord"})," for direct engagement and real-time conversations."]})]})}function c(e={}){let{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},34421:function(e,i,t){t.d(i,{Z:function(){return n}});let n=t.p+"assets/images/image-1-82838aaed491ecba56cb42c2ee5aa1fa.png"},31280:function(e,i,t){t.d(i,{Z:function(){return n}});let n=t.p+"assets/images/image-72e0ca7d8183d62c10a0f5e8dcc4ebda.png"},11333:function(e){e.exports=JSON.parse('{"permalink":"/blog/pixi-v8-beta","source":"@site/blog/2023-10-03-pixi-v8-beta.md","title":"PixiJS v8 Beta! \uD83C\uDF89","description":"PixiJS v8 The Future of 2D Web Graphics Is (almost!) Here!","date":"2023-10-03T00:00:00.000Z","tags":[{"inline":true,"label":"PixiJS","permalink":"/blog/tags/pixi-js"},{"inline":true,"label":"WebGPU","permalink":"/blog/tags/web-gpu"},{"inline":true,"label":"WebGL","permalink":"/blog/tags/web-gl"}],"readingTime":5.255,"hasTruncateMarker":true,"authors":[{"name":"Mat Groves","title":"PixiJS Creator","url":"https://github.com/GoodboyDigital","socials":{"github":"https://github.com/GoodboyDigital","x":"https://x.com/Doormat23"},"imageURL":"https://github.com/GoodboyDigital.png","key":"mat","page":null},{"name":"Zyie","title":"PixiJS Admin","url":"https://github.com/zyie","socials":{"github":"https://github.com/zyie","x":"https://x.com/_Zyie_","bluesky":"https://bsky.app/profile/zyie.bsky.social"},"imageURL":"https://github.com/zyie.png","key":"zyie","page":null}],"frontMatter":{"title":"PixiJS v8 Beta! \uD83C\uDF89","description":"PixiJS v8 The Future of 2D Web Graphics Is (almost!) Here!","slug":"pixi-v8-beta","authors":["mat","zyie"],"tags":["PixiJS","WebGPU","WebGL"],"hide_table_of_contents":true,"keywords":["PixiJS","pixi.js","webGL","webGPU","performance","2d rendering","2d webGL","javascript graphics","game development"]},"unlisted":false,"prevItem":{"title":"PixiJS v8 Launches! \uD83C\uDF89","permalink":"/blog/pixi-v8-launches"},"nextItem":{"title":"Introducing the PixiJS Universe!","permalink":"/blog/pixi-universe"}}')}}]);
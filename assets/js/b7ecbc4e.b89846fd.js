"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["9095"],{97523:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>r,metadata:()=>i,assets:()=>p,toc:()=>h,contentTitle:()=>o});var i=JSON.parse('{"id":"examples/events/slider","title":"Slider","description":"","source":"@site/versioned_docs/version-7.x/examples/events/slider.mdx","sourceDirName":"examples/events","slug":"/examples/events/slider","permalink":"/7.x/examples/events/slider","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":7,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":7,"custom_edit_url":null,"title":"Slider"},"sidebar":"examplesSidebar","previous":{"title":"Pointer Tracker","permalink":"/7.x/examples/events/pointer-tracker"},"next":{"title":"Graphics","permalink":"/7.x/examples/masks/graphics"}}'),s=t("85893"),a=t("50065"),d=t("67963"),l=t("99883");let r={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:7,custom_edit_url:null,title:"Slider"},o=void 0,p={},h=[];function c(e){return(0,s.jsx)(d.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({\n    antialias: true,\n    background: '#1099bb',\n});\n\ndocument.body.appendChild(app.view);\n\nconst stageHeight = app.screen.height;\nconst stageWidth = app.screen.width;\n\n// Make sure stage covers the whole scene\napp.stage.hitArea = app.screen;\n\n// Make the slider\nconst sliderWidth = 320;\nconst slider = new PIXI.Graphics().beginFill(0x272d37).drawRect(0, 0, sliderWidth, 4);\n\nslider.x = (stageWidth - sliderWidth) / 2;\nslider.y = stageHeight * 0.75;\n\n// Draw the handle\nconst handle = new PIXI.Graphics().beginFill(0xffffff).drawCircle(0, 0, 8);\n\nhandle.y = slider.height / 2;\nhandle.x = sliderWidth / 2;\nhandle.eventMode = 'static';\nhandle.cursor = 'pointer';\n\nhandle.on('pointerdown', onDragStart).on('pointerup', onDragEnd).on('pointerupoutside', onDragEnd);\n\napp.stage.addChild(slider);\nslider.addChild(handle);\n\n// Add bunny whose scale can be changed by user using slider\nconst bunny = app.stage.addChild(PIXI.Sprite.from('https://pixijs.com/assets/bunny.png'));\n\nbunny.texture.baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST;\nbunny.scale.set(3);\nbunny.anchor.set(0.5);\nbunny.x = stageWidth / 2;\nbunny.y = stageHeight / 2;\n\n// Add title\nconst title = new PIXI.Text('Drag the handle to change the scale of bunny.', {\n    fill: '#272d37',\n    fontFamily: 'Roboto',\n    fontSize: 20,\n    align: 'center',\n});\n\ntitle.roundPixels = true;\ntitle.x = stageWidth / 2;\ntitle.y = 40;\ntitle.anchor.set(0.5, 0);\napp.stage.addChild(title);\n\n// Listen to pointermove on stage once handle is pressed.\nfunction onDragStart()\n{\n    app.stage.eventMode = 'static';\n    app.stage.addEventListener('pointermove', onDrag);\n}\n\n// Stop dragging feedback once the handle is released.\nfunction onDragEnd(e)\n{\n    app.stage.eventMode = 'auto';\n    app.stage.removeEventListener('pointermove', onDrag);\n}\n\n// Update the handle's position & bunny's scale when the handle is moved.\nfunction onDrag(e)\n{\n    const halfHandleWidth = handle.width / 2;\n    // Set handle y-position to match pointer, clamped to (4, screen.height - 4).\n\n    handle.x = Math.max(halfHandleWidth, Math.min(slider.toLocal(e.global).x, sliderWidth - halfHandleWidth));\n    // Normalize handle position between -1 and 1.\n    const t = 2 * (handle.x / sliderWidth - 0.5);\n\n    bunny.scale.set(3 * (1.1 + t));\n}\n"},dependencies:{"pixi.js":l.npm}})}function u(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
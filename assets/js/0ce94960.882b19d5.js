"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["7523"],{57186:function(e,r,o){o.r(r),o.d(r,{default:()=>h,frontMatter:()=>c,metadata:()=>n,assets:()=>t,toc:()=>d,contentTitle:()=>l});var n=JSON.parse('{"id":"guides/components/color","title":"Color","description":"Learn how to use the Color class in PixiJS for color manipulation, including various formats like hex, RGB, and named colors.","source":"@site/docs/guides/components/color.md","sourceDirName":"guides/components","slug":"/guides/components/color","permalink":"/8.x/guides/components/color","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/components/color.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"description":"Learn how to use the Color class in PixiJS for color manipulation, including various formats like hex, RGB, and named colors."},"sidebar":"guidesSidebar","previous":{"title":"Accessibility","permalink":"/8.x/guides/components/accessibility"},"next":{"title":"Ticker","permalink":"/8.x/guides/components/ticker"}}'),i=o("85893"),s=o("50065");let c={sidebar_position:10,description:"Learn how to use the Color class in PixiJS for color manipulation, including various formats like hex, RGB, and named colors."},l="Color",t={},d=[{value:"Using <code>Color</code> and <code>ColorSource</code>",id:"using-color-and-colorsource",level:2},{value:"API Reference",id:"api-reference",level:2}];function a(e){let r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"color",children:"Color"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"Color"})," class in PixiJS is a flexible utility for representing colors. It is used throughout the rendering pipeline for things like tints, fills, strokes, gradients, and more."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"import { Color, Sprite, Texture, Graphics } from 'pixi.js';\n\nconst red = new Color('red'); // Named color\nconst green = new Color(0x00ff00); // Hex\nconst blue = new Color('#0000ff'); // Hex string\nconst rgba = new Color({ r: 255, g: 0, b: 0, a: 0.5 }); // RGBA object\n\nconsole.log(red.toArray()); // [1, 0, 0, 1]\nconsole.log(green.toHex()); // \"#00ff00\"\n\nconst sprite = new Sprite(Texture.WHITE);\nsprite.tint = red; // Works directly with a Color instance\n"})}),"\n",(0,i.jsxs)(r.h2,{id:"using-color-and-colorsource",children:["Using ",(0,i.jsx)(r.code,{children:"Color"})," and ",(0,i.jsx)(r.code,{children:"ColorSource"})]}),"\n",(0,i.jsxs)(r.p,{children:["PixiJS supports many color formats through the ",(0,i.jsx)(r.code,{children:"ColorSource"})," type:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Color names: ",(0,i.jsx)(r.code,{children:"'red'"}),", ",(0,i.jsx)(r.code,{children:"'white'"}),", ",(0,i.jsx)(r.code,{children:"'blue'"}),", etc."]}),"\n",(0,i.jsxs)(r.li,{children:["Hex integers: ",(0,i.jsx)(r.code,{children:"0xffcc00"})]}),"\n",(0,i.jsxs)(r.li,{children:["Hex strings: ",(0,i.jsx)(r.code,{children:"'ffcc00'"}),", ",(0,i.jsx)(r.code,{children:"'#f00'"}),", ",(0,i.jsx)(r.code,{children:"'0xffcc00ff'"})]}),"\n",(0,i.jsxs)(r.li,{children:["RGB(A) objects: ",(0,i.jsx)(r.code,{children:"{ r: 255, g: 0, b: 0 }"}),", ",(0,i.jsx)(r.code,{children:"{ r: 255, g: 0, b: 0, a: 0.5 }"})]}),"\n",(0,i.jsxs)(r.li,{children:["RGB(A) strings: ",(0,i.jsx)(r.code,{children:"'rgb(255,0,0)'"}),", ",(0,i.jsx)(r.code,{children:"'rgba(255,0,0,0.5)'"})]}),"\n",(0,i.jsxs)(r.li,{children:["RGB(A) arrays: ",(0,i.jsx)(r.code,{children:"[1, 0, 0]"}),", ",(0,i.jsx)(r.code,{children:"[1, 0, 0, 0.5]"})]}),"\n",(0,i.jsxs)(r.li,{children:["Typed arrays: ",(0,i.jsx)(r.code,{children:"Uint8Array"}),", ",(0,i.jsx)(r.code,{children:"Float32Array"})]}),"\n",(0,i.jsx)(r.li,{children:"HSL/HSV objects and strings"}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.code,{children:"Color"})," instances"]}),"\n"]}),"\n",(0,i.jsxs)(r.p,{children:["Whenever you see a color-related property (e.g., ",(0,i.jsx)(r.code,{children:"fill"}),", ",(0,i.jsx)(r.code,{children:"tint"}),", ",(0,i.jsx)(r.code,{children:"stroke"}),"), you can use any of these formats. The library will automatically convert them to the appropriate format internally."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"import { Graphics, Sprite, Texture } from 'pixi.js';\n\nconst sprite = new Sprite(Texture.WHITE);\nsprite.tint = 'red'; // converted internally\n\nconst graphics = new Graphics();\ngraphics.fill({ color: '#00ff00' }); // Also converted internally\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://pixijs.download/release/docs/color.Color.html",children:"Color"})}),"\n"]})]})}function h(e={}){let{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["5934"],{68750:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>r,metadata:()=>d,assets:()=>c,toc:()=>p,contentTitle:()=>u});var d=JSON.parse('{"id":"examples/basic/particle-container","title":"Particle Container","description":"","source":"@site/docs/examples/basic/particle-container.mdx","sourceDirName":"examples/basic","slug":"/examples/basic/particle-container","permalink":"/8.x/examples/basic/particle-container","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":3,"custom_edit_url":null,"title":"Particle Container"},"sidebar":"examplesSidebar","previous":{"title":"Tinting","permalink":"/8.x/examples/basic/tinting"},"next":{"title":"Blend Modes","permalink":"/8.x/examples/basic/blend-modes"}}'),i=t("85893"),a=t("50065"),s=t("43076"),o=t("55911");let r={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:3,custom_edit_url:null,title:"Particle Container"},u=void 0,c={},p=[];function l(e){return(0,i.jsx)(s.N,{files:{"index.js":o.Z}})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},55911:function(e,n,t){t.d(n,{Z:function(){return d}});let d="import { Application, Assets, Container, Rectangle, Sprite } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ background: '#1099bb', resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    // Load the maggot texture\n    const texture = await Assets.load('https://pixijs.com/assets/maggot_tiny.png');\n\n    // Create a container for all the maggots particles and add it to the stage\n    const sprites = new Container();\n\n    app.stage.addChild(sprites);\n\n    // Create an array to store all the sprites\n    const maggots = [];\n\n    const totalSprites = 10000;\n\n    for (let i = 0; i < totalSprites; i++)\n    {\n        // Create a new maggot Sprite\n        const dude = new Sprite(texture);\n\n        // Set the anchor point so the texture is centerd on the sprite\n        dude.anchor.set(0.5);\n\n        // Different maggots, different sizes\n        dude.scale.set(0.8 + Math.random() * 0.3);\n\n        // Scatter them all\n        dude.x = Math.random() * app.screen.width;\n        dude.y = Math.random() * app.screen.height;\n\n        dude.tint = Math.random() * 0x808080;\n\n        // Create a random direction in radians\n        dude.direction = Math.random() * Math.PI * 2;\n\n        // This number will be used to modify the direction of the sprite over time\n        dude.turningSpeed = Math.random() - 0.8;\n\n        // Create a random speed between 0 - 2, and these maggots are slooww\n        dude.speed = (2 + Math.random() * 2) * 0.2;\n\n        dude.offset = Math.random() * 100;\n\n        // Finally we push the dude into the maggots array so it it can be easily accessed later\n        maggots.push(dude);\n\n        sprites.addChild(dude);\n    }\n\n    // Create a bounding box box for the little maggots\n    const dudeBoundsPadding = 100;\n    const dudeBounds = new Rectangle(\n        -dudeBoundsPadding,\n        -dudeBoundsPadding,\n        app.screen.width + dudeBoundsPadding * 2,\n        app.screen.height + dudeBoundsPadding * 2,\n    );\n\n    let tick = 0;\n\n    app.ticker.add(() =>\n    {\n        // Iterate through the sprites and update their position\n        for (let i = 0; i < maggots.length; i++)\n        {\n            const dude = maggots[i];\n\n            dude.scale.y = 0.95 + Math.sin(tick + dude.offset) * 0.05;\n            dude.direction += dude.turningSpeed * 0.01;\n            dude.x += Math.sin(dude.direction) * (dude.speed * dude.scale.y);\n            dude.y += Math.cos(dude.direction) * (dude.speed * dude.scale.y);\n            dude.rotation = -dude.direction + Math.PI;\n\n            // Wrap the maggots\n            if (dude.x < dudeBounds.x)\n            {\n                dude.x += dudeBounds.width;\n            }\n            else if (dude.x > dudeBounds.x + dudeBounds.width)\n            {\n                dude.x -= dudeBounds.width;\n            }\n\n            if (dude.y < dudeBounds.y)\n            {\n                dude.y += dudeBounds.height;\n            }\n            else if (dude.y > dudeBounds.y + dudeBounds.height)\n            {\n                dude.y -= dudeBounds.height;\n            }\n        }\n\n        // Increment the ticker\n        tick += 0.1;\n    });\n})();\n"}}]);
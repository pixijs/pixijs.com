"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["1305"],{21891:function(e,n,i){i.r(n),i.d(n,{frontMatter:()=>a,default:()=>h,toc:()=>o,metadata:()=>r,assets:()=>l,contentTitle:()=>c});var r=JSON.parse('{"id":"guides/components/scene-objects/particle-container","title":"Particle Container","description":"Learn how to use the ParticleContainer and Particle classes in PixiJS for high-performance particle systems.","source":"@site/docs/guides/components/scene-objects/particle-container.md","sourceDirName":"guides/components/scene-objects","slug":"/guides/components/scene-objects/particle-container","permalink":"/8.x/guides/components/scene-objects/particle-container","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/components/scene-objects/particle-container.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"description":"Learn how to use the ParticleContainer and Particle classes in PixiJS for high-performance particle systems."},"sidebar":"guidesSidebar","previous":{"title":"Mesh","permalink":"/8.x/guides/components/scene-objects/mesh/"},"next":{"title":"Events / Interaction","permalink":"/8.x/guides/components/events"}}'),t=i(85893),s=i(50065);let a={sidebar_position:7,description:"Learn how to use the ParticleContainer and Particle classes in PixiJS for high-performance particle systems."},c="Particle Container",l={},o=[{value:"<strong>Why Use ParticleContainer?</strong>",id:"why-use-particlecontainer",level:2},{value:"<strong>Performance Tip: Static vs. Dynamic</strong>",id:"performance-tip-static-vs-dynamic",level:3},{value:"<strong>Limitations and API Differences</strong>",id:"limitations-and-api-differences",level:2},{value:"\u274C Not Available:",id:"-not-available",level:3},{value:"\u2705 Use Instead:",id:"-use-instead",level:3},{value:"<strong>Creating a Particle</strong>",id:"creating-a-particle",level:2},{value:"<strong>Particle Example</strong>",id:"particle-example",level:3},{value:"<strong>API Reference</strong>",id:"api-reference",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"particle-container",children:"Particle Container"})}),"\n",(0,t.jsxs)(n.p,{children:["PixiJS v8 introduces a high-performance particle system via the ",(0,t.jsx)(n.code,{children:"ParticleContainer"})," and ",(0,t.jsx)(n.code,{children:"Particle"})," classes. Designed for rendering vast numbers of lightweight visuals\u2014like sparks, bubbles, bunnies, or explosions\u2014this system provides raw speed by stripping away all non-essential overhead."]}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.strong,{children:"Experimental API Notice"})}),(0,t.jsxs)(n.p,{children:["The Particle API is stable but ",(0,t.jsx)(n.strong,{children:"experimental"}),". Its interface may evolve in future PixiJS versions. We welcome feedback to help guide its development."]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { ParticleContainer, Particle, Texture } from 'pixi.js';\n\nconst texture = Texture.from('bunny.png');\n\nconst container = new ParticleContainer({\n  dynamicProperties: {\n    position: true, // default\n    vertex: false,\n    rotation: false,\n    color: false,\n  },\n});\n\nfor (let i = 0; i < 100000; i++) {\n  const particle = new Particle({\n    texture,\n    x: Math.random() * 800,\n    y: Math.random() * 600,\n  });\n\n  container.addParticle(particle);\n}\n\napp.stage.addChild(container);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"why-use-particlecontainer",children:(0,t.jsx)(n.strong,{children:"Why Use ParticleContainer?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Extreme performance"}),": Render hundreds of thousands or even millions of particles with high FPS."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lightweight design"}),": Particles are more efficient than ",(0,t.jsx)(n.code,{children:"Sprite"}),", lacking extra features like children, events, or filters."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fine-grained control"}),": Optimize rendering by declaring which properties are dynamic (updated every frame) or static (set once)."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"performance-tip-static-vs-dynamic",children:(0,t.jsx)(n.strong,{children:"Performance Tip: Static vs. Dynamic"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic properties"})," are uploaded to the GPU every frame."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Static properties"})," are uploaded only when ",(0,t.jsx)(n.code,{children:"update()"})," is called."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Declare your needs explicitly:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const container = new ParticleContainer({\n  dynamicProperties: {\n    position: true,\n    rotation: true,\n    vertex: false,\n    color: false,\n  },\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:"If you later modify a static property or the particle list, you must call:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"container.update();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"limitations-and-api-differences",children:(0,t.jsx)(n.strong,{children:"Limitations and API Differences"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ParticleContainer"})," is designed for speed and simplicity. As such, it doesn't support the full ",(0,t.jsx)(n.code,{children:"Container"})," API:"]}),"\n",(0,t.jsx)(n.h3,{id:"-not-available",children:"\u274C Not Available:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"addChild()"}),", ",(0,t.jsx)(n.code,{children:"removeChild()"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"getChildAt()"}),", ",(0,t.jsx)(n.code,{children:"setChildIndex()"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"swapChildren()"}),", ",(0,t.jsx)(n.code,{children:"reparentChild()"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"-use-instead",children:"\u2705 Use Instead:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"addParticle(particle)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"removeParticle(particle)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"removeParticles(beginIndex, endIndex)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"addParticleAt(particle, index)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"removeParticleAt(index)"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["These methods operate on the ",(0,t.jsx)(n.code,{children:".particleChildren"})," array and maintain the internal GPU buffers correctly."]}),"\n",(0,t.jsx)(n.h2,{id:"creating-a-particle",children:(0,t.jsx)(n.strong,{children:"Creating a Particle"})}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Particle"})," supports key display properties, and is far more efficient than ",(0,t.jsx)(n.code,{children:"Sprite"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"particle-example",children:(0,t.jsx)(n.strong,{children:"Particle Example"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const particle = new Particle({\n  texture: Texture.from('spark.png'),\n  x: 200,\n  y: 100,\n  scaleX: 0.8,\n  scaleY: 0.8,\n  rotation: Math.PI / 4,\n  tint: 0xff0000,\n  alpha: 0.5,\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can also use the shorthand:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const particle = new Particle(Texture.from('spark.png'));\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:(0,t.jsx)(n.strong,{children:"API Reference"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://pixijs.download/release/docs/scene.ParticleContainer.html",children:"ParticleContainer"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://pixijs.download/release/docs/scene.Particle.html",children:"Particle"})}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},50065:function(e,n,i){i.d(n,{Z:()=>c,a:()=>a});var r=i(67294);let t={},s=r.createContext(t);function a(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);
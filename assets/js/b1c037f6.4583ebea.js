"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["2560"],{91206:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>o,metadata:()=>a,assets:()=>c,toc:()=>l,contentTitle:()=>p});var a=JSON.parse('{"id":"examples/advanced/scratch-card","title":"Scratch Card","description":"","source":"@site/docs/examples/advanced/scratch-card.mdx","sourceDirName":"examples/advanced","slug":"/examples/advanced/scratch-card","permalink":"/8.x/examples/advanced/scratch-card","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":1,"custom_edit_url":null,"title":"Scratch Card"},"sidebar":"examplesSidebar","previous":{"title":"Slots","permalink":"/8.x/examples/advanced/slots"},"next":{"title":"Star Warp","permalink":"/8.x/examples/advanced/star-warp"}}'),r=t("85893"),i=t("50065"),s=t("67963");let o={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:1,custom_edit_url:null,title:"Scratch Card"},p=void 0,c={},l=[];function d(e){return(0,r.jsx)(s.N,{files:{"index.js":"import { Application, Assets, Graphics, Point, RenderTexture, Sprite } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    // prepare circle texture, that will be our brush\n    const brush = new Graphics().circle(0, 0, 50).fill({ color: 0xffffff });\n\n    // Create a line that will interpolate the drawn points\n    const line = new Graphics();\n\n    // Load the textures\n    await Assets.load(['https://pixijs.com/assets/bg_grass.jpg', 'https://pixijs.com/assets/bg_rotate.jpg']);\n\n    const { width, height } = app.screen;\n    const stageSize = { width, height };\n\n    const background = Object.assign(Sprite.from('https://pixijs.com/assets/bg_grass.jpg'), stageSize);\n    const imageToReveal = Object.assign(Sprite.from('https://pixijs.com/assets/bg_rotate.jpg'), stageSize);\n    const renderTexture = RenderTexture.create(stageSize);\n    const renderTextureSprite = new Sprite(renderTexture);\n\n    imageToReveal.mask = renderTextureSprite;\n\n    app.stage.addChild(background, imageToReveal, renderTextureSprite);\n\n    app.stage.eventMode = 'static';\n    app.stage.hitArea = app.screen;\n    app.stage\n        .on('pointerdown', pointerDown)\n        .on('pointerup', pointerUp)\n        .on('pointerupoutside', pointerUp)\n        .on('pointermove', pointerMove);\n\n    let dragging = false;\n    let lastDrawnPoint = null;\n\n    function pointerMove({ global: { x, y } })\n    {\n        if (dragging)\n        {\n            brush.position.set(x, y);\n            app.renderer.render({\n                container: brush,\n                target: renderTexture,\n                clear: false,\n                skipUpdateTransform: false,\n            });\n            // Smooth out the drawing a little bit to make it look nicer\n            // this connects the previous drawn point to the current one\n            // using a line\n            if (lastDrawnPoint)\n            {\n                line.clear().moveTo(lastDrawnPoint.x, lastDrawnPoint.y).lineTo(x, y).stroke({ width: 100, color: 0xffffff });\n                app.renderer.render({\n                    container: line,\n                    target: renderTexture,\n                    clear: false,\n                    skipUpdateTransform: false,\n                });\n            }\n            lastDrawnPoint = lastDrawnPoint || new Point();\n            lastDrawnPoint.set(x, y);\n        }\n    }\n\n    function pointerDown(event)\n    {\n        dragging = true;\n        pointerMove(event);\n    }\n\n    function pointerUp(event)\n    {\n        dragging = false;\n        lastDrawnPoint = null;\n    }\n})();\n"}})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);
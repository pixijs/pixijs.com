"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["1305"],{81744:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>a,metadata:()=>r,assets:()=>c,toc:()=>d,contentTitle:()=>l});var r=JSON.parse('{"id":"guides/components/scene-objects/particle-container","title":"Particle Container","description":"ixiJS v8 introduces a high-performance particle system via the ParticleContainer and Particle classes. Designed for rendering vast numbers of lightweight visuals\u2014like sparks, bubbles, bunnies, or explosions\u2014this system provides raw speed by stripping away all non-essential overhead.","source":"@site/docs/guides/components/scene-objects/particle-container.md","sourceDirName":"guides/components/scene-objects","slug":"/guides/components/scene-objects/particle-container","permalink":"/8.x/guides/components/scene-objects/particle-container","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/components/scene-objects/particle-container.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"guidesSidebar","previous":{"title":"Mesh","permalink":"/8.x/guides/components/scene-objects/mesh/"},"next":{"title":"Events / Interaction","permalink":"/8.x/guides/components/events"}}'),s=i("85893"),t=i("50065");let a={sidebar_position:7},l="Particle Container",c={},d=[{value:"<strong>Why Use ParticleContainer?</strong>",id:"why-use-particlecontainer",level:2},{value:"<strong>Performance Tip: Static vs. Dynamic</strong>",id:"performance-tip-static-vs-dynamic",level:3},{value:"<strong>Limitations and API Differences</strong>",id:"limitations-and-api-differences",level:2},{value:"\u274C Not Available:",id:"-not-available",level:3},{value:"\u2705 Use Instead:",id:"-use-instead",level:3},{value:"<strong>Creating a Particle</strong>",id:"creating-a-particle",level:2},{value:"<strong>Particle Example</strong>",id:"particle-example",level:3},{value:"<strong>API Reference</strong>",id:"api-reference",level:2}];function o(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"particle-container",children:"Particle Container"})}),"\n",(0,s.jsxs)(n.p,{children:["ixiJS v8 introduces a high-performance particle system via the ",(0,s.jsx)(n.code,{children:"ParticleContainer"})," and ",(0,s.jsx)(n.code,{children:"Particle"})," classes. Designed for rendering vast numbers of lightweight visuals\u2014like sparks, bubbles, bunnies, or explosions\u2014this system provides raw speed by stripping away all non-essential overhead."]}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsx)(n.mdxAdmonitionTitle,{children:(0,s.jsx)(n.strong,{children:"Experimental API Notice"})}),(0,s.jsxs)(n.p,{children:["The Particle API is stable but ",(0,s.jsx)(n.strong,{children:"experimental"}),". Its interface may evolve in future PixiJS versions. We welcome feedback to help guide its development."]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { ParticleContainer, Particle, Texture } from 'pixi.js';\n\nconst texture = Texture.from('bunny.png');\n\nconst container = new ParticleContainer({\n    dynamicProperties: {\n        position: true, // default\n        scale: false,\n        rotation: false,\n        color: false,\n    },\n});\n\nfor (let i = 0; i < 100000; i++) {\n    const particle = new Particle({\n        texture,\n        x: Math.random() * 800,\n        y: Math.random() * 600,\n    });\n\n    container.addParticle(particle);\n}\n\napp.stage.addChild(container);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"why-use-particlecontainer",children:(0,s.jsx)(n.strong,{children:"Why Use ParticleContainer?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extreme performance"}),": Render hundreds of thousands or even millions of particles with high FPS."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lightweight design"}),": Particles are more efficient than ",(0,s.jsx)(n.code,{children:"Sprite"}),", lacking extra features like children, events, or filters."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fine-grained control"}),": Optimize rendering by declaring which properties are dynamic (updated every frame) or static (set once)."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance-tip-static-vs-dynamic",children:(0,s.jsx)(n.strong,{children:"Performance Tip: Static vs. Dynamic"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dynamic properties"})," are uploaded to the GPU every frame."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Static properties"})," are uploaded only when ",(0,s.jsx)(n.code,{children:"update()"})," is called."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Declare your needs explicitly:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const container = new ParticleContainer({\n    dynamicProperties: {\n        position: true,\n        rotation: true,\n        scale: false,\n        color: false,\n    },\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you later modify a static property or the particle list, you must call:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"container.update();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"limitations-and-api-differences",children:(0,s.jsx)(n.strong,{children:"Limitations and API Differences"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ParticleContainer"})," is designed for speed and simplicity. As such, it doesn't support the full ",(0,s.jsx)(n.code,{children:"Container"})," API:"]}),"\n",(0,s.jsx)(n.h3,{id:"-not-available",children:"\u274C Not Available:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"addChild()"}),", ",(0,s.jsx)(n.code,{children:"removeChild()"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getChildAt()"}),", ",(0,s.jsx)(n.code,{children:"setChildIndex()"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"swapChildren()"}),", ",(0,s.jsx)(n.code,{children:"reparentChild()"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"-use-instead",children:"\u2705 Use Instead:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"addParticle(particle)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"removeParticle(particle)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"removeParticles(beginIndex, endIndex)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"addParticleAt(particle, index)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"removeParticleAt(index)"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["These methods operate on the ",(0,s.jsx)(n.code,{children:".particleChildren"})," array and maintain the internal GPU buffers correctly."]}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-particle",children:(0,s.jsx)(n.strong,{children:"Creating a Particle"})}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.code,{children:"Particle"})," supports key display properties, and is far more efficient than ",(0,s.jsx)(n.code,{children:"Sprite"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"particle-example",children:(0,s.jsx)(n.strong,{children:"Particle Example"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const particle = new Particle({\n    texture: Texture.from('spark.png'),\n    x: 200,\n    y: 100,\n    scaleX: 0.8,\n    scaleY: 0.8,\n    rotation: Math.PI / 4,\n    tint: 0xff0000,\n    alpha: 0.5,\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can also use the shorthand:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const particle = new Particle(Texture.from('spark.png'));\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"api-reference",children:(0,s.jsx)(n.strong,{children:"API Reference"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pixijs.download/release/docs/scene.ParticleContainer.html",children:"ParticleContainer"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://pixijs.download/release/docs/scene.Particle.html",children:"Particle"})}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);
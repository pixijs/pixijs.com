"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["5680"],{82538:function(e,t,s){s.r(t),s.d(t,{default:()=>d,frontMatter:()=>r,metadata:()=>n,assets:()=>l,toc:()=>c,contentTitle:()=>o});var n=JSON.parse('{"id":"examples/masks/sprite","title":"Sprite","description":"","source":"@site/docs/examples/masks/sprite.mdx","sourceDirName":"examples/masks","slug":"/examples/masks/sprite","permalink":"/8.x/examples/masks/sprite","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":1,"custom_edit_url":null,"title":"Sprite"},"sidebar":"examplesSidebar","previous":{"title":"Graphics","permalink":"/8.x/examples/masks/graphics"},"next":{"title":"Filter","permalink":"/8.x/examples/masks/filter"}}'),a=s("85893"),i=s("50065"),p=s("67963");let r={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:1,custom_edit_url:null,title:"Sprite"},o=void 0,l={},c=[];function m(e){return(0,a.jsx)(p.N,{files:{"index.js":"import { Application, Assets, Point, Sprite } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    // Load textures\n    await Assets.load([\n        'https://pixijs.com/assets/bg_plane.jpg',\n        'https://pixijs.com/assets/cells.png',\n        'https://pixijs.com/assets/flowerTop.png',\n    ]);\n\n    app.stage.eventMode = 'static';\n\n    const bg = Sprite.from('https://pixijs.com/assets/bg_plane.jpg');\n\n    app.stage.addChild(bg);\n\n    const cells = Sprite.from('https://pixijs.com/assets/cells.png');\n\n    cells.scale.set(1.5);\n\n    const mask = Sprite.from('https://pixijs.com/assets/flowerTop.png');\n\n    mask.anchor.set(0.5);\n    mask.x = 310;\n    mask.y = 190;\n\n    cells.mask = mask;\n\n    app.stage.addChild(mask, cells);\n\n    const target = new Point();\n\n    reset();\n\n    function reset()\n    {\n        target.x = Math.floor(Math.random() * 550);\n        target.y = Math.floor(Math.random() * 300);\n    }\n\n    // Animate the mask\n    app.ticker.add(() =>\n    {\n        mask.x += (target.x - mask.x) * 0.1;\n        mask.y += (target.y - mask.y) * 0.1;\n\n        if (Math.abs(mask.x - target.x) < 1)\n        {\n            reset();\n        }\n    });\n})();\n"}})}function d(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);
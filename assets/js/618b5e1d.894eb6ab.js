"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["4799"],{96234:function(e,t,n){n.r(t),n.d(t,{default:()=>l,frontMatter:()=>p,metadata:()=>r,assets:()=>u,toc:()=>c,contentTitle:()=>d});var r=JSON.parse('{"id":"examples/textures/render-texture-advanced","title":"Render Texture Advanced","description":"","source":"@site/versioned_docs/version-7.x/examples/textures/render-texture-advanced.mdx","sourceDirName":"examples/textures","slug":"/examples/textures/render-texture-advanced","permalink":"/7.x/examples/textures/render-texture-advanced","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":2,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":2,"custom_edit_url":null,"title":"Render Texture Advanced"},"sidebar":"examplesSidebar","previous":{"title":"Render Texture Basic","permalink":"/7.x/examples/textures/render-texture-basic"},"next":{"title":"Gradient Basic","permalink":"/7.x/examples/textures/gradient-basic"}}'),s=n("85893"),i=n("50065"),a=n("67963"),o=n("99883");let p={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:2,custom_edit_url:null,title:"Render Texture Advanced"},d=void 0,u={},c=[];function x(e){return(0,s.jsx)(a.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\nconst stageSize = {\n    width: app.screen.width,\n    height: app.screen.height,\n};\n\n// create two render textures... these dynamic textures will be used to draw the scene into itself\nlet renderTexture = PIXI.RenderTexture.create(stageSize);\nlet renderTexture2 = PIXI.RenderTexture.create(stageSize);\nconst currentTexture = renderTexture;\n\n// create a new sprite that uses the render texture we created above\nconst outputSprite = new PIXI.Sprite(currentTexture);\n\n// align the sprite\noutputSprite.x = 400;\noutputSprite.y = 300;\noutputSprite.anchor.set(0.5);\n\n// add to stage\napp.stage.addChild(outputSprite);\n\nconst stuffContainer = new PIXI.Container();\n\nstuffContainer.x = 400;\nstuffContainer.y = 300;\n\napp.stage.addChild(stuffContainer);\n\n// create an array of image ids..\nconst fruits = [\n    'https://pixijs.com/assets/rt_object_01.png',\n    'https://pixijs.com/assets/rt_object_02.png',\n    'https://pixijs.com/assets/rt_object_03.png',\n    'https://pixijs.com/assets/rt_object_04.png',\n    'https://pixijs.com/assets/rt_object_05.png',\n    'https://pixijs.com/assets/rt_object_06.png',\n    'https://pixijs.com/assets/rt_object_07.png',\n    'https://pixijs.com/assets/rt_object_08.png',\n];\n\n// create an array of items\nconst items = [];\n\n// now create some items and randomly position them in the stuff container\nfor (let i = 0; i < 20; i++)\n{\n    const item = PIXI.Sprite.from(fruits[i % fruits.length]);\n\n    item.x = Math.random() * 400 - 200;\n    item.y = Math.random() * 400 - 200;\n    item.anchor.set(0.5);\n    stuffContainer.addChild(item);\n    items.push(item);\n}\n\n// used for spinning!\nlet count = 0;\n\napp.ticker.add(() =>\n{\n    for (let i = 0; i < items.length; i++)\n    {\n        // rotate each item\n        const item = items[i];\n\n        item.rotation += 0.1;\n    }\n\n    count += 0.01;\n\n    // swap the buffers ...\n    const temp = renderTexture;\n\n    renderTexture = renderTexture2;\n    renderTexture2 = temp;\n\n    // set the new texture\n    outputSprite.texture = renderTexture;\n\n    // twist this up!\n    stuffContainer.rotation -= 0.01;\n    outputSprite.scale.set(1 + Math.sin(count) * 0.2);\n\n    // render the stage to the texture\n    // the 'true' clears the texture before the content is rendered\n    app.renderer.render(app.stage, {\n        renderTexture: renderTexture2,\n        clear: false,\n    });\n});\n"},dependencies:{"pixi.js":o.npm}})}function l(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
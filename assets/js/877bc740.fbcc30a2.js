"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["3891"],{97896:function(e,s,i){i.r(s),i.d(s,{default:()=>x,frontMatter:()=>o,metadata:()=>t,assets:()=>d,toc:()=>u,contentTitle:()=>p});var t=JSON.parse('{"id":"examples/masks/filter","title":"Filter","description":"","source":"@site/versioned_docs/version-7.x/examples/masks/filter.mdx","sourceDirName":"examples/masks","slug":"/examples/masks/filter","permalink":"/7.x/examples/masks/filter","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":2,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":2,"custom_edit_url":null,"title":"Filter"},"sidebar":"examplesSidebar","previous":{"title":"Sprite","permalink":"/7.x/examples/masks/sprite"},"next":{"title":"Blur","permalink":"/7.x/examples/filters-basic/blur"}}'),n=i("85893"),r=i("50065"),a=i("67963"),l=i("99883");let o={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:2,custom_edit_url:null,title:"Filter"},p=void 0,d={},u=[];function c(e){return(0,n.jsx)(a.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\n// Inner radius of the circle\nconst radius = 100;\n\n// The blur amount\nconst blurSize = 32;\n\nPIXI.Assets.load('https://pixijs.com/assets/bg_grass.jpg').then((grassTexture) =>\n{\n    const background = new PIXI.Sprite(grassTexture);\n\n    app.stage.addChild(background);\n    background.width = app.screen.width;\n    background.height = app.screen.height;\n\n    const circle = new PIXI.Graphics()\n        .beginFill(0xff0000)\n        .drawCircle(radius + blurSize, radius + blurSize, radius)\n        .endFill();\n\n    circle.filters = [new PIXI.filters.BlurFilter(blurSize)];\n\n    const bounds = new PIXI.Rectangle(0, 0, (radius + blurSize) * 2, (radius + blurSize) * 2);\n    const texture = app.renderer.generateTexture(circle, PIXI.SCALE_MODES.NEAREST, 1, bounds);\n    const focus = new PIXI.Sprite(texture);\n\n    app.stage.addChild(focus);\n    background.mask = focus;\n\n    app.stage.eventMode = 'static';\n    app.stage.hitArea = app.screen;\n    app.stage.on('pointermove', (event) =>\n    {\n        focus.position.x = event.global.x - focus.width / 2;\n        focus.position.y = event.global.y - focus.height / 2;\n    });\n});\n"},dependencies:{"pixi.js":l.npm}})}function x(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
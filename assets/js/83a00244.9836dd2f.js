"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["3610"],{82701:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,default:()=>x,toc:()=>c,metadata:()=>o,assets:()=>d,contentTitle:()=>p});var o=JSON.parse('{"id":"examples/events/logger","title":"Logger","description":"","source":"@site/versioned_docs/version-7.x/examples/events/logger.mdx","sourceDirName":"examples/events","slug":"/examples/events/logger","permalink":"/7.x/examples/events/logger","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":5,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":5,"custom_edit_url":null,"title":"Logger"},"sidebar":"examplesSidebar","previous":{"title":"Custom Hitarea","permalink":"/7.x/examples/events/custom-hitarea"},"next":{"title":"Nested Boundary With Projection","permalink":"/7.x/examples/events/nested-boundary-with-projection"}}'),i=t(85893),s=t(50065),a=t(31531),r=t(99883);let l={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:5,custom_edit_url:null,title:"Logger"},p=void 0,d={},c=[];function g(e){return(0,i.jsx)(a.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\n// This example logs the order of events hover-related events in the scene.\nconst app = new PIXI.Application({\n  antialias: true,\n  background: '#1099bb',\n});\n\ndocument.body.appendChild(app.view);\n\nconst title = app.stage.addChild(\n  new PIXI.Text(\n    `Move your mouse slowly over the boxes to\n    see the order of pointerenter, pointerleave,\n    pointerover, pointerout events on each target!`,\n    {\n      fontSize: 16,\n    },\n  ),\n);\n\ntitle.x = 2;\n\nconst logs = [];\nconst logText = app.stage.addChild(\n  new PIXI.Text('', {\n    fontSize: 14,\n  }),\n);\n\nlogText.y = 80;\nlogText.x = 2;\n\napp.stage.name = 'stage';\n\n// Mount outer black box\nconst blackBox = app.stage.addChild(new PIXI.Graphics().beginFill(0).drawRect(0, 0, 400, 400).endFill());\n\nblackBox.name = 'black box';\nblackBox.x = 400;\n\n// Mount white box inside the white one\nconst whiteBox = blackBox.addChild(new PIXI.Graphics().beginFill(0xffffff).drawRect(100, 100, 200, 200).endFill());\n\nwhiteBox.name = 'white box';\n\n// Enable interactivity everywhere!\napp.stage.eventMode = 'static';\napp.stage.hitArea = app.screen;\nwhiteBox.eventMode = 'static';\nblackBox.eventMode = 'static';\n\nfunction onEvent(e) {\n  const type = e.type;\n  const targetName = e.target.name;\n  const currentTargetName = e.currentTarget.name;\n\n  // Add event to top of logs\n  logs.push(`${currentTargetName} received ${type} event (target is ${targetName})`);\n\n  if (currentTargetName === 'stage' || type === 'pointerenter' || type === 'pointerleave') {\n    logs.push('-----------------------------------------', '');\n  }\n\n  // Prevent logs from growing too long\n  if (logs.length > 30) {\n    while (logs.length > 30) {\n      logs.shift();\n    }\n  }\n\n  // Update logText\n  logText.text = logs.join('\\n');\n}\n\n[app.stage, whiteBox, blackBox].forEach((object) => {\n  object.addEventListener('pointerenter', onEvent);\n  object.addEventListener('pointerleave', onEvent);\n  object.addEventListener('pointerover', onEvent);\n  object.addEventListener('pointerout', onEvent);\n});\n"},dependencies:{"pixi.js":r.npm}})}function x(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["7585"],{8711:function(e,t,n){n.r(t),n.d(t,{default:()=>l,frontMatter:()=>o,metadata:()=>r,assets:()=>d,toc:()=>p,contentTitle:()=>u});var r=JSON.parse('{"id":"examples/textures/texture-rotate","title":"Texture Rotate","description":"","source":"@site/docs/examples/textures/texture-rotate.mdx","sourceDirName":"examples/textures","slug":"/examples/textures/texture-rotate","permalink":"/8.x/examples/textures/texture-rotate","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":0,"custom_edit_url":null,"title":"Texture Rotate"},"sidebar":"examplesSidebar","previous":{"title":"Multipass Mesh","permalink":"/8.x/examples/mesh-and-shaders/multipass-mesh"},"next":{"title":"Render Texture Basic","permalink":"/8.x/examples/textures/render-texture-basic"}}'),a=n("85893"),s=n("50065"),i=n("43076");let o={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:0,custom_edit_url:null,title:"Texture Rotate"},u=void 0,d={},p=[];function x(e){return(0,a.jsx)(i.N,{files:{"index.js":"import { Application, Assets, groupD8, Rectangle, Sprite, Text, Texture } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    // Load the texture\n    const texture = await Assets.load('https://pixijs.com/assets/flowerTop.png');\n\n    // Create rotated textures\n    const textures = [texture];\n    const D8 = groupD8;\n\n    for (let rotate = 1; rotate < 16; rotate++)\n    {\n        const h = D8.isVertical(rotate) ? texture.frame.width : texture.frame.height;\n        const w = D8.isVertical(rotate) ? texture.frame.height : texture.frame.width;\n\n        const { frame } = texture;\n        const crop = new Rectangle(texture.frame.x, texture.frame.y, w, h);\n        const trim = crop;\n        let rotatedTexture;\n\n        if (rotate % 2 === 0)\n        {\n            rotatedTexture = new Texture({\n                source: texture.baseTexture,\n                frame,\n                orig: crop,\n                trim,\n                rotate,\n            });\n        }\n        else\n        {\n            rotatedTexture = new Texture({\n                source: texture.baseTexture,\n                frame,\n                orig: crop,\n                trim,\n                rotate,\n            });\n        }\n        textures.push(rotatedTexture);\n    }\n\n    const offsetX = (app.screen.width / 16) | 0;\n    const offsetY = (app.screen.height / 8) | 0;\n    const gridW = (app.screen.width / 4) | 0;\n    const gridH = (app.screen.height / 5) | 0;\n\n    // Normal rotations and mirrors\n    for (let i = 0; i < 16; i++)\n    {\n        // Create a new Sprite using rotated texture\n        const dude = new Sprite(textures[i < 8 ? i * 2 : (i - 8) * 2 + 1]);\n\n        dude.scale.x = 0.5;\n        dude.scale.y = 0.5;\n        // Show it in grid\n        dude.x = offsetX + gridW * (i % 4);\n        dude.y = offsetY + gridH * ((i / 4) | 0);\n        app.stage.addChild(dude);\n        const text = new Text({\n            text: `rotate = ${dude.texture.rotate}`,\n            style: {\n                fontFamily: 'Courier New',\n                fontSize: '12px',\n                fill: 'white',\n                align: 'left',\n            },\n        });\n\n        text.x = dude.x;\n        text.y = dude.y - 20;\n        app.stage.addChild(text);\n    }\n})();\n"}})}function l(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(x,{...e})}):x(e)}}}]);
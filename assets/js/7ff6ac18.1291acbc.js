"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["6961"],{73808:function(e,t,n){n.d(t,{A1:()=>r});var r={colors:{surface1:"#ffffff",surface2:"#F3F3F3",surface3:"#f5f5f5",clickable:"#959da5",base:"#24292e",disabled:"#d1d4d8",hover:"#24292e",accent:"#24292e"},syntax:{keyword:"#d73a49",property:"#005cc5",plain:"#24292e",static:"#032f62",string:"#032f62",definition:"#6f42c1",punctuation:"#24292e",tag:"#22863a",comment:{color:"#6a737d",fontStyle:"normal"}},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}}},15817:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,default:()=>m,toc:()=>u,metadata:()=>r,assets:()=>d,contentTitle:()=>c});var r=JSON.parse('{"id":"examples/events/nested-boundary-with-projection","title":"Nested Boundary With Projection","description":"<ExampleEditor","source":"@site/versioned_docs/version-7.x/examples/events/nested-boundary-with-projection.mdx","sourceDirName":"examples/events","slug":"/examples/events/nested-boundary-with-projection","permalink":"/7.x/examples/events/nested-boundary-with-projection","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":6,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":6,"custom_edit_url":null,"title":"Nested Boundary With Projection"},"sidebar":"examplesSidebar","previous":{"title":"Logger","permalink":"/7.x/examples/events/logger"},"next":{"title":"Pointer Tracker","permalink":"/7.x/examples/events/pointer-tracker"}}'),o=n(85893),a=n(50065),i=n(31531),s=n(99883);let l={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:6,custom_edit_url:null,title:"Nested Boundary With Projection"},c=void 0,d={},u=[];function p(e){return(0,o.jsx)(i.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\nimport '@pixi/graphics-extras';\n\n// This example shows how you can setup a nested boundary to propagate events\n// into a disjoint scene graph. Here, a camera is used to project an different\n// world onto the canvas.\n\nconst app = new PIXI.Application({\n  antialias: true,\n  background: '#1099bb',\n});\n\ndocument.body.appendChild(app.view);\n\n// A projector renders it's content using projection. The transforms in\n// the contents scene graph don't change if you move the camera. To achieve\n// this, the content is not added as a \"child\" to the projector; however, this\n// means events won't propagate into the content by default.\n//\n// To solve this, we nest our own EventBoundary, and connect it using\n// addEventListener!\nclass Projector extends PIXI.DisplayObject {\n  constructor() {\n    super();\n\n    // The content root to be rendered by this camera.\n    this.content = new PIXI.Container();\n\n    // Temporary matrix to store the original projection transform.\n    this.originalTransform = new PIXI.Matrix();\n\n    // The event boundary that'll map events downstream into the content\n    // scene.\n    this.boundary = new PIXI.EventBoundary(this.content);\n\n    // Override copyMouseData to apply inverse worldTransform on\n    // global coords\n    this.boundary.copyMouseData = (from, to) => {\n      // Apply default implementation first\n      PIXI.EventBoundary.prototype.copyMouseData.call(this.boundary, from, to);\n\n      // Then bring global coords into content's world\n      this.worldTransform.applyInverse(to.global, to.global);\n    };\n\n    // Propagate these events down into the content's scene graph!\n    ['pointerdown', 'pointerup', 'pointermove', 'pointerover', 'pointerout', 'wheel'].forEach((event) => {\n      this.addEventListener(event, (e) => this.boundary.mapEvent(e));\n    });\n\n    this.eventMode = 'static';\n  }\n\n  // Pass through cursor\n  get cursor() {\n    return this.boundary.cursor;\n  }\n\n  set cursor(value) {\n    throw new Error(\"The camera's cursor is derived from its content!\");\n  }\n\n  // Pass through calculateBounds\n  calculateBounds() {\n    const contentBounds = this.content.getBounds();\n\n    this._bounds.addFrameMatrix(\n      this.worldTransform,\n      contentBounds.x,\n      contentBounds.y,\n      contentBounds.width,\n      contentBounds.height,\n    );\n  }\n\n  // Pass through containsPoint\n  containsPoint(point) {\n    return !!this.boundary.hitTest(point.x, point.y);\n  }\n\n  // Render content with projection\n  render(renderer) {\n    renderer.batch.flush();\n\n    const projectionSystem = renderer.projection;\n    const renderTextureSystem = renderer.renderTexture;\n\n    projectionSystem.transform = projectionSystem.transform || new PIXI.Matrix();\n    projectionSystem.transform.copyTo(this.originalTransform);\n    projectionSystem.transform.append(this.worldTransform);\n    projectionSystem.update(null, null, 1, !renderTextureSystem.current);\n\n    this.content.render(renderer);\n\n    renderer.batch.flush();\n\n    projectionSystem.transform.copyFrom(this.originalTransform);\n    projectionSystem.update(null, null, 1, !renderTextureSystem.current);\n  }\n\n  // updateTransform also updates content's transform\n  updateTransform() {\n    super.updateTransform();\n\n    this.content.enableTempParent();\n    this.content.updateTransform();\n    this.content.disableTempParent(null);\n  }\n}\n\n// The projector\nconst projector = app.stage.addChild(new Projector());\n\n// Add coordinate axes!\nprojector.content.addChild(\n  new PIXI.Graphics()\n    .lineStyle({ color: 0, alpha: 0.2, width: 2 })\n    .moveTo(0, -300)\n    .lineTo(0, 600)\n    .moveTo(-100, 0)\n    .lineTo(700, 0),\n);\n\n// Construct the star Graphics\nconst stars = [1, 2, 3].map((i) => new PIXI.Graphics().beginFill(0xffffff, 0.75).drawStar(0, 0, 18 / i, (100 * i) / 2));\n\n// Place the stars\nstars[0].x = 0;\nstars[1].x = 200;\nstars[2].x = 500;\n\n// Add stars to the projector\nprojector.content.addChild(...stars);\n\n// Make projection x+100, y+300\nprojector.x = 100;\nprojector.y = 300;\nprojector.content.hitArea = new PIXI.Rectangle(-100, -300, app.screen.width, app.screen.height);\n// Make hit-area cover the whole screen so we can capture\n// pointermove everywhere!\nprojector.hitArea = projector.content.hitArea;\nprojector.content.eventMode = 'static';\n\n// Make stars interactive & add wheel handlers\nstars.forEach((star) => {\n  // Make star interactive\n  star.eventMode = 'static';\n\n  // Set initial cursor\n  star.cursor = 'zoom-in';\n\n  // Add wheel rotation feedback\n  star.addEventListener('wheel', (e) => {\n    const scroll = Math.sign(e.deltaY) * Math.min(15, Math.abs(e.deltaY));\n\n    star.rotation += scroll / 100;\n  });\n\n  // Add click zoom-in/zoom-out handler\n  star.addEventListener('click', () => {\n    if (star.scale.x === 1) {\n      star.scale.set(1.33);\n      star.cursor = 'zoom-out';\n    } else {\n      star.scale.set(1);\n      star.cursor = 'zoom-in';\n    }\n  });\n});\n\nPIXI.BitmapFont.from(\n  'coordinates',\n  {\n    fontFamily: 'Roboto',\n    fontSize: 16,\n    fill: '#272d37',\n  },\n  { chars: ['Global:() Screen-.,', ['0', '9']] },\n);\n\nconst coordinates = new PIXI.BitmapText('Global: (0, 0)\\nScreen: (0, 0)', {\n  fontName: 'coordinates',\n});\n\ncoordinates.x = 110;\ncoordinates.y = 550;\n\napp.stage.addChild(coordinates);\n\nprojector.content.addEventListener('pointermove', (e) => {\n  const global = `(${e.global.x | 0}, ${e.global.y | 0})`;\n  const screen = `(${e.screen.x | 0}, ${e.screen.y | 0})`;\n\n  coordinates.text = `Global: ${global}\\nScreen: ${screen}`;\n});\n\nconst description = new PIXI.Text(\n  'The (0, 0) world coordinates for the content is located at the center of the first star!' +\n    '\\n  * Mouse wheel over stars to rotate them' +\n    '\\n  * Click to zoom in or out',\n  {\n    fontSize: 16,\n    fontFamily: 'Roboto',\n    fill: '#272d37',\n  },\n);\n\ndescription.position.set(110, 12);\n\napp.stage.addChild(description);\n"},dependencies:{"pixi.js":s.npm,"@pixi/graphics-extras":s.npm}})}function m(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},18064:function(e,t,n){n.d(t,{M:()=>v});var r=n(67294);let o={colors:{surface1:"#242426",surface2:"#444950",surface3:"#44475a",clickable:"#fff",base:"#f8f8f2",disabled:"#6272a4",hover:"#f8f8f2",accent:"#e91e63",error:"#f8f8f2",errorSurface:"#44475a"},syntax:{plain:"#f8f8f2",comment:{color:"#6272a4",fontStyle:"italic"},keyword:"#ff79c6",tag:"#ff79c6",punctuation:"#ff79c6",definition:"#f8f8f2",property:"#50fa7b",static:"#bd93f9",string:"#f1fa8c"},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}},a=e=>{let t=e.split(".");return t[t.length-1]},i=e=>{let t=a(e);return"js"===t?"javascript":"ts"===t?"typescript":"vert"===t||"frag"===t?"glsl":t},s=e=>(0,r.useMemo)(()=>i(e),[e]),l=async e=>{let t=`pixi-definitions-${e}`,n=JSON.parse(localStorage.getItem(t))||null;if(!n)try{let n=await fetch(`https://cdn.jsdelivr.net/npm/pixi.js@${e}/dist/pixi.js.d.ts`),r=await n.text();if(r.startsWith("// Generated by dts-bundle-generator"))return localStorage.setItem(t,JSON.stringify(r)),r;return null}catch(e){return console.error("Failed to fetch pixi.js types:",e),null}return n},c=(e,t="latest")=>{(0,r.useEffect)(()=>{let n=async e=>{let n=await l(t),r=`declare module 'pixi.js' { ${n} }`,o=`
            declare module '*.wgsl' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.vert' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.frag' {
                const shader: 'string';
                export default shader;
            }`;e.languages.typescript.typescriptDefaults.addExtraLib(r,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.javascriptDefaults.addExtraLib(r,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.typescriptDefaults.addExtraLib(o),e.languages.typescript.javascriptDefaults.addExtraLib(o);let{languages:a}=e,i="glsl";a.register({id:i,extensions:[".frag",".vert"]}),a.setLanguageConfiguration(i,{comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"',notIn:["string"]},{open:"'",close:"'",notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]}),a.setMonarchTokensProvider(i,{tokenPostfix:".glsl",defaultToken:"invalid",directives:["#","#define","#undef","#if","#ifdef","#ifndef","#else","#elif","#endif","#error","#pragma","#extension","#version","#line"],macros:["__LINE__","__FILE__","__VERSION__"],storage:["in","out","uniform","layout","attribute","varying","precision","highp","mediump","lowp"],types:["void","bool","int","uint","float","double","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","uvec2","uvec3","uvec4","dvec2","dvec3","dvec4","mat2","mat3","mat4","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","dmat2","dmat3","dmat4","dmat2x2","dmat2x3","dmat2x4","dmat3x2","dmat3x3","dmat3x4","dmat4x2","dmat4x3","dmat4x4","sampler1D","texture1D","image1D","sampler1DShadow","sampler1DArray","texture1DArray","image1DArray","sampler1DArrayShadow","sampler2D","texture2D","image2D","sampler2DShadow","sampler2DArray","texture2DArray","image2DArray","sampler2DArrayShadow","sampler2DMS","texture2DMS","image2DMS","sampler2DMSArray","texture2DMSArray","image2DMSArray","sampler2DRect","texture2DRect","image2DRect","sampler2DRectShadow","sampler3D","texture3D","image3D","samplerCube","textureCube","imageCube","samplerCubeShadow","samplerCubeArray","textureCubeArray","imageCubeArray","samplerCubeArrayShadow","samplerBuffer","textureBuffer","imageBuffer","subpassInput","subpassInputMS","isampler1D","itexture1D","iimage1D","isampler1DArray","itexture1DArray","iimage1DArray","isampler2D","itexture2D","iimage2D","isampler2DArray","itexture2DArray","iimage2DArray","isampler2DMS","itexture2DMS","iimage2DMS","isampler2DMSArray","itexture2DMSArray","iimage2DMSArray","isampler2DRect","itexture2DRect","iimage2DRect","isampler3D","itexture3D","iimage3D","isamplerCube","itextureCube","iimageCube","isamplerCubeArray","itextureCubeArray","iimageCubeArray","isamplerBuffer","itextureBuffer","iimageBuffer","isubpassInput","isubpassInputMS","usampler1D","utexture1D","uimage1D","usampler1DArray","utexture1DArray","uimage1DArray","usampler2D","utexture2D","uimage2D","usampler2DArray","utexture2DArray","uimage2DArray","usampler2DMS","utexture2DMS","uimage2DMS","usampler2DMSArray","utexture2DMSArray","uimage2DMSArray","usampler2DRect","utexture2DRect","uimage2DRect","usampler3D","utexture3D","uimage3D","usamplerCube","utextureCube","uimageCube","usamplerCubeArray","utextureCubeArray","uimageCubeArray","usamplerBuffer","utextureBuffer","uimageBuffer","atomic_uint","usubpassInput","usubpassInputMS","sampler","samplerShadow"],operators:["*","+","-","/","~","!","%","<<",">>","<",">","<=",">=","==","!=","&","^","|","&&","^^","||","=","+=","-=","*=","/=","%=","<<=",">>=","&=","^=","|="],builtin_vars:["gl_VertexID","gl_InstanceID","gl_VertexIndex","gl_InstanceIndex","gl_DrawID","gl_BaseVertex","gl_BaseInstance","gl_Position","gl_PointSize","gl_ClipDistance","gl_CullDistance","gl_Color","gl_SecondaryColor","gl_Normal","gl_Vertex","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_FogCoord"],constants:["gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexUniformComponents","gl_MaxVertexOutputComponents"],intsuffix:"[uU]?",floatsuffix:"([fF]|(fl|FL))?",tokenizer:{root:[[/\/\/.*$/,"comment.line"],[/\/\*/,"comment.block","@comment"],[/#[a-z]*/,{cases:{"@directives":"keyword.control.preprocessor","@default":"invalid"}}],["GL_ES","meta.preprocessor"],[/__[A-Z_]+__/,{cases:{"@macros":"meta.preprocessor","@default":"invalid"}}],[/[{}()\[\]]/,"@brackets"],[/(true|false)/,"constant"],[/[\=\+\-\*\/\>\<\&\|\%\!\^]+/,{cases:{"@operators":"operator","@default":"invalid"}}],[/[a-zA-Z][a-zA-Z0-9_]*(?=\()/,"entity.name.function"],[/[a-zA-Z][a-zA-Z0-9_]*/,{cases:{"@storage":"storage.type","@types":"entity.name.type","@builtin_vars":"keyword","@default":"variable.name"}}],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F](@intsuffix)/,"number.hex"],[/0[0-7](@intsuffix)/,"number.octal"],[/\d+(@intsuffix)/,"number"],[/[;,.]/,"delimiter"]],comment:[["\\*/","comment.block","@pop"],[".*","comment.block"]]}})};e&&n(e)},[e,t])};var d=n(93862),u=n(35283),p=n(51443),m=n(85893);function f({fontSize:e=12,style:t,pixiVersion:n,handleEditorCodeChanged:o}){let{code:a,updateCode:i}=(0,d.m4)(),{sandpack:l}=(0,d.X3)(),f=function(){let[e,t]=(0,r.useState)(null),n=(0,r.useRef)(!0),o=(0,r.useRef)(null);return(0,r.useEffect)(()=>{let e=p._m.__getMonacoInstance();if(e)return void t(e);if(!o.current){p._m.config({"vs/nls":{availableLanguages:{}}});try{o.current=p._m.init(),o.current.then(e=>{n.current&&t(e)}).catch(e=>{n.current&&"cancelation"!==e.type&&console.error("Monaco initialization error:",e)})}catch(e){console.error("Failed to initialize Monaco:",e)}}return()=>{n.current=!1}},[]),e}(),h=s(l.activeFile),{colorMode:x}=(0,u.I)();return c(f,n),(0,m.jsxs)(d.el,{style:{height:"100%",margin:0,...t},children:[(0,m.jsx)(d.aM,{}),(0,m.jsx)("div",{style:{flex:1,paddingTop:8,background:"dark"===x?"#1e1e1e":"#FFFFFE"},children:(0,m.jsx)(p.ML,{width:"100%",height:"100%",language:h,theme:"dark"===x?"vs-dark":"light",defaultValue:a,onChange:e=>{i(e||""),o?.(e)},options:{minimap:{enabled:!1},scrollBeyondLastLine:!1,wordWrap:"on",automaticLayout:!0,fontSize:e}},l.activeFile)})]})}let h=({onClick:e})=>(0,m.jsx)(d.z,{style:{position:"relative"},onClick:e,children:(0,m.jsx)(d.zD,{})}),x=({onSelectionChange:e,defaultSelection:t="both"})=>{let[n,o]=(0,r.useState)(t),{colorMode:a}=(0,u.I)(),i=t=>{o(t),e(t)},s={height:"100%",width:"max-content",padding:"0 16px",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",color:"dark"===a?"#F6F8FA":"#2E3138",border:"none"},l="dark"===a?"#22232A":"#e2e2e2";return(0,m.jsxs)("div",{style:{height:32,width:"100%",overflow:"hidden",backgroundColor:"dark"===a?"#2E3138":"#F6F8FA",display:"flex",justifyContent:"right",borderBottomLeftRadius:4,borderBottomRightRadius:4},children:[(0,m.jsx)("button",{onClick:()=>i("editor"),style:{backgroundColor:"editor"===n?l:"transparent",...s},children:"Editor"}),(0,m.jsx)("button",{onClick:()=>i("preview"),style:{backgroundColor:"preview"===n?l:"transparent",...s},children:"Preview"}),(0,m.jsx)("button",{onClick:()=>i("both"),style:{backgroundColor:"both"===n?l:"transparent",...s},children:"Both"})]})};function g(e){let{viewType:t,showConsole:n,fontSize:o,pixiVersion:a}=e,[i,s]=(0,r.useState)(n),[l,c]=(0,r.useState)(t),u=(0,m.jsx)(m.Fragment,{children:(0,m.jsx)(h,{onClick:()=>s(e=>!e)})});return(0,m.jsxs)("div",{style:{height:"100%",width:"100%",display:"flex",flexDirection:"column"},children:[(0,m.jsxs)(d.sp,{style:{height:"100%",overflow:"hidden",borderBottomLeftRadius:0,borderBottomRightRadius:0,flexWrap:"nowrap"},children:[(0,m.jsx)(f,{fontSize:o,style:{flexGrow:+("preview"!==l),flexShrink:+("preview"!==l),flexBasis:"editor"===l?"100%":0,width:"100%",overflow:"hidden"},pixiVersion:a,handleEditorCodeChanged:e.handleEditorCodeChanged}),(0,m.jsxs)(d.el,{style:{height:"100%",width:"100%"},children:[(0,m.jsx)(d.Gj,{style:{flexGrow:100*("editor"!==l),flexShrink:100*("editor"!==l),flexBasis:"editor"!==l?"100%":0,overflow:"hidden"},showOpenInCodeSandbox:!1,actionsChildren:u}),i&&(0,m.jsx)("div",{style:{flexGrow:35*!!i,flexShrink:35*!!i,flexBasis:i?"35%":0,width:"100%",overflow:"hidden"},children:(0,m.jsx)(d.Tq,{showHeader:!1})})]})]}),(0,m.jsx)(x,{onSelectionChange:e=>{c(e)},defaultSelection:l})]})}var y=n(73808),b=n(646);function v({viewType:e="both",showConsole:t=!1,width:n="100%",height:a="100%",dependencies:i={"pixi.js":"latest"},files:s={"index.js":"// Your code here"},fontSize:l=12,handleEditorCodeChanged:c}){let{colorMode:p}=(0,u.I)(),f={...s};delete f["index.js"];let[h]=(0,r.useState)({"/index.html":{code:'<!doctype html>\n<html>\n  <head>\n    <title>PixiJS Playground</title>\n    <meta charset="UTF-8" />\n    <link rel="stylesheet" href="./styles.css" />\n  </head>\n  <body>\n    <script src="index.js"><\/script>\n  </body>\n</html>\n',hidden:!0},"/styles.css":{code:"body {\n  margin: 0;\n  overflow: hidden;\n}\n",hidden:!0},"sandbox.config.json":{code:'{"infiniteLoopProtection": false}',hidden:!0},"index.ts":{code:"",hidden:!0,active:!1},"index.js":{code:s["index.js"]??"// Your code here",hidden:!1,active:!0},...f});return(0,m.jsx)(b.Z,{children:()=>(0,m.jsx)(d.oT,{template:"vanilla-ts",theme:"dark"===p?o:y.A1,files:h,customSetup:{dependencies:i,entry:"index.html"},style:{height:a,width:n,margin:"0 auto",maxWidth:"100%"},options:{recompileDelay:500},children:(0,m.jsx)(g,{handleEditorCodeChanged:c,viewType:e,showConsole:t,fontSize:l,pixiVersion:i["pixi.js"]})})})}},31531:function(e,t,n){n.d(t,{N:()=>i});var r=n(18064),o=n(18146),a=n(85893);function i(e){return(0,o.J)("example",!0),(0,a.jsx)(r.M,{height:"calc(100vh - 325px)",fontSize:14,...e})}},18146:function(e,t,n){n.d(t,{J:()=>o});var r=n(67294);let o=(e,t=!0)=>{(0,r.useEffect)(()=>{let n=document.querySelector("main > .container");if(null!==n&&t)return n.classList.add(e),()=>{n.classList.remove(e)}},[e,t])}},50065:function(e,t,n){n.d(t,{Z:()=>s,a:()=>i});var r=n(67294);let o={},a=r.createContext(o);function i(e){let t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:t},e.children)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
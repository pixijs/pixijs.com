"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["5021"],{73808:function(e,s,n){n.d(s,{A1:()=>i});var i={colors:{surface1:"#ffffff",surface2:"#F3F3F3",surface3:"#f5f5f5",clickable:"#959da5",base:"#24292e",disabled:"#d1d4d8",hover:"#24292e",accent:"#24292e"},syntax:{keyword:"#d73a49",property:"#005cc5",plain:"#24292e",static:"#032f62",string:"#032f62",definition:"#6f42c1",punctuation:"#24292e",tag:"#22863a",comment:{color:"#6a737d",fontStyle:"normal"}},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}}},10323:function(e,s,n){n.r(s),n.d(s,{frontMatter:()=>o,default:()=>h,toc:()=>c,metadata:()=>i,assets:()=>d,contentTitle:()=>l});var i=JSON.parse('{"id":"guides/components/assets/svg","title":"SVG\'s","description":"Learn how to render SVGs in PixiJS, including using them as textures or graphics, and understand their advantages and limitations.","source":"@site/docs/guides/components/assets/svg.mdx","sourceDirName":"guides/components/assets","slug":"/guides/components/assets/svg","permalink":"/8.x/guides/components/assets/svg","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/components/assets/svg.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"description":"Learn how to render SVGs in PixiJS, including using them as textures or graphics, and understand their advantages and limitations."},"sidebar":"guidesSidebar","previous":{"title":"Compressed Textures","permalink":"/8.x/guides/components/assets/compressed-textures"},"next":{"title":"Application","permalink":"/8.x/guides/components/application/"}}'),t=n(85893),r=n(50065),a=n(52753);let o={sidebar_position:4,description:"Learn how to render SVGs in PixiJS, including using them as textures or graphics, and understand their advantages and limitations."},l="SVG's",d={},c=[{value:"Overview",id:"overview",level:3},{value:"Why Use SVGs?",id:"why-use-svgs",level:3},{value:"Ways to Render SVGs in PixiJS",id:"ways-to-render-svgs-in-pixijs",level:3},{value:"1. Rendering SVGs as Textures",id:"1-rendering-svgs-as-textures",level:2},{value:"Overview",id:"overview-1",level:3},{value:"Example",id:"example",level:3},{value:"Scaling Textures",id:"scaling-textures",level:3},{value:"Pros &amp; Cons",id:"pros--cons",level:3},{value:"Best Use Cases",id:"best-use-cases",level:3},{value:"2. Rendering SVGs as Graphics",id:"2-rendering-svgs-as-graphics",level:2},{value:"Overview",id:"overview-2",level:3},{value:"Example",id:"example-1",level:3},{value:"Loading SVGs as Graphics",id:"loading-svgs-as-graphics",level:3},{value:"Pros &amp; Cons",id:"pros--cons-1",level:3},{value:"Best Use Cases",id:"best-use-cases-1",level:3},{value:"SVG Rendering Considerations",id:"svg-rendering-considerations",level:2},{value:"Supported Features",id:"supported-features",level:3},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Best Practices &amp; Gotchas",id:"best-practices--gotchas",level:2},{value:"Best Practices",id:"best-practices",level:3},{value:"Gotchas",id:"gotchas",level:3}];function p(e){let s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"svgs",children:"SVG's"})}),"\n",(0,t.jsx)(s.h3,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(s.p,{children:"PixiJS provides powerful support for rendering SVGs, allowing developers to integrate scalable vector graphics seamlessly into their projects. This guide explores different ways to use SVGs in PixiJS, covering real-time rendering, performance optimizations, and potential pitfalls."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"why-use-svgs",children:"Why Use SVGs?"}),"\n",(0,t.jsx)(s.p,{children:"SVGs have several advantages over raster images like PNGs:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Smaller File Sizes"})," \u2013 SVGs can be significantly smaller than PNGs, especially for large but simple shapes. A high-resolution PNG may be several megabytes, while an equivalent SVG could be just a few kilobytes."]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Scalability"})," \u2013 SVGs scale without losing quality, making them perfect for responsive applications and UI elements."]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Editable After Rendering"})," \u2013 Unlike textures, SVGs rendered via Graphics can be modified dynamically (e.g., changing stroke colors, modifying shapes)."]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Efficient for Simple Graphics"})," \u2013 If the graphic consists of basic shapes and paths, SVGs can be rendered efficiently as vector graphics."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"However, SVGs can also be computationally expensive to parse, particularly for intricate illustrations with many paths or effects."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h3,{id:"ways-to-render-svgs-in-pixijs",children:"Ways to Render SVGs in PixiJS"}),"\n",(0,t.jsx)(s.p,{children:"PixiJS offers two primary ways to render SVGs:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"As a Texture"})," \u2013 Converts the SVG into a texture for rendering as a sprite."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"As a Graphics Object"})," \u2013 Parses the SVG and renders it as vector geometry."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Each method has its advantages and use cases, which we will explore below."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"1-rendering-svgs-as-textures",children:"1. Rendering SVGs as Textures"}),"\n",(0,t.jsx)(s.h3,{id:"overview-1",children:"Overview"}),"\n",(0,t.jsx)(s.p,{children:"SVGs can be loaded as textures and used within Sprites. This method is efficient but does not retain the scalability of vector graphics."}),"\n",(0,t.jsx)(s.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"const svgTexture = await Assets.load('tiger.svg');\nconst mySprite = new Sprite(svgTexture);\n"})}),"\n","\n","\n","\n","\n",(0,t.jsx)(a.k,{files:{"index.js":"// description: This example demonstrates loading a large SVG texture and displaying it as a sprite\nimport { Application, Assets, Sprite } from 'pixi.js';\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({ antialias: true, resizeTo: window });\n\n  // Append the application canvas to the document body\n  document.body.appendChild(app.canvas);\n\n  const tigerTexture = await Assets.load({\n    src: 'https://pixijs.com/assets/tiger.svg',\n  });\n\n  const sprite = new Sprite(tigerTexture);\n\n  // line it up as this svg is not centered\n  const bounds = sprite.getLocalBounds();\n\n  sprite.pivot.set((bounds.x + bounds.width) / 2, (bounds.y + bounds.height) / 2);\n\n  sprite.position.set(app.screen.width / 2, app.screen.height / 2);\n\n  app.stage.addChild(sprite);\n\n  app.ticker.add(() => {\n    sprite.rotation += 0.01;\n    sprite.scale.set(2 + Math.sin(sprite.rotation));\n  });\n})();\n"},dependencies:{"pixi.js":"latest"}}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(s.h3,{id:"scaling-textures",children:"Scaling Textures"}),"\n",(0,t.jsx)(s.p,{children:"You can specify a resolution when loading an SVG as a texture to control its size:\nThis does increase memory usage, but it be of a higher fidelity."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"const svgTexture = await Assets.load('path/to.svg', {\n  resolution: 4, // will be 4 times as big!\n});\nconst mySprite = new Sprite(svgTexture);\n"})}),"\n",(0,t.jsx)(a.k,{files:{"index.js":"// description: This example demonstrates loading a large SVG texture and displaying it as a sprite\nimport { Application, Assets, Sprite } from 'pixi.js';\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({ antialias: true, resizeTo: window });\n\n  // Append the application canvas to the document body\n  document.body.appendChild(app.canvas);\n\n  const tigerTexture = await Assets.load({\n    src: 'https://pixijs.com/assets/tiger.svg',\n    data: {\n      resolution: 4,\n    },\n  });\n\n  const sprite = new Sprite(tigerTexture);\n\n  // line it up as this svg is not centered\n  const bounds = sprite.getLocalBounds();\n\n  sprite.pivot.set((bounds.x + bounds.width) / 2, (bounds.y + bounds.height) / 2);\n\n  sprite.position.set(app.screen.width / 2, app.screen.height / 2);\n\n  app.stage.addChild(sprite);\n\n  app.ticker.add(() => {\n    sprite.rotation += 0.01;\n    sprite.scale.set(2 + Math.sin(sprite.rotation));\n  });\n})();\n"},dependencies:{"pixi.js":"latest"}}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(s.p,{children:"This ensures the texture appears at the correct size and resolution."}),"\n",(0,t.jsx)(s.h3,{id:"pros--cons",children:"Pros & Cons"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Fast to render"})," (rendered as a quad, not geometry)"]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Good for static images"})]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Supports resolution scaling for precise sizing"})]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Ideal for complex SVGs that do not need crisp vector scaling"})," (e.g., UI components with fixed dimensions)"]}),"\n",(0,t.jsxs)(s.li,{children:["\u274C ",(0,t.jsx)(s.strong,{children:"Does not scale cleanly"})," (scaling may result in pixelation)"]}),"\n",(0,t.jsxs)(s.li,{children:["\u274C ",(0,t.jsx)(s.strong,{children:"Less flexibility"})," (cannot modify the shape dynamically)"]}),"\n",(0,t.jsxs)(s.li,{children:["\u274C ",(0,t.jsx)(s.strong,{children:"Texture Size Limit"})," A texture can only be up to 4096x4096 pixels, so if you need to render a larger SVG, you will need to use the Graphics method."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"best-use-cases",children:"Best Use Cases"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Background images"}),"\n",(0,t.jsx)(s.li,{children:"Decorative elements"}),"\n",(0,t.jsx)(s.li,{children:"Performance-critical applications where scaling isn\u2019t needed"}),"\n",(0,t.jsx)(s.li,{children:"Complex SVGs that do not require crisp vector scaling (e.g., fixed-size UI components)"}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"2-rendering-svgs-as-graphics",children:"2. Rendering SVGs as Graphics"}),"\n",(0,t.jsx)(s.h3,{id:"overview-2",children:"Overview"}),"\n",(0,t.jsxs)(s.p,{children:["PixiJS can render SVGs as real scalable vector graphics using the ",(0,t.jsx)(s.code,{children:"Graphics"})," class."]}),"\n",(0,t.jsx)(s.h3,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'const graphics = new Graphics().svg(\'<svg width="100" height="100"><rect width="100" height="100" fill="red"/></svg>\');\n'})}),"\n",(0,t.jsx)(a.k,{files:{"index.js":'// description: This example demonstrates how to create and display SVG graphics using the Graphics class\nimport { Application, Graphics } from \'pixi.js\';\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({\n    antialias: true,\n    backgroundColor: \'white\',\n    resizeTo: window,\n  });\n\n  // Append the application canvas to the document body\n  document.body.appendChild(app.canvas);\n\n  const graphics = new Graphics().svg(`\n            <svg height="400" width="450" xmlns="http://www.w3.org/2000/svg">\n                \x3c!-- Draw the paths --\x3e\n                <path id="lineAB" d="M 100 350 l 150 -300" stroke="red" stroke-width="4"/>\n                <path id="lineBC" d="M 250 50 l 150 300" stroke="red" stroke-width="4"/>\n                <path id="lineMID" d="M 175 200 l 150 0" stroke="green" stroke-width="4"/>\n                <path id="lineAC" d="M 100 350 q 150 -300 300 0" stroke="blue" fill="none" stroke-width="4"/>\n\n                \x3c!-- Mark relevant points --\x3e\n                <g stroke="black" stroke-width="3" fill="black">\n                    <circle id="pointA" cx="100" cy="350" r="4" />\n                    <circle id="pointB" cx="250" cy="50" r="4" />\n                    <circle id="pointC" cx="400" cy="350" r="4" />\n                </g>\n            </svg>\n        `);\n\n  app.stage.addChild(graphics);\n})();\n'},dependencies:{"pixi.js":"latest"}}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsxs)(s.p,{children:["If you want to use the same SVG multiple times, you can use ",(0,t.jsx)(s.code,{children:"GraphicsContext"})," to share the parsed SVG data across multiple graphics objects, improving performance by parsing it once and reusing it."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:'const context = new GraphicsContext().svg(\n  \'<svg width="100" height="100"><rect width="100" height="100" fill="red"/></svg>\',\n);\n\nconst graphics1 = new Graphics(context);\nconst graphics2 = new Graphics(context);\n'})}),"\n",(0,t.jsx)(s.h3,{id:"loading-svgs-as-graphics",children:"Loading SVGs as Graphics"}),"\n",(0,t.jsxs)(s.p,{children:["Instead of passing an SVG string directly, you can load an SVG file using PixiJS\u2019s ",(0,t.jsx)(s.code,{children:"Assets.load"})," method. This will return a ",(0,t.jsx)(s.code,{children:"GraphicsContext"})," object, which can be used to create multiple ",(0,t.jsx)(s.code,{children:"Graphics"})," objects efficiently."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"const svgContext = await Assets.load('path/to.svg', {\n  parseAsGraphicsContext: true, // If false, it returns a texture instead.\n});\nconst myGraphics = new Graphics(svgContext);\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Since it's loaded via ",(0,t.jsx)(s.code,{children:"Assets.load"}),", it will be cached and reused, much like a texture."]}),"\n",(0,t.jsx)(a.k,{files:{"index.js":"// description: This example demonstrates loading and displaying SVG graphics using the Graphics class\nimport { Application, Assets, Graphics } from 'pixi.js';\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({ antialias: true, resizeTo: window });\n\n  // Append the application canvas to the document body\n  document.body.appendChild(app.canvas);\n\n  const tigerSvg = await Assets.load({\n    src: 'https://pixijs.com/assets/tiger.svg',\n    data: {\n      parseAsGraphicsContext: true,\n    },\n  });\n\n  const graphics = new Graphics(tigerSvg);\n\n  // line it up as this svg is not centered\n  const bounds = graphics.getLocalBounds();\n\n  graphics.pivot.set((bounds.x + bounds.width) / 2, (bounds.y + bounds.height) / 2);\n\n  graphics.position.set(app.screen.width / 2, app.screen.height / 2);\n\n  app.stage.addChild(graphics);\n\n  app.ticker.add(() => {\n    graphics.rotation += 0.01;\n    graphics.scale.set(2 + Math.sin(graphics.rotation));\n  });\n})();\n"},dependencies:{"pixi.js":"latest"}}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(s.h3,{id:"pros--cons-1",children:"Pros & Cons"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Retains vector scalability"})," (no pixelation when zooming)"]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Modifiable after rendering"})," (change colors, strokes, etc.)"]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Efficient for simple graphics"})]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"fast rendering if SVG structure does not change"})," (no need to reparse)"]}),"\n",(0,t.jsxs)(s.li,{children:["\u274C ",(0,t.jsx)(s.strong,{children:"More expensive to parse"})," (complex SVGs can be slow to render)"]}),"\n",(0,t.jsxs)(s.li,{children:["\u274C ",(0,t.jsx)(s.strong,{children:"Not ideal for static images"})]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"best-use-cases-1",children:"Best Use Cases"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Icons and UI elements that need resizing"}),"\n",(0,t.jsx)(s.li,{children:"A game world that needs to remain crisp as a player zooms in"}),"\n",(0,t.jsx)(s.li,{children:"Interactive graphics where modifying the SVG dynamically is necessary"}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"svg-rendering-considerations",children:"SVG Rendering Considerations"}),"\n",(0,t.jsx)(s.h3,{id:"supported-features",children:"Supported Features"}),"\n",(0,t.jsx)(s.p,{children:"PixiJS supports most SVG features that can be rendered in a Canvas 2D context. Below is a list of common SVG features and their compatibility:"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Feature"}),(0,t.jsx)(s.th,{children:"Supported"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Basic Shapes (rect, circle, path, etc.)"}),(0,t.jsx)(s.td,{children:"\u2705"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Gradients"}),(0,t.jsx)(s.td,{children:"\u2705"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Stroke & Fill Styles"}),(0,t.jsx)(s.td,{children:"\u2705"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Text Elements"}),(0,t.jsx)(s.td,{children:"\u274C"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Filters (Blur, Drop Shadow, etc.)"}),(0,t.jsx)(s.td,{children:"\u274C"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Clipping Paths"}),(0,t.jsx)(s.td,{children:"\u2705"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Patterns"}),(0,t.jsx)(s.td,{children:"\u274C"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Complex Paths & Curves"}),(0,t.jsx)(s.td,{children:"\u2705"})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Complex SVGs:"})," Large or intricate SVGs can slow down rendering start up due to high parsing costs. Use ",(0,t.jsx)(s.code,{children:"GraphicsContext"})," to cache and reuse parsed data."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Vector vs. Texture:"})," If performance is a concern, consider using SVGs as textures instead of rendering them as geometry. However, keep in mind that textures take up more memory."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Real-Time Rendering:"})," Avoid rendering complex SVGs dynamically. Preload and reuse them wherever possible."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"best-practices--gotchas",children:"Best Practices & Gotchas"}),"\n",(0,t.jsx)(s.h3,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Use Graphics for scalable and dynamic SVGs"})]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsx)(s.strong,{children:"Use Textures for performance-sensitive applications"})]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsxs)(s.strong,{children:["Use ",(0,t.jsx)(s.code,{children:"GraphicsContext"})," to avoid redundant parsing"]})]}),"\n",(0,t.jsxs)(s.li,{children:["\u2705 ",(0,t.jsxs)(s.strong,{children:["Consider ",(0,t.jsx)(s.code,{children:"resolution"})," when using textures to balance quality and memory"]})]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"gotchas",children:"Gotchas"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\u26A0 ",(0,t.jsx)(s.strong,{children:"Large SVGs can be slow to parse"})," \u2013 Optimize SVGs before using them in PixiJS."]}),"\n",(0,t.jsxs)(s.li,{children:["\u26A0 ",(0,t.jsx)(s.strong,{children:"Texture-based SVGs do not scale cleanly"})," \u2013 Use higher resolution if necessary."]}),"\n",(0,t.jsxs)(s.li,{children:["\u26A0 ",(0,t.jsx)(s.strong,{children:"Not all SVG features are supported"})," \u2013 Complex filters and text elements may not work as expected."]}),"\n"]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.p,{children:["By understanding how PixiJS processes SVGs, developers can make informed decisions on when to use ",(0,t.jsx)(s.code,{children:"Graphics.svg()"}),", ",(0,t.jsx)(s.code,{children:"GraphicsContext"}),", or SVG textures, balancing quality and performance for their specific use case."]})]})}function h(e={}){let{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},18064:function(e,s,n){n.d(s,{M:()=>y});var i=n(67294);let t={colors:{surface1:"#242426",surface2:"#444950",surface3:"#44475a",clickable:"#fff",base:"#f8f8f2",disabled:"#6272a4",hover:"#f8f8f2",accent:"#e91e63",error:"#f8f8f2",errorSurface:"#44475a"},syntax:{plain:"#f8f8f2",comment:{color:"#6272a4",fontStyle:"italic"},keyword:"#ff79c6",tag:"#ff79c6",punctuation:"#ff79c6",definition:"#f8f8f2",property:"#50fa7b",static:"#bd93f9",string:"#f1fa8c"},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}},r=e=>{let s=e.split(".");return s[s.length-1]},a=e=>{let s=r(e);return"js"===s?"javascript":"ts"===s?"typescript":"vert"===s||"frag"===s?"glsl":s},o=e=>(0,i.useMemo)(()=>a(e),[e]),l=async e=>{let s=`pixi-definitions-${e}`,n=JSON.parse(localStorage.getItem(s))||null;if(!n)try{let n=await fetch(`https://cdn.jsdelivr.net/npm/pixi.js@${e}/dist/pixi.js.d.ts`),i=await n.text();if(i.startsWith("// Generated by dts-bundle-generator"))return localStorage.setItem(s,JSON.stringify(i)),i;return null}catch(e){return console.error("Failed to fetch pixi.js types:",e),null}return n},d=(e,s="latest")=>{(0,i.useEffect)(()=>{let n=async e=>{let n=await l(s),i=`declare module 'pixi.js' { ${n} }`,t=`
            declare module '*.wgsl' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.vert' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.frag' {
                const shader: 'string';
                export default shader;
            }`;e.languages.typescript.typescriptDefaults.addExtraLib(i,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.javascriptDefaults.addExtraLib(i,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.typescriptDefaults.addExtraLib(t),e.languages.typescript.javascriptDefaults.addExtraLib(t);let{languages:r}=e,a="glsl";r.register({id:a,extensions:[".frag",".vert"]}),r.setLanguageConfiguration(a,{comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"',notIn:["string"]},{open:"'",close:"'",notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]}),r.setMonarchTokensProvider(a,{tokenPostfix:".glsl",defaultToken:"invalid",directives:["#","#define","#undef","#if","#ifdef","#ifndef","#else","#elif","#endif","#error","#pragma","#extension","#version","#line"],macros:["__LINE__","__FILE__","__VERSION__"],storage:["in","out","uniform","layout","attribute","varying","precision","highp","mediump","lowp"],types:["void","bool","int","uint","float","double","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","uvec2","uvec3","uvec4","dvec2","dvec3","dvec4","mat2","mat3","mat4","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","dmat2","dmat3","dmat4","dmat2x2","dmat2x3","dmat2x4","dmat3x2","dmat3x3","dmat3x4","dmat4x2","dmat4x3","dmat4x4","sampler1D","texture1D","image1D","sampler1DShadow","sampler1DArray","texture1DArray","image1DArray","sampler1DArrayShadow","sampler2D","texture2D","image2D","sampler2DShadow","sampler2DArray","texture2DArray","image2DArray","sampler2DArrayShadow","sampler2DMS","texture2DMS","image2DMS","sampler2DMSArray","texture2DMSArray","image2DMSArray","sampler2DRect","texture2DRect","image2DRect","sampler2DRectShadow","sampler3D","texture3D","image3D","samplerCube","textureCube","imageCube","samplerCubeShadow","samplerCubeArray","textureCubeArray","imageCubeArray","samplerCubeArrayShadow","samplerBuffer","textureBuffer","imageBuffer","subpassInput","subpassInputMS","isampler1D","itexture1D","iimage1D","isampler1DArray","itexture1DArray","iimage1DArray","isampler2D","itexture2D","iimage2D","isampler2DArray","itexture2DArray","iimage2DArray","isampler2DMS","itexture2DMS","iimage2DMS","isampler2DMSArray","itexture2DMSArray","iimage2DMSArray","isampler2DRect","itexture2DRect","iimage2DRect","isampler3D","itexture3D","iimage3D","isamplerCube","itextureCube","iimageCube","isamplerCubeArray","itextureCubeArray","iimageCubeArray","isamplerBuffer","itextureBuffer","iimageBuffer","isubpassInput","isubpassInputMS","usampler1D","utexture1D","uimage1D","usampler1DArray","utexture1DArray","uimage1DArray","usampler2D","utexture2D","uimage2D","usampler2DArray","utexture2DArray","uimage2DArray","usampler2DMS","utexture2DMS","uimage2DMS","usampler2DMSArray","utexture2DMSArray","uimage2DMSArray","usampler2DRect","utexture2DRect","uimage2DRect","usampler3D","utexture3D","uimage3D","usamplerCube","utextureCube","uimageCube","usamplerCubeArray","utextureCubeArray","uimageCubeArray","usamplerBuffer","utextureBuffer","uimageBuffer","atomic_uint","usubpassInput","usubpassInputMS","sampler","samplerShadow"],operators:["*","+","-","/","~","!","%","<<",">>","<",">","<=",">=","==","!=","&","^","|","&&","^^","||","=","+=","-=","*=","/=","%=","<<=",">>=","&=","^=","|="],builtin_vars:["gl_VertexID","gl_InstanceID","gl_VertexIndex","gl_InstanceIndex","gl_DrawID","gl_BaseVertex","gl_BaseInstance","gl_Position","gl_PointSize","gl_ClipDistance","gl_CullDistance","gl_Color","gl_SecondaryColor","gl_Normal","gl_Vertex","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_FogCoord"],constants:["gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexUniformComponents","gl_MaxVertexOutputComponents"],intsuffix:"[uU]?",floatsuffix:"([fF]|(fl|FL))?",tokenizer:{root:[[/\/\/.*$/,"comment.line"],[/\/\*/,"comment.block","@comment"],[/#[a-z]*/,{cases:{"@directives":"keyword.control.preprocessor","@default":"invalid"}}],["GL_ES","meta.preprocessor"],[/__[A-Z_]+__/,{cases:{"@macros":"meta.preprocessor","@default":"invalid"}}],[/[{}()\[\]]/,"@brackets"],[/(true|false)/,"constant"],[/[\=\+\-\*\/\>\<\&\|\%\!\^]+/,{cases:{"@operators":"operator","@default":"invalid"}}],[/[a-zA-Z][a-zA-Z0-9_]*(?=\()/,"entity.name.function"],[/[a-zA-Z][a-zA-Z0-9_]*/,{cases:{"@storage":"storage.type","@types":"entity.name.type","@builtin_vars":"keyword","@default":"variable.name"}}],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F](@intsuffix)/,"number.hex"],[/0[0-7](@intsuffix)/,"number.octal"],[/\d+(@intsuffix)/,"number"],[/[;,.]/,"delimiter"]],comment:[["\\*/","comment.block","@pop"],[".*","comment.block"]]}})};e&&n(e)},[e,s])};var c=n(93862),p=n(35283),h=n(51443),u=n(85893);function x({fontSize:e=12,style:s,pixiVersion:n,handleEditorCodeChanged:t}){let{code:r,updateCode:a}=(0,c.m4)(),{sandpack:l}=(0,c.X3)(),x=function(){let[e,s]=(0,i.useState)(null),n=(0,i.useRef)(!0),t=(0,i.useRef)(null);return(0,i.useEffect)(()=>{let e=h._m.__getMonacoInstance();if(e)return void s(e);if(!t.current){h._m.config({"vs/nls":{availableLanguages:{}}});try{t.current=h._m.init(),t.current.then(e=>{n.current&&s(e)}).catch(e=>{n.current&&"cancelation"!==e.type&&console.error("Monaco initialization error:",e)})}catch(e){console.error("Failed to initialize Monaco:",e)}}return()=>{n.current=!1}},[]),e}(),g=o(l.activeFile),{colorMode:m}=(0,p.I)();return d(x,n),(0,u.jsxs)(c.el,{style:{height:"100%",margin:0,...s},children:[(0,u.jsx)(c.aM,{}),(0,u.jsx)("div",{style:{flex:1,paddingTop:8,background:"dark"===m?"#1e1e1e":"#FFFFFE"},children:(0,u.jsx)(h.ML,{width:"100%",height:"100%",language:g,theme:"dark"===m?"vs-dark":"light",defaultValue:r,onChange:e=>{a(e||""),t?.(e)},options:{minimap:{enabled:!1},scrollBeyondLastLine:!1,wordWrap:"on",automaticLayout:!0,fontSize:e}},l.activeFile)})]})}let g=({onClick:e})=>(0,u.jsx)(c.z,{style:{position:"relative"},onClick:e,children:(0,u.jsx)(c.zD,{})}),m=({onSelectionChange:e,defaultSelection:s="both"})=>{let[n,t]=(0,i.useState)(s),{colorMode:r}=(0,p.I)(),a=s=>{t(s),e(s)},o={height:"100%",width:"max-content",padding:"0 16px",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",color:"dark"===r?"#F6F8FA":"#2E3138",border:"none"},l="dark"===r?"#22232A":"#e2e2e2";return(0,u.jsxs)("div",{style:{height:32,width:"100%",overflow:"hidden",backgroundColor:"dark"===r?"#2E3138":"#F6F8FA",display:"flex",justifyContent:"right",borderBottomLeftRadius:4,borderBottomRightRadius:4},children:[(0,u.jsx)("button",{onClick:()=>a("editor"),style:{backgroundColor:"editor"===n?l:"transparent",...o},children:"Editor"}),(0,u.jsx)("button",{onClick:()=>a("preview"),style:{backgroundColor:"preview"===n?l:"transparent",...o},children:"Preview"}),(0,u.jsx)("button",{onClick:()=>a("both"),style:{backgroundColor:"both"===n?l:"transparent",...o},children:"Both"})]})};function f(e){let{viewType:s,showConsole:n,fontSize:t,pixiVersion:r}=e,[a,o]=(0,i.useState)(n),[l,d]=(0,i.useState)(s),p=(0,u.jsx)(u.Fragment,{children:(0,u.jsx)(g,{onClick:()=>o(e=>!e)})});return(0,u.jsxs)("div",{style:{height:"100%",width:"100%",display:"flex",flexDirection:"column"},children:[(0,u.jsxs)(c.sp,{style:{height:"100%",overflow:"hidden",borderBottomLeftRadius:0,borderBottomRightRadius:0,flexWrap:"nowrap"},children:[(0,u.jsx)(x,{fontSize:t,style:{flexGrow:+("preview"!==l),flexShrink:+("preview"!==l),flexBasis:"editor"===l?"100%":0,width:"100%",overflow:"hidden"},pixiVersion:r,handleEditorCodeChanged:e.handleEditorCodeChanged}),(0,u.jsxs)(c.el,{style:{height:"100%",width:"100%"},children:[(0,u.jsx)(c.Gj,{style:{flexGrow:100*("editor"!==l),flexShrink:100*("editor"!==l),flexBasis:"editor"!==l?"100%":0,overflow:"hidden"},showOpenInCodeSandbox:!1,actionsChildren:p}),a&&(0,u.jsx)("div",{style:{flexGrow:35*!!a,flexShrink:35*!!a,flexBasis:a?"35%":0,width:"100%",overflow:"hidden"},children:(0,u.jsx)(c.Tq,{showHeader:!1})})]})]}),(0,u.jsx)(m,{onSelectionChange:e=>{d(e)},defaultSelection:l})]})}var j=n(73808),v=n(646);function y({viewType:e="both",showConsole:s=!1,width:n="100%",height:r="100%",dependencies:a={"pixi.js":"latest"},files:o={"index.js":"// Your code here"},fontSize:l=12,handleEditorCodeChanged:d}){let{colorMode:h}=(0,p.I)(),x={...o};delete x["index.js"];let[g]=(0,i.useState)({"/index.html":{code:'<!doctype html>\n<html>\n  <head>\n    <title>PixiJS Playground</title>\n    <meta charset="UTF-8" />\n    <link rel="stylesheet" href="./styles.css" />\n  </head>\n  <body>\n    <script src="index.js"><\/script>\n  </body>\n</html>\n',hidden:!0},"/styles.css":{code:"body {\n  margin: 0;\n  overflow: hidden;\n}\n",hidden:!0},"sandbox.config.json":{code:'{"infiniteLoopProtection": false}',hidden:!0},"index.ts":{code:"",hidden:!0,active:!1},"index.js":{code:o["index.js"]??"// Your code here",hidden:!1,active:!0},...x});return(0,u.jsx)(v.Z,{children:()=>(0,u.jsx)(c.oT,{template:"vanilla-ts",theme:"dark"===h?t:j.A1,files:g,customSetup:{dependencies:a,entry:"index.html"},style:{height:r,width:n,margin:"0 auto",maxWidth:"100%"},options:{recompileDelay:500},children:(0,u.jsx)(f,{handleEditorCodeChanged:d,viewType:e,showConsole:s,fontSize:l,pixiVersion:a["pixi.js"]})})})}},52753:function(e,s,n){n.d(s,{k:()=>r});var i=n(18064),t=n(85893);function r(e){return(0,t.jsx)(i.M,{height:400,width:700,viewType:"preview",...e})}},50065:function(e,s,n){n.d(s,{Z:()=>o,a:()=>a});var i=n(67294);let t={},r=i.createContext(t);function a(e){let s=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);
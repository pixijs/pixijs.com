"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["3784"],{24652:function(e,n,t){t.r(n),t.d(n,{default:()=>c,frontMatter:()=>l,metadata:()=>i,assets:()=>p,toc:()=>u,contentTitle:()=>d});var i=JSON.parse('{"id":"examples/mesh-and-shaders/triangle-textured","title":"Triangle Textured","description":"","source":"@site/versioned_docs/version-7.x/examples/mesh-and-shaders/triangle-textured.mdx","sourceDirName":"examples/mesh-and-shaders","slug":"/examples/mesh-and-shaders/triangle-textured","permalink":"/7.x/examples/mesh-and-shaders/triangle-textured","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":5,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":5,"custom_edit_url":null,"title":"Triangle Textured"},"sidebar":"examplesSidebar","previous":{"title":"Triangle Color","permalink":"/7.x/examples/mesh-and-shaders/triangle-color"},"next":{"title":"Uniforms","permalink":"/7.x/examples/mesh-and-shaders/uniforms"}}'),r=t("85893"),a=t("50065"),s=t("67963"),o=t("99883");let l={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:5,custom_edit_url:null,title:"Triangle Textured"},d=void 0,p={},u=[];function m(e){return(0,r.jsx)(s.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\nconst geometry = new PIXI.Geometry()\n    .addAttribute(\n        'aVertexPosition', // the attribute name\n        [\n            -100,\n            -100, // x, y\n            100,\n            -100, // x, y\n            100,\n            100,\n        ], // x, y\n        2,\n    ) // the size of the attribute\n\n    .addAttribute(\n        'aColor', // the attribute name\n        [\n            1,\n            0,\n            0, // r, g, b\n            0,\n            1,\n            0, // r, g, b\n            0,\n            0,\n            1,\n        ], // r, g, b\n        3,\n    ) // the size of the attribute\n\n    .addAttribute(\n        'aUvs', // the attribute name\n        [\n            0,\n            0, // u, v\n            1,\n            0, // u, v\n            1,\n            1,\n        ], // u, v\n        2,\n    ); // the size of the attribute\n\nconst vertexSrc = `\n\n    precision mediump float;\n\n    attribute vec2 aVertexPosition;\n    attribute vec3 aColor;\n    attribute vec2 aUvs;\n\n    uniform mat3 translationMatrix;\n    uniform mat3 projectionMatrix;\n\n    varying vec2 vUvs;\n    varying vec3 vColor;\n\n    void main() {\n\n        vUvs = aUvs;\n        vColor = aColor;\n        gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n    }`;\n\nconst fragmentSrc = `\n\n    precision mediump float;\n\n    varying vec3 vColor;\n    varying vec2 vUvs;\n\n    uniform sampler2D uSampler2;\n\n    void main() {\n\n        gl_FragColor = texture2D(uSampler2, vUvs) * vec4(vColor, 1.0);\n    }`;\n\nconst uniforms = { uSampler2: PIXI.Texture.from('https://pixijs.com/assets/bg_scene_rotate.jpg') };\n\nconst shader = PIXI.Shader.from(vertexSrc, fragmentSrc, uniforms);\n\nconst triangle = new PIXI.Mesh(geometry, shader);\n\ntriangle.position.set(400, 300);\ntriangle.scale.set(2);\n\napp.stage.addChild(triangle);\n\napp.ticker.add((delta) =>\n{\n    triangle.rotation += 0.01;\n});\n"},dependencies:{"pixi.js":o.npm}})}function c(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
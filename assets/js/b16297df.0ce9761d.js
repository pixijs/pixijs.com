"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["1206"],{73808:function(e,t,n){n.d(t,{A1:()=>r});var r={colors:{surface1:"#ffffff",surface2:"#F3F3F3",surface3:"#f5f5f5",clickable:"#959da5",base:"#24292e",disabled:"#d1d4d8",hover:"#24292e",accent:"#24292e"},syntax:{keyword:"#d73a49",property:"#005cc5",plain:"#24292e",static:"#032f62",string:"#032f62",definition:"#6f42c1",punctuation:"#24292e",tag:"#22863a",comment:{color:"#6a737d",fontStyle:"normal"}},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}}},94438:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,default:()=>p,toc:()=>c,metadata:()=>r,assets:()=>u,contentTitle:()=>d});var r=JSON.parse('{"id":"examples/mesh-and-shaders/multi-pass-shader-generated-mesh","title":"Multi Pass Shader Generated Mesh","description":"","source":"@site/versioned_docs/version-7.x/examples/mesh-and-shaders/multi-pass-shader-generated-mesh.mdx","sourceDirName":"examples/mesh-and-shaders","slug":"/examples/mesh-and-shaders/multi-pass-shader-generated-mesh","permalink":"/7.x/examples/mesh-and-shaders/multi-pass-shader-generated-mesh","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":12,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":12,"custom_edit_url":null,"title":"Multi Pass Shader Generated Mesh"},"sidebar":"examplesSidebar","previous":{"title":"Shader Toy Mesh","permalink":"/7.x/examples/mesh-and-shaders/shader-toy-mesh"},"next":{"title":"Texture Rotate","permalink":"/7.x/examples/textures/texture-rotate"}}'),a=n(85893),i=n(50065),o=n(31531),s=n(99883);let l={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:12,custom_edit_url:null,title:"Multi Pass Shader Generated Mesh"},d=void 0,u={},c=[];function m(e){return(0,a.jsx)(o.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ height: 640, resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\n// Build geometry.\nconst geometry = new PIXI.Geometry()\n  .addAttribute(\n    'aVertexPosition', // the attribute name\n    [\n      0,\n      0, // x, y\n      200,\n      0, // x, y\n      200,\n      200,\n      0,\n      200,\n    ], // x, y\n    2,\n  ) // the size of the attribute\n  .addAttribute(\n    'aUvs', // the attribute name\n    [\n      0,\n      0, // u, v\n      1,\n      0, // u, v\n      1,\n      1,\n      0,\n      1,\n    ], // u, v\n    2,\n  ) // the size of the attribute\n  .addIndex([0, 1, 2, 0, 2, 3]);\n\n// Vertex shader. Use same shader for all passes.\nconst vertexSrc = `\n\n    precision mediump float;\n\n    attribute vec2 aVertexPosition;\n    attribute vec2 aUvs;\n\n    uniform mat3 translationMatrix;\n    uniform mat3 projectionMatrix;\n\n    varying vec2 vUvs;\n\n    void main() {\n\n        vUvs = aUvs;\n        gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n    }`;\n\n// Load a perlinnoise texture for one of the shaders.\nconst perlinTexture = PIXI.Texture.from('https://pixijs.com/assets/perlin.jpg');\n\n// First pass, generates a grid.\nconst fragmentGridSrc = `\nprecision mediump float;\nvarying vec2 vUvs;\nuniform float zoom;\n\nvoid main()\n{\n    //Generate a simple grid.\n    //Offset uv so that center is 0,0 and edges are -1,1\n    vec2 uv = (vUvs-vec2(0.5))*2.0;\n    vec2 gUv = floor(uv*zoom);\n    vec4 color1 = vec4(0.8, 0.8, 0.8, 1.0);\n    vec4 color2 = vec4(0.4, 0.4, 0.4, 1.0);\n    vec4 outColor = mod(gUv.x + gUv.y, 2.) < 0.5 ? color1 : color2;\n    gl_FragColor = outColor;\n\n}`;\n\nconst gridUniforms = {\n  zoom: 10,\n};\nconst gridShader = PIXI.Shader.from(vertexSrc, fragmentGridSrc, gridUniforms);\n// Sharing textures and meshes is possible.\n// But for simplicity each pass has its own output texture and mesh in this example.\nconst gridTexture = PIXI.RenderTexture.create({ width: 200, height: 200 });\nconst gridQuad = new PIXI.Mesh(geometry, gridShader);\nconst gridContainer = new PIXI.Container();\n\ngridContainer.addChild(gridQuad);\n\n// Second pass. Takes grid as input and makes it ripple.\nconst fragmentRippleSrc = `\nprecision mediump float;\nvarying vec2 vUvs;\nuniform float amount;\nuniform float phase;\nuniform sampler2D texIn;\n\nvoid main()\n{\n    //Generate a simple grid.\n    vec2 uv = vUvs;\n    //Calculate distance from center\n    float distance = length( uv - vec2(0.5));\n    vec4 color = texture2D(texIn, uv);\n    color.rgb *= sin(distance*25.0+phase) * amount+1.;\n    gl_FragColor = color;\n}`;\nconst rippleUniforms = {\n  amount: 0.5,\n  phase: 0,\n  texIn: gridTexture,\n};\nconst rippleShader = PIXI.Shader.from(vertexSrc, fragmentRippleSrc, rippleUniforms);\nconst rippleTexture = PIXI.RenderTexture.create({ width: 200, height: 200 });\nconst rippleQuad = new PIXI.Mesh(geometry, rippleShader);\nconst rippleContainer = new PIXI.Container();\n\nrippleContainer.addChild(rippleQuad);\n\n// Second effect. Generates a filtered noise.\nconst fragmentNoiseSrc = `\nprecision mediump float;\nvarying vec2 vUvs;\nuniform float limit;\nuniform sampler2D noise;\n\nvoid main()\n{\n    float color = texture2D(noise, vUvs).r;\n    color = step(limit, color);\n    gl_FragColor = vec4(color);\n}`;\nconst noiseUniforms = {\n  limit: 0.5,\n  noise: perlinTexture,\n};\nconst noiseShader = PIXI.Shader.from(vertexSrc, fragmentNoiseSrc, noiseUniforms);\nconst noiseTexture = PIXI.RenderTexture.create({ width: 200, height: 200 });\nconst noiseQuad = new PIXI.Mesh(geometry, noiseShader);\nconst noiseContainer = new PIXI.Container();\n\nnoiseContainer.addChild(noiseQuad);\n\n// Third effect\nconst fragmentWaveSrc = `\nprecision mediump float;\nvarying vec2 vUvs;\nuniform float amplitude;\nuniform float time;\n\nvoid main()\n{\n    //Offset uv so that center is 0,0 and edges are -1,1\n    vec2 uv = (vUvs-vec2(0.5))*2.0;\n\n    vec3 outColor = vec3(0.);\n\n    //Simple wavefunctions inversed and with small offsets.\n    outColor += 5./length(uv.y*200. - 50.0*sin( uv.x*0.25+ time*0.25)*amplitude);\n    outColor += 4./length(uv.y*300. - 100.0*sin(uv.x*0.5+time*0.5)*amplitude*1.2);\n    outColor += 3./length(uv.y*400. - 150.0*sin(uv.x*0.75+time*0.75)*amplitude*1.4);\n    outColor += 2./length(uv.y*500. - 200.0*sin(uv.x+time)*amplitude*1.6);\n\n    gl_FragColor = vec4(outColor,1.0);\n}`;\nconst waveUniforms = {\n  amplitude: 0.75,\n  time: 0,\n};\nconst waveShader = PIXI.Shader.from(vertexSrc, fragmentWaveSrc, waveUniforms);\nconst waveTexture = PIXI.RenderTexture.create({ width: 200, height: 200 });\nconst waveQuad = new PIXI.Mesh(geometry, waveShader);\nconst waveContainer = new PIXI.Container();\n\nwaveContainer.addChild(waveQuad);\n\n// Final combination pass\nconst fragmentCombineSrc = `\nprecision mediump float;\nvarying vec2 vUvs;\n\nuniform sampler2D texRipple;\nuniform sampler2D texNoise;\nuniform sampler2D texWave;\n\nvoid main()\n{\n    //Read color from all\n    vec4 ripple = texture2D(texRipple, vUvs);\n    vec4 noise = texture2D(texNoise, vUvs);\n    vec4 wave = texture2D(texWave, vUvs);\n\n    gl_FragColor = mix(ripple, wave,noise.r);\n}`;\nconst combineUniforms = {\n  texRipple: rippleTexture,\n  texNoise: noiseTexture,\n  texWave: waveTexture,\n};\nconst combineShader = PIXI.Shader.from(vertexSrc, fragmentCombineSrc, combineUniforms);\nconst combineQuad = new PIXI.Mesh(geometry, combineShader);\n\ngridContainer.position.set(10, 10);\nrippleContainer.position.set(220, 10);\nnoiseContainer.position.set(10, 220);\nwaveContainer.position.set(10, 430);\ncombineQuad.position.set(430, 220);\n\n// Add all phases to stage so all the phases can be seen separately.\napp.stage.addChild(gridContainer);\napp.stage.addChild(rippleContainer);\napp.stage.addChild(noiseContainer);\napp.stage.addChild(waveContainer);\napp.stage.addChild(combineQuad);\n\n// start the animation..\nlet time = 0;\n\napp.ticker.add(() => {\n  time += 1 / 60;\n  // gridQuad.shader.uniforms.zoom = Math.sin(time)*5+10;\n  rippleQuad.shader.uniforms.phase = -time;\n  waveQuad.shader.uniforms.time = time;\n  noiseQuad.shader.uniforms.limit = Math.sin(time * 0.5) * 0.35 + 0.5;\n\n  // Render the passes to get textures.\n  app.renderer.render(gridQuad, { renderTexture: gridTexture });\n  app.renderer.render(rippleQuad, { renderTexture: rippleTexture });\n  app.renderer.render(noiseQuad, { renderTexture: noiseTexture });\n  app.renderer.render(waveQuad, { renderTexture: waveTexture });\n});\n"},dependencies:{"pixi.js":s.npm}})}function p(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},18064:function(e,t,n){n.d(t,{M:()=>b});var r=n(67294);let a={colors:{surface1:"#242426",surface2:"#444950",surface3:"#44475a",clickable:"#fff",base:"#f8f8f2",disabled:"#6272a4",hover:"#f8f8f2",accent:"#e91e63",error:"#f8f8f2",errorSurface:"#44475a"},syntax:{plain:"#f8f8f2",comment:{color:"#6272a4",fontStyle:"italic"},keyword:"#ff79c6",tag:"#ff79c6",punctuation:"#ff79c6",definition:"#f8f8f2",property:"#50fa7b",static:"#bd93f9",string:"#f1fa8c"},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}},i=e=>{let t=e.split(".");return t[t.length-1]},o=e=>{let t=i(e);return"js"===t?"javascript":"ts"===t?"typescript":"vert"===t||"frag"===t?"glsl":t},s=e=>(0,r.useMemo)(()=>o(e),[e]),l=async e=>{let t=`pixi-definitions-${e}`,n=JSON.parse(localStorage.getItem(t))||null;if(!n)try{let n=await fetch(`https://cdn.jsdelivr.net/npm/pixi.js@${e}/dist/pixi.js.d.ts`),r=await n.text();if(r.startsWith("// Generated by dts-bundle-generator"))return localStorage.setItem(t,JSON.stringify(r)),r;return null}catch(e){return console.error("Failed to fetch pixi.js types:",e),null}return n},d=(e,t="latest")=>{(0,r.useEffect)(()=>{let n=async e=>{let n=await l(t),r=`declare module 'pixi.js' { ${n} }`,a=`
            declare module '*.wgsl' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.vert' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.frag' {
                const shader: 'string';
                export default shader;
            }`;e.languages.typescript.typescriptDefaults.addExtraLib(r,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.javascriptDefaults.addExtraLib(r,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.typescriptDefaults.addExtraLib(a),e.languages.typescript.javascriptDefaults.addExtraLib(a);let{languages:i}=e,o="glsl";i.register({id:o,extensions:[".frag",".vert"]}),i.setLanguageConfiguration(o,{comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"',notIn:["string"]},{open:"'",close:"'",notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]}),i.setMonarchTokensProvider(o,{tokenPostfix:".glsl",defaultToken:"invalid",directives:["#","#define","#undef","#if","#ifdef","#ifndef","#else","#elif","#endif","#error","#pragma","#extension","#version","#line"],macros:["__LINE__","__FILE__","__VERSION__"],storage:["in","out","uniform","layout","attribute","varying","precision","highp","mediump","lowp"],types:["void","bool","int","uint","float","double","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","uvec2","uvec3","uvec4","dvec2","dvec3","dvec4","mat2","mat3","mat4","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","dmat2","dmat3","dmat4","dmat2x2","dmat2x3","dmat2x4","dmat3x2","dmat3x3","dmat3x4","dmat4x2","dmat4x3","dmat4x4","sampler1D","texture1D","image1D","sampler1DShadow","sampler1DArray","texture1DArray","image1DArray","sampler1DArrayShadow","sampler2D","texture2D","image2D","sampler2DShadow","sampler2DArray","texture2DArray","image2DArray","sampler2DArrayShadow","sampler2DMS","texture2DMS","image2DMS","sampler2DMSArray","texture2DMSArray","image2DMSArray","sampler2DRect","texture2DRect","image2DRect","sampler2DRectShadow","sampler3D","texture3D","image3D","samplerCube","textureCube","imageCube","samplerCubeShadow","samplerCubeArray","textureCubeArray","imageCubeArray","samplerCubeArrayShadow","samplerBuffer","textureBuffer","imageBuffer","subpassInput","subpassInputMS","isampler1D","itexture1D","iimage1D","isampler1DArray","itexture1DArray","iimage1DArray","isampler2D","itexture2D","iimage2D","isampler2DArray","itexture2DArray","iimage2DArray","isampler2DMS","itexture2DMS","iimage2DMS","isampler2DMSArray","itexture2DMSArray","iimage2DMSArray","isampler2DRect","itexture2DRect","iimage2DRect","isampler3D","itexture3D","iimage3D","isamplerCube","itextureCube","iimageCube","isamplerCubeArray","itextureCubeArray","iimageCubeArray","isamplerBuffer","itextureBuffer","iimageBuffer","isubpassInput","isubpassInputMS","usampler1D","utexture1D","uimage1D","usampler1DArray","utexture1DArray","uimage1DArray","usampler2D","utexture2D","uimage2D","usampler2DArray","utexture2DArray","uimage2DArray","usampler2DMS","utexture2DMS","uimage2DMS","usampler2DMSArray","utexture2DMSArray","uimage2DMSArray","usampler2DRect","utexture2DRect","uimage2DRect","usampler3D","utexture3D","uimage3D","usamplerCube","utextureCube","uimageCube","usamplerCubeArray","utextureCubeArray","uimageCubeArray","usamplerBuffer","utextureBuffer","uimageBuffer","atomic_uint","usubpassInput","usubpassInputMS","sampler","samplerShadow"],operators:["*","+","-","/","~","!","%","<<",">>","<",">","<=",">=","==","!=","&","^","|","&&","^^","||","=","+=","-=","*=","/=","%=","<<=",">>=","&=","^=","|="],builtin_vars:["gl_VertexID","gl_InstanceID","gl_VertexIndex","gl_InstanceIndex","gl_DrawID","gl_BaseVertex","gl_BaseInstance","gl_Position","gl_PointSize","gl_ClipDistance","gl_CullDistance","gl_Color","gl_SecondaryColor","gl_Normal","gl_Vertex","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_FogCoord"],constants:["gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexUniformComponents","gl_MaxVertexOutputComponents"],intsuffix:"[uU]?",floatsuffix:"([fF]|(fl|FL))?",tokenizer:{root:[[/\/\/.*$/,"comment.line"],[/\/\*/,"comment.block","@comment"],[/#[a-z]*/,{cases:{"@directives":"keyword.control.preprocessor","@default":"invalid"}}],["GL_ES","meta.preprocessor"],[/__[A-Z_]+__/,{cases:{"@macros":"meta.preprocessor","@default":"invalid"}}],[/[{}()\[\]]/,"@brackets"],[/(true|false)/,"constant"],[/[\=\+\-\*\/\>\<\&\|\%\!\^]+/,{cases:{"@operators":"operator","@default":"invalid"}}],[/[a-zA-Z][a-zA-Z0-9_]*(?=\()/,"entity.name.function"],[/[a-zA-Z][a-zA-Z0-9_]*/,{cases:{"@storage":"storage.type","@types":"entity.name.type","@builtin_vars":"keyword","@default":"variable.name"}}],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F](@intsuffix)/,"number.hex"],[/0[0-7](@intsuffix)/,"number.octal"],[/\d+(@intsuffix)/,"number"],[/[;,.]/,"delimiter"]],comment:[["\\*/","comment.block","@pop"],[".*","comment.block"]]}})};e&&n(e)},[e,t])};var u=n(93862),c=n(35283),m=n(51443),p=n(85893);function f({fontSize:e=12,style:t,pixiVersion:n,handleEditorCodeChanged:a}){let{code:i,updateCode:o}=(0,u.m4)(),{sandpack:l}=(0,u.X3)(),f=function(){let[e,t]=(0,r.useState)(null),n=(0,r.useRef)(!0),a=(0,r.useRef)(null);return(0,r.useEffect)(()=>{let e=m._m.__getMonacoInstance();if(e)return void t(e);if(!a.current){m._m.config({"vs/nls":{availableLanguages:{}}});try{a.current=m._m.init(),a.current.then(e=>{n.current&&t(e)}).catch(e=>{n.current&&"cancelation"!==e.type&&console.error("Monaco initialization error:",e)})}catch(e){console.error("Failed to initialize Monaco:",e)}}return()=>{n.current=!1}},[]),e}(),x=s(l.activeFile),{colorMode:h}=(0,c.I)();return d(f,n),(0,p.jsxs)(u.el,{style:{height:"100%",margin:0,...t},children:[(0,p.jsx)(u.aM,{}),(0,p.jsx)("div",{style:{flex:1,paddingTop:8,background:"dark"===h?"#1e1e1e":"#FFFFFE"},children:(0,p.jsx)(m.ML,{width:"100%",height:"100%",language:x,theme:"dark"===h?"vs-dark":"light",defaultValue:i,onChange:e=>{o(e||""),a?.(e)},options:{minimap:{enabled:!1},scrollBeyondLastLine:!1,wordWrap:"on",automaticLayout:!0,fontSize:e}},l.activeFile)})]})}let x=({onClick:e})=>(0,p.jsx)(u.z,{style:{position:"relative"},onClick:e,children:(0,p.jsx)(u.zD,{})}),h=({onSelectionChange:e,defaultSelection:t="both"})=>{let[n,a]=(0,r.useState)(t),{colorMode:i}=(0,c.I)(),o=t=>{a(t),e(t)},s={height:"100%",width:"max-content",padding:"0 16px",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",color:"dark"===i?"#F6F8FA":"#2E3138",border:"none"},l="dark"===i?"#22232A":"#e2e2e2";return(0,p.jsxs)("div",{style:{height:32,width:"100%",overflow:"hidden",backgroundColor:"dark"===i?"#2E3138":"#F6F8FA",display:"flex",justifyContent:"right",borderBottomLeftRadius:4,borderBottomRightRadius:4},children:[(0,p.jsx)("button",{onClick:()=>o("editor"),style:{backgroundColor:"editor"===n?l:"transparent",...s},children:"Editor"}),(0,p.jsx)("button",{onClick:()=>o("preview"),style:{backgroundColor:"preview"===n?l:"transparent",...s},children:"Preview"}),(0,p.jsx)("button",{onClick:()=>o("both"),style:{backgroundColor:"both"===n?l:"transparent",...s},children:"Both"})]})};function g(e){let{viewType:t,showConsole:n,fontSize:a,pixiVersion:i}=e,[o,s]=(0,r.useState)(n),[l,d]=(0,r.useState)(t),c=(0,p.jsx)(p.Fragment,{children:(0,p.jsx)(x,{onClick:()=>s(e=>!e)})});return(0,p.jsxs)("div",{style:{height:"100%",width:"100%",display:"flex",flexDirection:"column"},children:[(0,p.jsxs)(u.sp,{style:{height:"100%",overflow:"hidden",borderBottomLeftRadius:0,borderBottomRightRadius:0,flexWrap:"nowrap"},children:[(0,p.jsx)(f,{fontSize:a,style:{flexGrow:+("preview"!==l),flexShrink:+("preview"!==l),flexBasis:"editor"===l?"100%":0,width:"100%",overflow:"hidden"},pixiVersion:i,handleEditorCodeChanged:e.handleEditorCodeChanged}),(0,p.jsxs)(u.el,{style:{height:"100%",width:"100%"},children:[(0,p.jsx)(u.Gj,{style:{flexGrow:100*("editor"!==l),flexShrink:100*("editor"!==l),flexBasis:"editor"!==l?"100%":0,overflow:"hidden"},showOpenInCodeSandbox:!1,actionsChildren:c}),o&&(0,p.jsx)("div",{style:{flexGrow:35*!!o,flexShrink:35*!!o,flexBasis:o?"35%":0,width:"100%",overflow:"hidden"},children:(0,p.jsx)(u.Tq,{showHeader:!1})})]})]}),(0,p.jsx)(h,{onSelectionChange:e=>{d(e)},defaultSelection:l})]})}var v=n(73808),y=n(646);function b({viewType:e="both",showConsole:t=!1,width:n="100%",height:i="100%",dependencies:o={"pixi.js":"latest"},files:s={"index.js":"// Your code here"},fontSize:l=12,handleEditorCodeChanged:d}){let{colorMode:m}=(0,c.I)(),f={...s};delete f["index.js"];let[x]=(0,r.useState)({"/index.html":{code:'<!doctype html>\n<html>\n  <head>\n    <title>PixiJS Playground</title>\n    <meta charset="UTF-8" />\n    <link rel="stylesheet" href="./styles.css" />\n  </head>\n  <body>\n    <script src="index.js"><\/script>\n  </body>\n</html>\n',hidden:!0},"/styles.css":{code:"body {\n  margin: 0;\n  overflow: hidden;\n}\n",hidden:!0},"sandbox.config.json":{code:'{"infiniteLoopProtection": false}',hidden:!0},"index.ts":{code:"",hidden:!0,active:!1},"index.js":{code:s["index.js"]??"// Your code here",hidden:!1,active:!0},...f});return(0,p.jsx)(y.Z,{children:()=>(0,p.jsx)(u.oT,{template:"vanilla-ts",theme:"dark"===m?a:v.A1,files:x,customSetup:{dependencies:o,entry:"index.html"},style:{height:i,width:n,margin:"0 auto",maxWidth:"100%"},options:{recompileDelay:500},children:(0,p.jsx)(g,{handleEditorCodeChanged:d,viewType:e,showConsole:t,fontSize:l,pixiVersion:o["pixi.js"]})})})}},31531:function(e,t,n){n.d(t,{N:()=>o});var r=n(18064),a=n(18146),i=n(85893);function o(e){return(0,a.J)("example",!0),(0,i.jsx)(r.M,{height:"calc(100vh - 325px)",fontSize:14,...e})}},18146:function(e,t,n){n.d(t,{J:()=>a});var r=n(67294);let a=(e,t=!0)=>{(0,r.useEffect)(()=>{let n=document.querySelector("main > .container");if(null!==n&&t)return n.classList.add(e),()=>{n.classList.remove(e)}},[e,t])}},50065:function(e,t,n){n.d(t,{Z:()=>s,a:()=>o});var r=n(67294);let a={},i=r.createContext(a);function o(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:t},e.children)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
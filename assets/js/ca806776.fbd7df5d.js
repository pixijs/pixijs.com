"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["652"],{11400:function(n,e,t){t.r(e),t.d(e,{frontMatter:()=>r,default:()=>u,toc:()=>d,metadata:()=>a,assets:()=>p,contentTitle:()=>c});var a=JSON.parse('{"id":"examples/offscreen-canvas/basic","title":"Basic","description":"","source":"@site/docs/examples/offscreen-canvas/basic.mdx","sourceDirName":"examples/offscreen-canvas","slug":"/examples/offscreen-canvas/basic","permalink":"/8.x/examples/offscreen-canvas/basic","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":0,"custom_edit_url":null,"title":"Basic"},"sidebar":"examplesSidebar","previous":{"title":"Bundle","permalink":"/8.x/examples/assets/bundle"}}'),i=t(85893),s=t(50065),o=t(31531);let r={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:0,custom_edit_url:null,title:"Basic"},c=void 0,p={},d=[];function l(n){return(0,i.jsx)(o.N,{files:{"index.js":"import { Application, Assets, Container, Sprite } from 'pixi.js';\n\n// This example is the based on basic/container, but using OffscreenCanvas.\n\nconst canvas = document.createElement('canvas');\nconst view = canvas.transferControlToOffscreen();\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({ view, background: '#1099bb', resizeTo: window });\n\n  // Append the application canvas to the document body\n  document.body.appendChild(canvas);\n\n  const container = new Container();\n\n  app.stage.addChild(container);\n\n  // Load the bunny texture\n  const texture = await Assets.load('https://pixijs.com/assets/bunny.png');\n\n  // Create a 5x5 grid of bunnies\n  for (let i = 0; i < 25; i++) {\n    const bunny = new Sprite(texture);\n\n    bunny.anchor.set(0.5);\n    bunny.x = (i % 5) * 40;\n    bunny.y = Math.floor(i / 5) * 40;\n    container.addChild(bunny);\n  }\n\n  // Move container to the center\n  container.x = app.screen.width / 2;\n  container.y = app.screen.height / 2;\n\n  // Center bunny sprite in local container coordinates\n  container.pivot.x = container.width / 2;\n  container.pivot.y = container.height / 2;\n\n  // Listen for animate update\n  app.ticker.add((time) => {\n    // Rotate the container!\n    // * use delta to create frame-independent transform *\n    container.rotation -= 0.01 * time.deltaTime;\n  });\n})();\n"}})}function u(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["7462"],{73808:function(e,n,t){t.d(n,{A1:()=>r});var r={colors:{surface1:"#ffffff",surface2:"#F3F3F3",surface3:"#f5f5f5",clickable:"#959da5",base:"#24292e",disabled:"#d1d4d8",hover:"#24292e",accent:"#24292e"},syntax:{keyword:"#d73a49",property:"#005cc5",plain:"#24292e",static:"#032f62",string:"#032f62",definition:"#6f42c1",punctuation:"#24292e",tag:"#22863a",comment:{color:"#6a737d",fontStyle:"normal"}},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}}},72840:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,default:()=>x,toc:()=>h,metadata:()=>r,assets:()=>c,contentTitle:()=>d});var r=JSON.parse('{"id":"guides/third-party/mixing-three-and-pixi","title":"Mixing PixiJS and Three.js","description":"Learn how to combine PixiJS and Three.js to create dynamic applications that leverage both 2D and 3D graphics.","source":"@site/docs/guides/third-party/mixing-three-and-pixi.mdx","sourceDirName":"guides/third-party","slug":"/guides/third-party/mixing-three-and-pixi","permalink":"/8.x/guides/third-party/mixing-three-and-pixi","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/third-party/mixing-three-and-pixi.mdx","tags":[],"version":"current","frontMatter":{"description":"Learn how to combine PixiJS and Three.js to create dynamic applications that leverage both 2D and 3D graphics."},"sidebar":"guidesSidebar","previous":{"title":"Ticker","permalink":"/8.x/guides/components/ticker"},"next":{"title":"v8 Migration Guide","permalink":"/8.x/guides/migrations/v8"}}'),i=t(85893),a=t(50065),s=t(52753),o=t(64710);let l={description:"Learn how to combine PixiJS and Three.js to create dynamic applications that leverage both 2D and 3D graphics."},d="Mixing PixiJS and Three.js",c={},h=[{value:"What You\u2019ll Learn",id:"what-youll-learn",level:3},{value:"Setting Up",id:"setting-up",level:3},{value:"Step 1: Initialize Three.js Renderer and Scene",id:"step-1-initialize-threejs-renderer-and-scene",level:4},{value:"Step 2: Initialize PixiJS Renderer and Stage",id:"step-2-initialize-pixijs-renderer-and-stage",level:4},{value:"Rendering Loop",id:"rendering-loop",level:3},{value:"Example: Combining 3D and 2D Elements",id:"example-combining-3d-and-2d-elements",level:3},{value:"Gotchas",id:"gotchas",level:3},{value:"Conclusion",id:"conclusion",level:3}];function u(e){let n={admonition:"admonition",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mixing-pixijs-and-threejs",children:"Mixing PixiJS and Three.js"})}),"\n",(0,i.jsx)(n.p,{children:"In many projects, developers aim to harness the strengths of both 3D and 2D graphics. Combining the advanced 3D rendering capabilities of Three.js with the speed and versatility of PixiJS for 2D can result in a powerful, seamless experience. Together, these technologies create opportunities for dynamic and visually compelling applications. Lets see how to do this."}),"\n",(0,i.jsx)(n.admonition,{title:"NOTE",type:"info",children:(0,i.jsx)(n.p,{children:"This guide assumes PixiJS will be used as the top layer to deliver UI over a 3D scene rendered by Three.js. However, developers can render either in any order, as many times as needed. This flexibility allows for creative and dynamic applications."})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"what-youll-learn",children:"What You\u2019ll Learn"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Setting up PixiJS and Three.js to share a single WebGL context."}),"\n",(0,i.jsxs)(n.li,{children:["Using ",(0,i.jsx)(n.code,{children:"resetState"})," to manage renderer states."]}),"\n",(0,i.jsx)(n.li,{children:"Avoiding common pitfalls when working with multiple renderers."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"setting-up",children:"Setting Up"}),"\n",(0,i.jsx)(n.h4,{id:"step-1-initialize-threejs-renderer-and-scene",children:"Step 1: Initialize Three.js Renderer and Scene"}),"\n",(0,i.jsx)(n.p,{children:"Three.js will handle the 3D rendering the creation of the dom element and context."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const WIDTH = window.innerWidth;\nconst HEIGHT = window.innerHeight;\n\nconst threeRenderer = new THREE.WebGLRenderer({\n  antialias: true,\n  stencil: true, // so masks work in pixijs\n});\n\nthreeRenderer.setSize(WIDTH, HEIGHT);\nthreeRenderer.setClearColor(0xdddddd, 1);\ndocument.body.appendChild(threeRenderer.domElement);\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(70, WIDTH / HEIGHT);\ncamera.position.z = 50;\nscene.add(camera);\n\nconst boxGeometry = new THREE.BoxGeometry(10, 10, 10);\nconst basicMaterial = new THREE.MeshBasicMaterial({ color: 0x0095dd });\nconst cube = new THREE.Mesh(boxGeometry, basicMaterial);\ncube.rotation.set(0.4, 0.2, 0);\nscene.add(cube);\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"NOTE",type:"info",children:(0,i.jsx)(n.p,{children:"We used the dom element and context created by the three.js renderer to pass to the pixijs renderer.\nThis was the simplest way to ensure that the two renderers were using the same WebGL context. You could have done it the other way round\nif you wanted to."})}),"\n",(0,i.jsx)(n.h4,{id:"step-2-initialize-pixijs-renderer-and-stage",children:"Step 2: Initialize PixiJS Renderer and Stage"}),"\n",(0,i.jsx)(n.p,{children:"PixiJS will handle the 2D overlay."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const pixiRenderer = new PIXI.WebGLRenderer();\n\nawait pixiRenderer.init({\n  context: threeRenderer.getContext(),\n  width: WIDTH,\n  height: HEIGHT,\n  clearBeforeRender: false, // Prevent PixiJS from clearing the Three.js render\n});\n\nconst stage = new PIXI.Container();\nconst amazingUI = new PIXI.Graphics().roundRect(20, 80, 100, 100, 5).roundRect(220, 80, 100, 100, 5).fill(0xffff00);\n\nstage.addChild(amazingUI);\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"rendering-loop",children:"Rendering Loop"}),"\n",(0,i.jsx)(n.p,{children:"To ensure smooth transitions between the renderers, reset their states before each render:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"function render() {\n  // Render the Three.js scene\n  threeRenderer.resetState();\n  threeRenderer.render(scene, camera);\n\n  // Render the PixiJS stage\n  pixiRenderer.resetState();\n  pixiRenderer.render({ container: stage });\n\n  requestAnimationFrame(render);\n}\n\nrequestAnimationFrame(render);\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-combining-3d-and-2d-elements",children:"Example: Combining 3D and 2D Elements"}),"\n",(0,i.jsx)(n.p,{children:"Here\u2019s the complete example integrating PixiJS and Three.js:"}),"\n","\n",(0,i.jsx)(s.k,{files:{"index.js":o.Z},dependencies:{three:"latest","pixi.js":"latest"}}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"gotchas",children:"Gotchas"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Enable Stencil Buffers:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When creating the Three.js renderer, ensure ",(0,i.jsx)(n.code,{children:"stencil"})," is set to ",(0,i.jsx)(n.code,{children:"true"}),". This allows PixiJS masks to work correctly."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Keep Dimensions in Sync:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ensure both renderers use the same ",(0,i.jsx)(n.code,{children:"width"})," and ",(0,i.jsx)(n.code,{children:"height"})," to avoid visual mismatches\u2014so be careful when resizing one, you need to resize the other!"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Pass the WebGL Context:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pass the WebGL context from Three.js to PixiJS during initialization using ",(0,i.jsx)(n.code,{children:"pixiRenderer.init({ context: threeRenderer.getContext() });"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Disable Clear Before Render:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Set ",(0,i.jsx)(n.code,{children:"clearBeforeRender: false"})," when initializing the PixiJS renderer. This prevents PixiJS from clearing the Three.js content that was rendered before it."]}),"\n",(0,i.jsxs)(n.li,{children:["Alternatively you can set ",(0,i.jsx)(n.code,{children:"clear: false"})," in the ",(0,i.jsx)(n.code,{children:"pixiRenderer.render()"})," call. eg ",(0,i.jsx)(n.code,{children:"pixiRenderer.render({ container: stage, clear: false });"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Manage Render Order:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"In this example, Three.js is rendered first, followed by PixiJS for UI layers. However, this order is flexible. You can render pixi -> three -> pixi is you want, just make sure you reset the state when switching renderer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Separate Resources:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Remember that resources like textures are not shared between PixiJS and Three.js. A PixiJS texture cannot be directly used as a Three.js texture and vice versa."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"Mixing PixiJS and Three.js can be a powerful way to create dynamic and visually appealing applications. By carefully managing the rendering loop and states, you can achieve seamless transitions between 3D and 2D layers. This approach allows you to leverage the strengths of both technologies, creating applications that are both visually stunning and performant."}),"\n",(0,i.jsx)(n.p,{children:"This technique can be used with other renderers too - as long as they have their own way of resetting their state (which the main ones do) you can mix them. Popular 3D engines like Babylon.js and PlayCanvas both support state management through their respective APIs, making them compatible with this mixing approach. This gives you the flexibility to choose the 3D engine that best suits your needs while still leveraging PixiJS's powerful 2D capabilities."})]})}function x(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},18064:function(e,n,t){t.d(n,{M:()=>b});var r=t(67294);let i={colors:{surface1:"#242426",surface2:"#444950",surface3:"#44475a",clickable:"#fff",base:"#f8f8f2",disabled:"#6272a4",hover:"#f8f8f2",accent:"#e91e63",error:"#f8f8f2",errorSurface:"#44475a"},syntax:{plain:"#f8f8f2",comment:{color:"#6272a4",fontStyle:"italic"},keyword:"#ff79c6",tag:"#ff79c6",punctuation:"#ff79c6",definition:"#f8f8f2",property:"#50fa7b",static:"#bd93f9",string:"#f1fa8c"},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}},a=e=>{let n=e.split(".");return n[n.length-1]},s=e=>{let n=a(e);return"js"===n?"javascript":"ts"===n?"typescript":"vert"===n||"frag"===n?"glsl":n},o=e=>(0,r.useMemo)(()=>s(e),[e]),l=async e=>{let n=`pixi-definitions-${e}`,t=JSON.parse(localStorage.getItem(n))||null;if(!t)try{let t=await fetch(`https://cdn.jsdelivr.net/npm/pixi.js@${e}/dist/pixi.js.d.ts`),r=await t.text();if(r.startsWith("// Generated by dts-bundle-generator"))return localStorage.setItem(n,JSON.stringify(r)),r;return null}catch(e){return console.error("Failed to fetch pixi.js types:",e),null}return t},d=(e,n="latest")=>{(0,r.useEffect)(()=>{let t=async e=>{let t=await l(n),r=`declare module 'pixi.js' { ${t} }`,i=`
            declare module '*.wgsl' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.vert' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.frag' {
                const shader: 'string';
                export default shader;
            }`;e.languages.typescript.typescriptDefaults.addExtraLib(r,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.javascriptDefaults.addExtraLib(r,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.typescriptDefaults.addExtraLib(i),e.languages.typescript.javascriptDefaults.addExtraLib(i);let{languages:a}=e,s="glsl";a.register({id:s,extensions:[".frag",".vert"]}),a.setLanguageConfiguration(s,{comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"',notIn:["string"]},{open:"'",close:"'",notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]}),a.setMonarchTokensProvider(s,{tokenPostfix:".glsl",defaultToken:"invalid",directives:["#","#define","#undef","#if","#ifdef","#ifndef","#else","#elif","#endif","#error","#pragma","#extension","#version","#line"],macros:["__LINE__","__FILE__","__VERSION__"],storage:["in","out","uniform","layout","attribute","varying","precision","highp","mediump","lowp"],types:["void","bool","int","uint","float","double","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","uvec2","uvec3","uvec4","dvec2","dvec3","dvec4","mat2","mat3","mat4","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","dmat2","dmat3","dmat4","dmat2x2","dmat2x3","dmat2x4","dmat3x2","dmat3x3","dmat3x4","dmat4x2","dmat4x3","dmat4x4","sampler1D","texture1D","image1D","sampler1DShadow","sampler1DArray","texture1DArray","image1DArray","sampler1DArrayShadow","sampler2D","texture2D","image2D","sampler2DShadow","sampler2DArray","texture2DArray","image2DArray","sampler2DArrayShadow","sampler2DMS","texture2DMS","image2DMS","sampler2DMSArray","texture2DMSArray","image2DMSArray","sampler2DRect","texture2DRect","image2DRect","sampler2DRectShadow","sampler3D","texture3D","image3D","samplerCube","textureCube","imageCube","samplerCubeShadow","samplerCubeArray","textureCubeArray","imageCubeArray","samplerCubeArrayShadow","samplerBuffer","textureBuffer","imageBuffer","subpassInput","subpassInputMS","isampler1D","itexture1D","iimage1D","isampler1DArray","itexture1DArray","iimage1DArray","isampler2D","itexture2D","iimage2D","isampler2DArray","itexture2DArray","iimage2DArray","isampler2DMS","itexture2DMS","iimage2DMS","isampler2DMSArray","itexture2DMSArray","iimage2DMSArray","isampler2DRect","itexture2DRect","iimage2DRect","isampler3D","itexture3D","iimage3D","isamplerCube","itextureCube","iimageCube","isamplerCubeArray","itextureCubeArray","iimageCubeArray","isamplerBuffer","itextureBuffer","iimageBuffer","isubpassInput","isubpassInputMS","usampler1D","utexture1D","uimage1D","usampler1DArray","utexture1DArray","uimage1DArray","usampler2D","utexture2D","uimage2D","usampler2DArray","utexture2DArray","uimage2DArray","usampler2DMS","utexture2DMS","uimage2DMS","usampler2DMSArray","utexture2DMSArray","uimage2DMSArray","usampler2DRect","utexture2DRect","uimage2DRect","usampler3D","utexture3D","uimage3D","usamplerCube","utextureCube","uimageCube","usamplerCubeArray","utextureCubeArray","uimageCubeArray","usamplerBuffer","utextureBuffer","uimageBuffer","atomic_uint","usubpassInput","usubpassInputMS","sampler","samplerShadow"],operators:["*","+","-","/","~","!","%","<<",">>","<",">","<=",">=","==","!=","&","^","|","&&","^^","||","=","+=","-=","*=","/=","%=","<<=",">>=","&=","^=","|="],builtin_vars:["gl_VertexID","gl_InstanceID","gl_VertexIndex","gl_InstanceIndex","gl_DrawID","gl_BaseVertex","gl_BaseInstance","gl_Position","gl_PointSize","gl_ClipDistance","gl_CullDistance","gl_Color","gl_SecondaryColor","gl_Normal","gl_Vertex","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_FogCoord"],constants:["gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexUniformComponents","gl_MaxVertexOutputComponents"],intsuffix:"[uU]?",floatsuffix:"([fF]|(fl|FL))?",tokenizer:{root:[[/\/\/.*$/,"comment.line"],[/\/\*/,"comment.block","@comment"],[/#[a-z]*/,{cases:{"@directives":"keyword.control.preprocessor","@default":"invalid"}}],["GL_ES","meta.preprocessor"],[/__[A-Z_]+__/,{cases:{"@macros":"meta.preprocessor","@default":"invalid"}}],[/[{}()\[\]]/,"@brackets"],[/(true|false)/,"constant"],[/[\=\+\-\*\/\>\<\&\|\%\!\^]+/,{cases:{"@operators":"operator","@default":"invalid"}}],[/[a-zA-Z][a-zA-Z0-9_]*(?=\()/,"entity.name.function"],[/[a-zA-Z][a-zA-Z0-9_]*/,{cases:{"@storage":"storage.type","@types":"entity.name.type","@builtin_vars":"keyword","@default":"variable.name"}}],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F](@intsuffix)/,"number.hex"],[/0[0-7](@intsuffix)/,"number.octal"],[/\d+(@intsuffix)/,"number"],[/[;,.]/,"delimiter"]],comment:[["\\*/","comment.block","@pop"],[".*","comment.block"]]}})};e&&t(e)},[e,n])};var c=t(93862),h=t(35283),u=t(51443),x=t(85893);function p({fontSize:e=12,style:n,pixiVersion:t,handleEditorCodeChanged:i}){let{code:a,updateCode:s}=(0,c.m4)(),{sandpack:l}=(0,c.X3)(),p=function(){let[e,n]=(0,r.useState)(null),t=(0,r.useRef)(!0),i=(0,r.useRef)(null);return(0,r.useEffect)(()=>{let e=u._m.__getMonacoInstance();if(e)return void n(e);if(!i.current){u._m.config({"vs/nls":{availableLanguages:{}}});try{i.current=u._m.init(),i.current.then(e=>{t.current&&n(e)}).catch(e=>{t.current&&"cancelation"!==e.type&&console.error("Monaco initialization error:",e)})}catch(e){console.error("Failed to initialize Monaco:",e)}}return()=>{t.current=!1}},[]),e}(),m=o(l.activeFile),{colorMode:g}=(0,h.I)();return d(p,t),(0,x.jsxs)(c.el,{style:{height:"100%",margin:0,...n},children:[(0,x.jsx)(c.aM,{}),(0,x.jsx)("div",{style:{flex:1,paddingTop:8,background:"dark"===g?"#1e1e1e":"#FFFFFE"},children:(0,x.jsx)(u.ML,{width:"100%",height:"100%",language:m,theme:"dark"===g?"vs-dark":"light",defaultValue:a,onChange:e=>{s(e||""),i?.(e)},options:{minimap:{enabled:!1},scrollBeyondLastLine:!1,wordWrap:"on",automaticLayout:!0,fontSize:e}},l.activeFile)})]})}let m=({onClick:e})=>(0,x.jsx)(c.z,{style:{position:"relative"},onClick:e,children:(0,x.jsx)(c.zD,{})}),g=({onSelectionChange:e,defaultSelection:n="both"})=>{let[t,i]=(0,r.useState)(n),{colorMode:a}=(0,h.I)(),s=n=>{i(n),e(n)},o={height:"100%",width:"max-content",padding:"0 16px",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",color:"dark"===a?"#F6F8FA":"#2E3138",border:"none"},l="dark"===a?"#22232A":"#e2e2e2";return(0,x.jsxs)("div",{style:{height:32,width:"100%",overflow:"hidden",backgroundColor:"dark"===a?"#2E3138":"#F6F8FA",display:"flex",justifyContent:"right",borderBottomLeftRadius:4,borderBottomRightRadius:4},children:[(0,x.jsx)("button",{onClick:()=>s("editor"),style:{backgroundColor:"editor"===t?l:"transparent",...o},children:"Editor"}),(0,x.jsx)("button",{onClick:()=>s("preview"),style:{backgroundColor:"preview"===t?l:"transparent",...o},children:"Preview"}),(0,x.jsx)("button",{onClick:()=>s("both"),style:{backgroundColor:"both"===t?l:"transparent",...o},children:"Both"})]})};function f(e){let{viewType:n,showConsole:t,fontSize:i,pixiVersion:a}=e,[s,o]=(0,r.useState)(t),[l,d]=(0,r.useState)(n),h=(0,x.jsx)(x.Fragment,{children:(0,x.jsx)(m,{onClick:()=>o(e=>!e)})});return(0,x.jsxs)("div",{style:{height:"100%",width:"100%",display:"flex",flexDirection:"column"},children:[(0,x.jsxs)(c.sp,{style:{height:"100%",overflow:"hidden",borderBottomLeftRadius:0,borderBottomRightRadius:0,flexWrap:"nowrap"},children:[(0,x.jsx)(p,{fontSize:i,style:{flexGrow:+("preview"!==l),flexShrink:+("preview"!==l),flexBasis:"editor"===l?"100%":0,width:"100%",overflow:"hidden"},pixiVersion:a,handleEditorCodeChanged:e.handleEditorCodeChanged}),(0,x.jsxs)(c.el,{style:{height:"100%",width:"100%"},children:[(0,x.jsx)(c.Gj,{style:{flexGrow:100*("editor"!==l),flexShrink:100*("editor"!==l),flexBasis:"editor"!==l?"100%":0,overflow:"hidden"},showOpenInCodeSandbox:!1,actionsChildren:h}),s&&(0,x.jsx)("div",{style:{flexGrow:35*!!s,flexShrink:35*!!s,flexBasis:s?"35%":0,width:"100%",overflow:"hidden"},children:(0,x.jsx)(c.Tq,{showHeader:!1})})]})]}),(0,x.jsx)(g,{onSelectionChange:e=>{d(e)},defaultSelection:l})]})}var y=t(73808),j=t(646);function b({viewType:e="both",showConsole:n=!1,width:t="100%",height:a="100%",dependencies:s={"pixi.js":"latest"},files:o={"index.js":"// Your code here"},fontSize:l=12,handleEditorCodeChanged:d}){let{colorMode:u}=(0,h.I)(),p={...o};delete p["index.js"];let[m]=(0,r.useState)({"/index.html":{code:'<!doctype html>\n<html>\n  <head>\n    <title>PixiJS Playground</title>\n    <meta charset="UTF-8" />\n    <link rel="stylesheet" href="./styles.css" />\n  </head>\n  <body>\n    <script src="index.js"><\/script>\n  </body>\n</html>\n',hidden:!0},"/styles.css":{code:"body {\n  margin: 0;\n  overflow: hidden;\n}\n",hidden:!0},"sandbox.config.json":{code:'{"infiniteLoopProtection": false}',hidden:!0},"index.ts":{code:"",hidden:!0,active:!1},"index.js":{code:o["index.js"]??"// Your code here",hidden:!1,active:!0},...p});return(0,x.jsx)(j.Z,{children:()=>(0,x.jsx)(c.oT,{template:"vanilla-ts",theme:"dark"===u?i:y.A1,files:m,customSetup:{dependencies:s,entry:"index.html"},style:{height:a,width:t,margin:"0 auto",maxWidth:"100%"},options:{recompileDelay:500},children:(0,x.jsx)(f,{handleEditorCodeChanged:d,viewType:e,showConsole:n,fontSize:l,pixiVersion:s["pixi.js"]})})})}},52753:function(e,n,t){t.d(n,{k:()=>a});var r=t(18064),i=t(85893);function a(e){return(0,i.jsx)(r.M,{height:400,width:700,viewType:"preview",...e})}},64710:function(e,n,t){t.d(n,{Z:()=>r});let r="// dependencies: { \"three\": \"latest\", \"pixi.js\": \"latest\" }\n// description: A basic integration of PixiJS and Three.js sharing the same WebGL context\n// Import required classes from PixiJS and Three.js\nimport { Container, Graphics, Text, WebGLRenderer } from 'pixi.js';\nimport * as THREE from 'three';\n\n// Self-executing async function to set up the demo\n(async () => {\n  // Initialize window dimensions\n  let WIDTH = window.innerWidth;\n  let HEIGHT = window.innerHeight;\n\n  // === THREE.JS SETUP ===\n  // Create Three.js WebGL renderer with antialiasing and stencil buffer\n  const threeRenderer = new THREE.WebGLRenderer({ antialias: true, stencil: true });\n\n  // Configure Three.js renderer size and background color\n  threeRenderer.setSize(WIDTH, HEIGHT);\n  threeRenderer.setClearColor(0xdddddd, 1); // Light gray background\n  document.body.appendChild(threeRenderer.domElement);\n\n  // Create Three.js scene\n  const scene = new THREE.Scene();\n\n  // Set up perspective camera with 70\xb0 FOV\n  const threeCamera = new THREE.PerspectiveCamera(70, WIDTH / HEIGHT);\n\n  threeCamera.position.z = 50; // Move camera back to see the scene\n  scene.add(threeCamera);\n\n  // Create a simple cube mesh\n  const boxGeometry = new THREE.BoxGeometry(30, 30, 30);\n  const basicMaterial = new THREE.MeshBasicMaterial({ color: 0x0095dd }); // Blue color\n  const cube = new THREE.Mesh(boxGeometry, basicMaterial);\n\n  scene.add(cube);\n\n  // === PIXI.JS SETUP ===\n  // Create PixiJS renderer that shares the WebGL context with Three.js\n  const pixiRenderer = new WebGLRenderer();\n\n  // Initialize PixiJS renderer with shared context\n  await pixiRenderer.init({\n    context: threeRenderer.getContext(),\n    width: WIDTH,\n    height: HEIGHT,\n    clearBeforeRender: false, // Don't clear the canvas as Three.js will handle that\n  });\n\n  // Create PixiJS scene graph\n  const stage = new Container();\n\n  // Create a yellow rounded rectangle UI element\n  const uiLayer = new Graphics().roundRect(20, 80, 300, 300, 20).fill(0xffff00);\n\n  // Add text overlay\n  const text = new Text({ text: 'Pixi and Three.js', style: { fontFamily: 'Arial', fontSize: 24, fill: 'black' } });\n\n  uiLayer.addChild(text);\n  stage.addChild(uiLayer);\n\n  // Animation loop\n  function loop() {\n    // Rotate cube continuously\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.01;\n\n    // Animate UI layer position using sine wave\n    uiLayer.y = ((Math.sin(Date.now() * 0.001) + 1) * 0.5 * WIDTH) / 2;\n\n    // Render Three.js scene\n    threeRenderer.resetState();\n    threeRenderer.render(scene, threeCamera);\n\n    // Render PixiJS scene\n    pixiRenderer.resetState();\n    pixiRenderer.render({ container: stage });\n\n    // Continue animation loop\n    requestAnimationFrame(loop);\n  }\n\n  // Start animation loop\n  requestAnimationFrame(loop);\n\n  // Handle window resizing\n  window.addEventListener('resize', () => {\n    WIDTH = window.innerWidth;\n    HEIGHT = window.innerHeight;\n\n    // Update Three.js renderer\n    threeRenderer.setSize(WIDTH, HEIGHT);\n    // Update Three.js camera aspect ratio so it renders correctly\n    threeCamera.aspect = WIDTH / HEIGHT;\n    threeCamera.updateProjectionMatrix();\n\n    // Update PixiJS renderer\n    pixiRenderer.resize(WIDTH, HEIGHT);\n  });\n})();\n"},50065:function(e,n,t){t.d(n,{Z:()=>o,a:()=>s});var r=t(67294);let i={},a=r.createContext(i);function s(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);
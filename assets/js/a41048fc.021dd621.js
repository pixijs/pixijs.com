"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["9757"],{32421:function(e,t,i){i.r(t),i.d(t,{frontMatter:()=>l,default:()=>m,toc:()=>d,metadata:()=>n,assets:()=>o,contentTitle:()=>r});var n=JSON.parse('{"id":"examples/filters-basic/displacement-map-flag","title":"Displacement Map Flag","description":"","source":"@site/docs/examples/filters-basic/displacement-map-flag.mdx","sourceDirName":"examples/filters-basic","slug":"/examples/filters-basic/displacement-map-flag","permalink":"/8.x/examples/filters-basic/displacement-map-flag","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":3,"custom_edit_url":null,"title":"Displacement Map Flag"},"sidebar":"examplesSidebar","previous":{"title":"Displacement Map Crawlies","permalink":"/8.x/examples/filters-basic/displacement-map-crawlies"},"next":{"title":"Mouse Blending","permalink":"/8.x/examples/filters-advanced/mouse-blending"}}'),a=i(85893),s=i(50065),p=i(31531);let l={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:3,custom_edit_url:null,title:"Displacement Map Flag"},r=void 0,o={},d=[];function c(e){return(0,a.jsx)(p.N,{files:{"index.js":"import { Application, Assets, Container, DisplacementFilter, Sprite, WRAP_MODES } from 'pixi.js';\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({ resizeTo: window });\n\n  // Append the application canvas to the document body\n  document.body.appendChild(app.canvas);\n\n  // Load the textures\n  await Assets.load([\n    'https://pixijs.com/assets/pixi-filters/flag.png',\n    'https://pixijs.com/assets/pixi-filters/displacement_map_repeat.jpg',\n  ]);\n\n  app.stage.eventMode = 'static';\n\n  const container = new Container();\n\n  app.stage.addChild(container);\n\n  const flag = Sprite.from('https://pixijs.com/assets/pixi-filters/flag.png');\n\n  container.addChild(flag);\n  flag.x = 100;\n  flag.y = 100;\n\n  const displacementSprite = Sprite.from('https://pixijs.com/assets/pixi-filters/displacement_map_repeat.jpg');\n\n  // Make sure the sprite is wrapping.\n  displacementSprite.texture.baseTexture.wrapMode = WRAP_MODES.REPEAT;\n\n  // Create a displacement filter\n  const displacementFilter = new DisplacementFilter({ sprite: displacementSprite, scale: { x: 60, y: 120 } });\n\n  displacementFilter.padding = 10;\n\n  displacementSprite.position = flag.position;\n\n  app.stage.addChild(displacementSprite);\n\n  // Apply the filter\n  flag.filters = [displacementFilter];\n\n  app.ticker.add(() => {\n    // Offset the sprite position to make vFilterCoord update to larger value.\n    // Repeat wrapping makes sure there's still pixels on the coordinates.\n    displacementSprite.x++;\n    // Reset x to 0 when it's over width to keep values from going to very huge numbers.\n    if (displacementSprite.x > displacementSprite.width) {\n      displacementSprite.x = 0;\n    }\n  });\n})();\n"}})}function m(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["7740"],{93562:function(n,e,t){t.r(e),t.d(e,{default:()=>u,frontMatter:()=>s,metadata:()=>i,assets:()=>p,toc:()=>d,contentTitle:()=>c});var i=JSON.parse('{"id":"examples/basic/container","title":"Container","description":"","source":"@site/docs/examples/basic/container.mdx","sourceDirName":"examples/basic","slug":"/examples/basic/container","permalink":"/8.x/examples/basic/container","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":0,"custom_edit_url":null,"title":"Container"},"sidebar":"examplesSidebar","previous":{"title":"Examples","permalink":"/8.x/examples/"},"next":{"title":"Transparent Background","permalink":"/8.x/examples/basic/transparent-background"}}'),a=t("85893"),o=t("50065"),r=t("43076");let s={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:0,custom_edit_url:null,title:"Container"},c=void 0,p={},d=[];function l(n){return(0,a.jsx)(r.N,{files:{"index.js":"import { Application, Assets, Container, Sprite } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ background: '#1099bb', resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    // Create and add a container to the stage\n    const container = new Container();\n\n    app.stage.addChild(container);\n\n    // Load the bunny texture\n    const texture = await Assets.load('https://pixijs.com/assets/bunny.png');\n\n    // Create a 5x5 grid of bunnies in the container\n    for (let i = 0; i < 25; i++)\n    {\n        const bunny = new Sprite(texture);\n\n        bunny.x = (i % 5) * 40;\n        bunny.y = Math.floor(i / 5) * 40;\n        container.addChild(bunny);\n    }\n\n    // Move the container to the center\n    container.x = app.screen.width / 2;\n    container.y = app.screen.height / 2;\n\n    // Center the bunny sprites in local container coordinates\n    container.pivot.x = container.width / 2;\n    container.pivot.y = container.height / 2;\n\n    // Listen for animate update\n    app.ticker.add((time) =>\n    {\n        // Continuously rotate the container!\n        // * use delta to create frame-independent transform *\n        container.rotation -= 0.01 * time.deltaTime;\n    });\n})();\n"}})}function u(n={}){let{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["7916"],{41876:function(e,t,s){s.r(t),s.d(t,{default:()=>h,frontMatter:()=>o,metadata:()=>i,assets:()=>d,toc:()=>l,contentTitle:()=>c});var i=JSON.parse('{"id":"examples/graphics/svg-load","title":"Svg Load","description":"","source":"@site/docs/examples/graphics/svg-load.mdx","sourceDirName":"examples/graphics","slug":"/examples/graphics/svg-load","permalink":"/8.x/examples/graphics/svg-load","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":4,"custom_edit_url":null,"title":"Svg Load"},"sidebar":"examplesSidebar","previous":{"title":"Svg","permalink":"/8.x/examples/graphics/svg"},"next":{"title":"Texture","permalink":"/8.x/examples/graphics/texture"}}'),n=s("85893"),a=s("50065"),p=s("67963"),r=s("24201");let o={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:4,custom_edit_url:null,title:"Svg Load"},c=void 0,d={},l=[];function u(e){return(0,n.jsx)(p.N,{files:{"index.js":r.Z}})}function h(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},24201:function(e,t,s){s.d(t,{Z:function(){return i}});let i="import { Application, Assets, Graphics } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ antialias: true, resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    const tigerSvg = await Assets.load({\n        src: 'https://pixijs.com/assets/tiger.svg',\n        data: {\n            parseAsGraphicsContext: true,\n        },\n    });\n\n    const graphics = new Graphics(tigerSvg);\n\n    // line it up as this svg is not centered\n    const bounds = graphics.getLocalBounds();\n\n    graphics.pivot.set((bounds.x + bounds.width) / 2, (bounds.y + bounds.height) / 2);\n\n    graphics.position.set(app.screen.width / 2, app.screen.height / 2);\n\n    app.stage.addChild(graphics);\n\n    app.ticker.add((time) =>\n    {\n        graphics.rotation += 0.01;\n        graphics.scale.set(2 + Math.sin(graphics.rotation));\n    });\n})();\n"}}]);
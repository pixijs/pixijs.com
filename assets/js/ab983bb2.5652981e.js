"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["2186"],{73808:function(e,t,n){n.d(t,{A1:()=>r});var r={colors:{surface1:"#ffffff",surface2:"#F3F3F3",surface3:"#f5f5f5",clickable:"#959da5",base:"#24292e",disabled:"#d1d4d8",hover:"#24292e",accent:"#24292e"},syntax:{keyword:"#d73a49",property:"#005cc5",plain:"#24292e",static:"#032f62",string:"#032f62",definition:"#6f42c1",punctuation:"#24292e",tag:"#22863a",comment:{color:"#6a737d",fontStyle:"normal"}},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}}},94480:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,default:()=>m,toc:()=>c,metadata:()=>r,assets:()=>u,contentTitle:()=>d});var r=JSON.parse('{"id":"examples/advanced/slots","title":"Slots","description":"","source":"@site/versioned_docs/version-7.x/examples/advanced/slots.mdx","sourceDirName":"examples/advanced","slug":"/examples/advanced/slots","permalink":"/7.x/examples/advanced/slots","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":0,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":0,"custom_edit_url":null,"title":"Slots"},"sidebar":"examplesSidebar","previous":{"title":"Simple Plane","permalink":"/7.x/examples/basic/simple-plane"},"next":{"title":"Scratch Card","permalink":"/7.x/examples/advanced/scratch-card"}}'),o=n(85893),a=n(50065),i=n(31531),s=n(99883);let l={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:0,custom_edit_url:null,title:"Slots"},d=void 0,u={},c=[];function p(e){return(0,o.jsx)(i.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ background: '#1099bb', resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\nPIXI.Assets.load([\n  'https://pixijs.com/assets/eggHead.png',\n  'https://pixijs.com/assets/flowerTop.png',\n  'https://pixijs.com/assets/helmlok.png',\n  'https://pixijs.com/assets/skully.png',\n]).then(onAssetsLoaded);\n\nconst REEL_WIDTH = 160;\nconst SYMBOL_SIZE = 150;\n\n// onAssetsLoaded handler builds the example.\nfunction onAssetsLoaded() {\n  // Create different slot symbols.\n  const slotTextures = [\n    PIXI.Texture.from('https://pixijs.com/assets/eggHead.png'),\n    PIXI.Texture.from('https://pixijs.com/assets/flowerTop.png'),\n    PIXI.Texture.from('https://pixijs.com/assets/helmlok.png'),\n    PIXI.Texture.from('https://pixijs.com/assets/skully.png'),\n  ];\n\n  // Build the reels\n  const reels = [];\n  const reelContainer = new PIXI.Container();\n\n  for (let i = 0; i < 5; i++) {\n    const rc = new PIXI.Container();\n\n    rc.x = i * REEL_WIDTH;\n    reelContainer.addChild(rc);\n\n    const reel = {\n      container: rc,\n      symbols: [],\n      position: 0,\n      previousPosition: 0,\n      blur: new PIXI.filters.BlurFilter(),\n    };\n\n    reel.blur.blurX = 0;\n    reel.blur.blurY = 0;\n    rc.filters = [reel.blur];\n\n    // Build the symbols\n    for (let j = 0; j < 4; j++) {\n      const symbol = new PIXI.Sprite(slotTextures[Math.floor(Math.random() * slotTextures.length)]);\n      // Scale the symbol to fit symbol area.\n\n      symbol.y = j * SYMBOL_SIZE;\n      symbol.scale.x = symbol.scale.y = Math.min(SYMBOL_SIZE / symbol.width, SYMBOL_SIZE / symbol.height);\n      symbol.x = Math.round((SYMBOL_SIZE - symbol.width) / 2);\n      reel.symbols.push(symbol);\n      rc.addChild(symbol);\n    }\n    reels.push(reel);\n  }\n  app.stage.addChild(reelContainer);\n\n  // Build top & bottom covers and position reelContainer\n  const margin = (app.screen.height - SYMBOL_SIZE * 3) / 2;\n\n  reelContainer.y = margin;\n  reelContainer.x = Math.round(app.screen.width - REEL_WIDTH * 5);\n  const top = new PIXI.Graphics();\n\n  top.beginFill(0, 1);\n  top.drawRect(0, 0, app.screen.width, margin);\n  const bottom = new PIXI.Graphics();\n\n  bottom.beginFill(0, 1);\n  bottom.drawRect(0, SYMBOL_SIZE * 3 + margin, app.screen.width, margin);\n\n  // Add play text\n  const style = new PIXI.TextStyle({\n    fontFamily: 'Arial',\n    fontSize: 36,\n    fontStyle: 'italic',\n    fontWeight: 'bold',\n    fill: ['#ffffff', '#00ff99'], // gradient\n    stroke: '#4a1850',\n    strokeThickness: 5,\n    dropShadow: true,\n    dropShadowColor: '#000000',\n    dropShadowBlur: 4,\n    dropShadowAngle: Math.PI / 6,\n    dropShadowDistance: 6,\n    wordWrap: true,\n    wordWrapWidth: 440,\n  });\n\n  const playText = new PIXI.Text('Spin the wheels!', style);\n\n  playText.x = Math.round((bottom.width - playText.width) / 2);\n  playText.y = app.screen.height - margin + Math.round((margin - playText.height) / 2);\n  bottom.addChild(playText);\n\n  // Add header text\n  const headerText = new PIXI.Text('PIXI MONSTER SLOTS!', style);\n\n  headerText.x = Math.round((top.width - headerText.width) / 2);\n  headerText.y = Math.round((margin - headerText.height) / 2);\n  top.addChild(headerText);\n\n  app.stage.addChild(top);\n  app.stage.addChild(bottom);\n\n  // Set the interactivity.\n  bottom.eventMode = 'static';\n  bottom.cursor = 'pointer';\n  bottom.addListener('pointerdown', () => {\n    startPlay();\n  });\n\n  let running = false;\n\n  // Function to start playing.\n  function startPlay() {\n    if (running) return;\n    running = true;\n\n    for (let i = 0; i < reels.length; i++) {\n      const r = reels[i];\n      const extra = Math.floor(Math.random() * 3);\n      const target = r.position + 10 + i * 5 + extra;\n      const time = 2500 + i * 600 + extra * 600;\n\n      tweenTo(r, 'position', target, time, backout(0.5), null, i === reels.length - 1 ? reelsComplete : null);\n    }\n  }\n\n  // Reels done handler.\n  function reelsComplete() {\n    running = false;\n  }\n\n  // Listen for animate update.\n  app.ticker.add(() => {\n    // Update the slots.\n    for (let i = 0; i < reels.length; i++) {\n      const r = reels[i];\n      // Update blur filter y amount based on speed.\n      // This would be better if calculated with time in mind also. Now blur depends on frame rate.\n\n      r.blur.blurY = (r.position - r.previousPosition) * 8;\n      r.previousPosition = r.position;\n\n      // Update symbol positions on reel.\n      for (let j = 0; j < r.symbols.length; j++) {\n        const s = r.symbols[j];\n        const prevy = s.y;\n\n        s.y = ((r.position + j) % r.symbols.length) * SYMBOL_SIZE - SYMBOL_SIZE;\n        if (s.y < 0 && prevy > SYMBOL_SIZE) {\n          // Detect going over and swap a texture.\n          // This should in proper product be determined from some logical reel.\n          s.texture = slotTextures[Math.floor(Math.random() * slotTextures.length)];\n          s.scale.x = s.scale.y = Math.min(SYMBOL_SIZE / s.texture.width, SYMBOL_SIZE / s.texture.height);\n          s.x = Math.round((SYMBOL_SIZE - s.width) / 2);\n        }\n      }\n    }\n  });\n}\n\n// Very simple tweening utility function. This should be replaced with a proper tweening library in a real product.\nconst tweening = [];\n\nfunction tweenTo(object, property, target, time, easing, onchange, oncomplete) {\n  const tween = {\n    object,\n    property,\n    propertyBeginValue: object[property],\n    target,\n    easing,\n    time,\n    change: onchange,\n    complete: oncomplete,\n    start: Date.now(),\n  };\n\n  tweening.push(tween);\n\n  return tween;\n}\n// Listen for animate update.\napp.ticker.add(() => {\n  const now = Date.now();\n  const remove = [];\n\n  for (let i = 0; i < tweening.length; i++) {\n    const t = tweening[i];\n    const phase = Math.min(1, (now - t.start) / t.time);\n\n    t.object[t.property] = lerp(t.propertyBeginValue, t.target, t.easing(phase));\n    if (t.change) t.change(t);\n    if (phase === 1) {\n      t.object[t.property] = t.target;\n      if (t.complete) t.complete(t);\n      remove.push(t);\n    }\n  }\n  for (let i = 0; i < remove.length; i++) {\n    tweening.splice(tweening.indexOf(remove[i]), 1);\n  }\n});\n\n// Basic lerp funtion.\nfunction lerp(a1, a2, t) {\n  return a1 * (1 - t) + a2 * t;\n}\n\n// Backout function from tweenjs.\n// https://github.com/CreateJS/TweenJS/blob/master/src/tweenjs/Ease.js\nfunction backout(amount) {\n  return (t) => --t * t * ((amount + 1) * t + amount) + 1;\n}\n"},dependencies:{"pixi.js":s.npm}})}function m(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},18064:function(e,t,n){n.d(t,{M:()=>S});var r=n(67294);let o={colors:{surface1:"#242426",surface2:"#444950",surface3:"#44475a",clickable:"#fff",base:"#f8f8f2",disabled:"#6272a4",hover:"#f8f8f2",accent:"#e91e63",error:"#f8f8f2",errorSurface:"#44475a"},syntax:{plain:"#f8f8f2",comment:{color:"#6272a4",fontStyle:"italic"},keyword:"#ff79c6",tag:"#ff79c6",punctuation:"#ff79c6",definition:"#f8f8f2",property:"#50fa7b",static:"#bd93f9",string:"#f1fa8c"},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}},a=e=>{let t=e.split(".");return t[t.length-1]},i=e=>{let t=a(e);return"js"===t?"javascript":"ts"===t?"typescript":"vert"===t||"frag"===t?"glsl":t},s=e=>(0,r.useMemo)(()=>i(e),[e]),l=async e=>{let t=`pixi-definitions-${e}`,n=JSON.parse(localStorage.getItem(t))||null;if(!n)try{let n=await fetch(`https://cdn.jsdelivr.net/npm/pixi.js@${e}/dist/pixi.js.d.ts`),r=await n.text();if(r.startsWith("// Generated by dts-bundle-generator"))return localStorage.setItem(t,JSON.stringify(r)),r;return null}catch(e){return console.error("Failed to fetch pixi.js types:",e),null}return n},d=(e,t="latest")=>{(0,r.useEffect)(()=>{let n=async e=>{let n=await l(t),r=`declare module 'pixi.js' { ${n} }`,o=`
            declare module '*.wgsl' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.vert' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.frag' {
                const shader: 'string';
                export default shader;
            }`;e.languages.typescript.typescriptDefaults.addExtraLib(r,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.javascriptDefaults.addExtraLib(r,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.typescriptDefaults.addExtraLib(o),e.languages.typescript.javascriptDefaults.addExtraLib(o);let{languages:a}=e,i="glsl";a.register({id:i,extensions:[".frag",".vert"]}),a.setLanguageConfiguration(i,{comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"',notIn:["string"]},{open:"'",close:"'",notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]}),a.setMonarchTokensProvider(i,{tokenPostfix:".glsl",defaultToken:"invalid",directives:["#","#define","#undef","#if","#ifdef","#ifndef","#else","#elif","#endif","#error","#pragma","#extension","#version","#line"],macros:["__LINE__","__FILE__","__VERSION__"],storage:["in","out","uniform","layout","attribute","varying","precision","highp","mediump","lowp"],types:["void","bool","int","uint","float","double","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","uvec2","uvec3","uvec4","dvec2","dvec3","dvec4","mat2","mat3","mat4","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","dmat2","dmat3","dmat4","dmat2x2","dmat2x3","dmat2x4","dmat3x2","dmat3x3","dmat3x4","dmat4x2","dmat4x3","dmat4x4","sampler1D","texture1D","image1D","sampler1DShadow","sampler1DArray","texture1DArray","image1DArray","sampler1DArrayShadow","sampler2D","texture2D","image2D","sampler2DShadow","sampler2DArray","texture2DArray","image2DArray","sampler2DArrayShadow","sampler2DMS","texture2DMS","image2DMS","sampler2DMSArray","texture2DMSArray","image2DMSArray","sampler2DRect","texture2DRect","image2DRect","sampler2DRectShadow","sampler3D","texture3D","image3D","samplerCube","textureCube","imageCube","samplerCubeShadow","samplerCubeArray","textureCubeArray","imageCubeArray","samplerCubeArrayShadow","samplerBuffer","textureBuffer","imageBuffer","subpassInput","subpassInputMS","isampler1D","itexture1D","iimage1D","isampler1DArray","itexture1DArray","iimage1DArray","isampler2D","itexture2D","iimage2D","isampler2DArray","itexture2DArray","iimage2DArray","isampler2DMS","itexture2DMS","iimage2DMS","isampler2DMSArray","itexture2DMSArray","iimage2DMSArray","isampler2DRect","itexture2DRect","iimage2DRect","isampler3D","itexture3D","iimage3D","isamplerCube","itextureCube","iimageCube","isamplerCubeArray","itextureCubeArray","iimageCubeArray","isamplerBuffer","itextureBuffer","iimageBuffer","isubpassInput","isubpassInputMS","usampler1D","utexture1D","uimage1D","usampler1DArray","utexture1DArray","uimage1DArray","usampler2D","utexture2D","uimage2D","usampler2DArray","utexture2DArray","uimage2DArray","usampler2DMS","utexture2DMS","uimage2DMS","usampler2DMSArray","utexture2DMSArray","uimage2DMSArray","usampler2DRect","utexture2DRect","uimage2DRect","usampler3D","utexture3D","uimage3D","usamplerCube","utextureCube","uimageCube","usamplerCubeArray","utextureCubeArray","uimageCubeArray","usamplerBuffer","utextureBuffer","uimageBuffer","atomic_uint","usubpassInput","usubpassInputMS","sampler","samplerShadow"],operators:["*","+","-","/","~","!","%","<<",">>","<",">","<=",">=","==","!=","&","^","|","&&","^^","||","=","+=","-=","*=","/=","%=","<<=",">>=","&=","^=","|="],builtin_vars:["gl_VertexID","gl_InstanceID","gl_VertexIndex","gl_InstanceIndex","gl_DrawID","gl_BaseVertex","gl_BaseInstance","gl_Position","gl_PointSize","gl_ClipDistance","gl_CullDistance","gl_Color","gl_SecondaryColor","gl_Normal","gl_Vertex","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_FogCoord"],constants:["gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexUniformComponents","gl_MaxVertexOutputComponents"],intsuffix:"[uU]?",floatsuffix:"([fF]|(fl|FL))?",tokenizer:{root:[[/\/\/.*$/,"comment.line"],[/\/\*/,"comment.block","@comment"],[/#[a-z]*/,{cases:{"@directives":"keyword.control.preprocessor","@default":"invalid"}}],["GL_ES","meta.preprocessor"],[/__[A-Z_]+__/,{cases:{"@macros":"meta.preprocessor","@default":"invalid"}}],[/[{}()\[\]]/,"@brackets"],[/(true|false)/,"constant"],[/[\=\+\-\*\/\>\<\&\|\%\!\^]+/,{cases:{"@operators":"operator","@default":"invalid"}}],[/[a-zA-Z][a-zA-Z0-9_]*(?=\()/,"entity.name.function"],[/[a-zA-Z][a-zA-Z0-9_]*/,{cases:{"@storage":"storage.type","@types":"entity.name.type","@builtin_vars":"keyword","@default":"variable.name"}}],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F](@intsuffix)/,"number.hex"],[/0[0-7](@intsuffix)/,"number.octal"],[/\d+(@intsuffix)/,"number"],[/[;,.]/,"delimiter"]],comment:[["\\*/","comment.block","@pop"],[".*","comment.block"]]}})};e&&n(e)},[e,t])};var u=n(93862),c=n(35283),p=n(51443),m=n(85893);function f({fontSize:e=12,style:t,pixiVersion:n,handleEditorCodeChanged:o}){let{code:a,updateCode:i}=(0,u.m4)(),{sandpack:l}=(0,u.X3)(),f=function(){let[e,t]=(0,r.useState)(null),n=(0,r.useRef)(!0),o=(0,r.useRef)(null);return(0,r.useEffect)(()=>{let e=p._m.__getMonacoInstance();if(e)return void t(e);if(!o.current){p._m.config({"vs/nls":{availableLanguages:{}}});try{o.current=p._m.init(),o.current.then(e=>{n.current&&t(e)}).catch(e=>{n.current&&"cancelation"!==e.type&&console.error("Monaco initialization error:",e)})}catch(e){console.error("Failed to initialize Monaco:",e)}}return()=>{n.current=!1}},[]),e}(),x=s(l.activeFile),{colorMode:h}=(0,c.I)();return d(f,n),(0,m.jsxs)(u.el,{style:{height:"100%",margin:0,...t},children:[(0,m.jsx)(u.aM,{}),(0,m.jsx)("div",{style:{flex:1,paddingTop:8,background:"dark"===h?"#1e1e1e":"#FFFFFE"},children:(0,m.jsx)(p.ML,{width:"100%",height:"100%",language:x,theme:"dark"===h?"vs-dark":"light",defaultValue:a,onChange:e=>{i(e||""),o?.(e)},options:{minimap:{enabled:!1},scrollBeyondLastLine:!1,wordWrap:"on",automaticLayout:!0,fontSize:e}},l.activeFile)})]})}let x=({onClick:e})=>(0,m.jsx)(u.z,{style:{position:"relative"},onClick:e,children:(0,m.jsx)(u.zD,{})}),h=({onSelectionChange:e,defaultSelection:t="both"})=>{let[n,o]=(0,r.useState)(t),{colorMode:a}=(0,c.I)(),i=t=>{o(t),e(t)},s={height:"100%",width:"max-content",padding:"0 16px",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",color:"dark"===a?"#F6F8FA":"#2E3138",border:"none"},l="dark"===a?"#22232A":"#e2e2e2";return(0,m.jsxs)("div",{style:{height:32,width:"100%",overflow:"hidden",backgroundColor:"dark"===a?"#2E3138":"#F6F8FA",display:"flex",justifyContent:"right",borderBottomLeftRadius:4,borderBottomRightRadius:4},children:[(0,m.jsx)("button",{onClick:()=>i("editor"),style:{backgroundColor:"editor"===n?l:"transparent",...s},children:"Editor"}),(0,m.jsx)("button",{onClick:()=>i("preview"),style:{backgroundColor:"preview"===n?l:"transparent",...s},children:"Preview"}),(0,m.jsx)("button",{onClick:()=>i("both"),style:{backgroundColor:"both"===n?l:"transparent",...s},children:"Both"})]})};function g(e){let{viewType:t,showConsole:n,fontSize:o,pixiVersion:a}=e,[i,s]=(0,r.useState)(n),[l,d]=(0,r.useState)(t),c=(0,m.jsx)(m.Fragment,{children:(0,m.jsx)(x,{onClick:()=>s(e=>!e)})});return(0,m.jsxs)("div",{style:{height:"100%",width:"100%",display:"flex",flexDirection:"column"},children:[(0,m.jsxs)(u.sp,{style:{height:"100%",overflow:"hidden",borderBottomLeftRadius:0,borderBottomRightRadius:0,flexWrap:"nowrap"},children:[(0,m.jsx)(f,{fontSize:o,style:{flexGrow:+("preview"!==l),flexShrink:+("preview"!==l),flexBasis:"editor"===l?"100%":0,width:"100%",overflow:"hidden"},pixiVersion:a,handleEditorCodeChanged:e.handleEditorCodeChanged}),(0,m.jsxs)(u.el,{style:{height:"100%",width:"100%"},children:[(0,m.jsx)(u.Gj,{style:{flexGrow:100*("editor"!==l),flexShrink:100*("editor"!==l),flexBasis:"editor"!==l?"100%":0,overflow:"hidden"},showOpenInCodeSandbox:!1,actionsChildren:c}),i&&(0,m.jsx)("div",{style:{flexGrow:35*!!i,flexShrink:35*!!i,flexBasis:i?"35%":0,width:"100%",overflow:"hidden"},children:(0,m.jsx)(u.Tq,{showHeader:!1})})]})]}),(0,m.jsx)(h,{onSelectionChange:e=>{d(e)},defaultSelection:l})]})}var y=n(73808),b=n(646);function S({viewType:e="both",showConsole:t=!1,width:n="100%",height:a="100%",dependencies:i={"pixi.js":"latest"},files:s={"index.js":"// Your code here"},fontSize:l=12,handleEditorCodeChanged:d}){let{colorMode:p}=(0,c.I)(),f={...s};delete f["index.js"];let[x]=(0,r.useState)({"/index.html":{code:'<!doctype html>\n<html>\n  <head>\n    <title>PixiJS Playground</title>\n    <meta charset="UTF-8" />\n    <link rel="stylesheet" href="./styles.css" />\n  </head>\n  <body>\n    <script src="index.js"><\/script>\n  </body>\n</html>\n',hidden:!0},"/styles.css":{code:"body {\n  margin: 0;\n  overflow: hidden;\n}\n",hidden:!0},"sandbox.config.json":{code:'{"infiniteLoopProtection": false}',hidden:!0},"index.ts":{code:"",hidden:!0,active:!1},"index.js":{code:s["index.js"]??"// Your code here",hidden:!1,active:!0},...f});return(0,m.jsx)(b.Z,{children:()=>(0,m.jsx)(u.oT,{template:"vanilla-ts",theme:"dark"===p?o:y.A1,files:x,customSetup:{dependencies:i,entry:"index.html"},style:{height:a,width:n,margin:"0 auto",maxWidth:"100%"},options:{recompileDelay:500},children:(0,m.jsx)(g,{handleEditorCodeChanged:d,viewType:e,showConsole:t,fontSize:l,pixiVersion:i["pixi.js"]})})})}},31531:function(e,t,n){n.d(t,{N:()=>i});var r=n(18064),o=n(18146),a=n(85893);function i(e){return(0,o.J)("example",!0),(0,a.jsx)(r.M,{height:"calc(100vh - 325px)",fontSize:14,...e})}},18146:function(e,t,n){n.d(t,{J:()=>o});var r=n(67294);let o=(e,t=!0)=>{(0,r.useEffect)(()=>{let n=document.querySelector("main > .container");if(null!==n&&t)return n.classList.add(e),()=>{n.classList.remove(e)}},[e,t])}},50065:function(e,t,n){n.d(t,{Z:()=>s,a:()=>i});var r=n(67294);let o={},a=r.createContext(o);function i(e){let t=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:t},e.children)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
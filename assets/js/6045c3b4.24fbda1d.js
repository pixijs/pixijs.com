"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["9485"],{81980:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>p,default:()=>c,toc:()=>d,metadata:()=>a,assets:()=>l,contentTitle:()=>u});var a=JSON.parse('{"id":"examples/events/dragging","title":"Dragging","description":"","source":"@site/versioned_docs/version-7.x/examples/events/dragging.mdx","sourceDirName":"examples/events","slug":"/examples/events/dragging","permalink":"/7.x/examples/events/dragging","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":2,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":2,"custom_edit_url":null,"title":"Dragging"},"sidebar":"examplesSidebar","previous":{"title":"Interactivity","permalink":"/7.x/examples/events/interactivity"},"next":{"title":"Custom Mouse Icon","permalink":"/7.x/examples/events/custom-mouse-icon"}}'),i=t(85893),o=t(50065),s=t(31531),r=t(99883);let p={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:2,custom_edit_url:null,title:"Dragging"},u=void 0,l={},d=[];function g(e){return(0,i.jsx)(s.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ background: '#1099bb', resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\n// create a texture from an image path\nconst texture = PIXI.Texture.from('https://pixijs.com/assets/bunny.png');\n\n// Scale mode for pixelation\ntexture.baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST;\n\nfor (let i = 0; i < 10; i++) {\n  createBunny(Math.floor(Math.random() * app.screen.width), Math.floor(Math.random() * app.screen.height));\n}\n\nfunction createBunny(x, y) {\n  // create our little bunny friend..\n  const bunny = new PIXI.Sprite(texture);\n\n  // enable the bunny to be interactive... this will allow it to respond to mouse and touch events\n  bunny.eventMode = 'static';\n\n  // this button mode will mean the hand cursor appears when you roll over the bunny with your mouse\n  bunny.cursor = 'pointer';\n\n  // center the bunny's anchor point\n  bunny.anchor.set(0.5);\n\n  // make it a bit bigger, so it's easier to grab\n  bunny.scale.set(3);\n\n  // setup events for mouse + touch using\n  // the pointer events\n  bunny.on('pointerdown', onDragStart, bunny);\n\n  // move the sprite to its designated position\n  bunny.x = x;\n  bunny.y = y;\n\n  // add it to the stage\n  app.stage.addChild(bunny);\n}\n\nlet dragTarget = null;\n\napp.stage.eventMode = 'static';\napp.stage.hitArea = app.screen;\napp.stage.on('pointerup', onDragEnd);\napp.stage.on('pointerupoutside', onDragEnd);\n\nfunction onDragMove(event) {\n  if (dragTarget) {\n    dragTarget.parent.toLocal(event.global, null, dragTarget.position);\n  }\n}\n\nfunction onDragStart() {\n  // store a reference to the data\n  // the reason for this is because of multitouch\n  // we want to track the movement of this particular touch\n  // this.data = event.data;\n  this.alpha = 0.5;\n  dragTarget = this;\n  app.stage.on('pointermove', onDragMove);\n}\n\nfunction onDragEnd() {\n  if (dragTarget) {\n    app.stage.off('pointermove', onDragMove);\n    dragTarget.alpha = 1;\n    dragTarget = null;\n  }\n}\n"},dependencies:{"pixi.js":r.npm}})}function c(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
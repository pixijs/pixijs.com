"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["93"],{68646:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,default:()=>m,toc:()=>d,metadata:()=>i,assets:()=>l,contentTitle:()=>g});var i=JSON.parse('{"id":"examples/filters-basic/displacement-map-crawlies","title":"Displacement Map Crawlies","description":"","source":"@site/versioned_docs/version-7.x/examples/filters-basic/displacement-map-crawlies.mdx","sourceDirName":"examples/filters-basic","slug":"/examples/filters-basic/displacement-map-crawlies","permalink":"/7.x/examples/filters-basic/displacement-map-crawlies","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":2,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":2,"custom_edit_url":null,"title":"Displacement Map Crawlies"},"sidebar":"examplesSidebar","previous":{"title":"Color Matrix","permalink":"/7.x/examples/filters-basic/color-matrix"},"next":{"title":"Displacement Map Flag","permalink":"/7.x/examples/filters-basic/displacement-map-flag"}}'),a=t(85893),s=t(50065),o=t(31531),p=t(99883);let r={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:2,custom_edit_url:null,title:"Displacement Map Crawlies"},g=void 0,l={},d=[];function c(e){return(0,a.jsx)(o.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\napp.stage.eventMode = 'static';\n\nconst container = new PIXI.Container();\n\napp.stage.addChild(container);\n\nconst padding = 100;\nconst bounds = new PIXI.Rectangle(-padding, -padding, app.screen.width + padding * 2, app.screen.height + padding * 2);\nconst maggots = [];\n\nfor (let i = 0; i < 20; i++) {\n  const maggot = PIXI.Sprite.from('https://pixijs.com/assets/maggot.png');\n\n  maggot.anchor.set(0.5);\n  container.addChild(maggot);\n\n  maggot.direction = Math.random() * Math.PI * 2;\n  maggot.speed = 1;\n  maggot.turnSpeed = Math.random() - 0.8;\n\n  maggot.x = Math.random() * bounds.width;\n  maggot.y = Math.random() * bounds.height;\n\n  maggot.scale.set(1 + Math.random() * 0.3);\n  maggot.original = new PIXI.Point();\n  maggot.original.copyFrom(maggot.scale);\n  maggots.push(maggot);\n}\n\nconst displacementSprite = PIXI.Sprite.from('https://pixijs.com/assets/pixi-filters/displace.png');\nconst displacementFilter = new PIXI.filters.DisplacementFilter(displacementSprite);\n\napp.stage.addChild(displacementSprite);\n\ncontainer.filters = [displacementFilter];\n\ndisplacementFilter.scale.x = 110;\ndisplacementFilter.scale.y = 110;\ndisplacementSprite.anchor.set(0.5);\n\nconst ring = PIXI.Sprite.from('https://pixijs.com/assets/pixi-filters/ring.png');\n\nring.anchor.set(0.5);\n\nring.visible = false;\n\napp.stage.addChild(ring);\n\nconst bg = PIXI.Sprite.from('https://pixijs.com/assets/bg_grass.jpg');\n\nbg.width = app.screen.width;\nbg.height = app.screen.height;\n\nbg.alpha = 0.4;\n\ncontainer.addChild(bg);\n\napp.stage.on('mousemove', onPointerMove).on('touchmove', onPointerMove);\n\nfunction onPointerMove(eventData) {\n  ring.visible = true;\n\n  displacementSprite.position.set(eventData.data.global.x - 25, eventData.data.global.y);\n  ring.position.copyFrom(displacementSprite.position);\n}\n\nlet count = 0;\n\napp.ticker.add(() => {\n  count += 0.05;\n\n  for (let i = 0; i < maggots.length; i++) {\n    const maggot = maggots[i];\n\n    maggot.direction += maggot.turnSpeed * 0.01;\n    maggot.x += Math.sin(maggot.direction) * maggot.speed;\n    maggot.y += Math.cos(maggot.direction) * maggot.speed;\n\n    maggot.rotation = -maggot.direction - Math.PI / 2;\n    maggot.scale.x = maggot.original.x + Math.sin(count) * 0.2;\n\n    // wrap the maggots around as the crawl\n    if (maggot.x < bounds.x) {\n      maggot.x += bounds.width;\n    } else if (maggot.x > bounds.x + bounds.width) {\n      maggot.x -= bounds.width;\n    }\n\n    if (maggot.y < bounds.y) {\n      maggot.y += bounds.height;\n    } else if (maggot.y > bounds.y + bounds.height) {\n      maggot.y -= bounds.height;\n    }\n  }\n});\n"},dependencies:{"pixi.js":p.npm}})}function m(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
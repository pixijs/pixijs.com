"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["238"],{25425:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,default:()=>l,toc:()=>c,metadata:()=>s,assets:()=>d,contentTitle:()=>p});var s=JSON.parse('{"id":"examples/mesh-and-shaders/textured-mesh-basic","title":"Textured Mesh Basic","description":"","source":"@site/docs/examples/mesh-and-shaders/textured-mesh-basic.mdx","sourceDirName":"examples/mesh-and-shaders","slug":"/examples/mesh-and-shaders/textured-mesh-basic","permalink":"/8.x/examples/mesh-and-shaders/textured-mesh-basic","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":1,"custom_edit_url":null,"title":"Textured Mesh Basic"},"sidebar":"examplesSidebar","previous":{"title":"Perspective Mesh","permalink":"/8.x/examples/mesh-and-shaders/perspective-mesh"},"next":{"title":"Textured Mesh Advanced","permalink":"/8.x/examples/mesh-and-shaders/textured-mesh-advanced"}}'),i=t(85893),a=t(50065),o=t(31531);let r={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:1,custom_edit_url:null,title:"Textured Mesh Basic"},p=void 0,d={},c=[];function h(e){return(0,i.jsx)(o.N,{files:{"index.js":"import { Application, Assets, Container, MeshRope, Point } from 'pixi.js';\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({ resizeTo: window });\n\n  // Append the application canvas to the document body\n  document.body.appendChild(app.canvas);\n\n  // Load the snake texture\n  const texture = await Assets.load('https://pixijs.com/assets/snake.png');\n\n  let count = 0;\n\n  // Build a rope from points!\n  const ropeLength = 918 / 20;\n  const points = [];\n\n  for (let i = 0; i < 20; i++) {\n    points.push(new Point(i * ropeLength, 0));\n  }\n\n  // Create the snake MeshRope\n  const strip = new MeshRope({ texture, points });\n\n  strip.x = -459;\n\n  const snakeContainer = new Container();\n\n  snakeContainer.x = 400;\n  snakeContainer.y = 300;\n\n  snakeContainer.scale.set(800 / 1100);\n  app.stage.addChild(snakeContainer);\n\n  snakeContainer.addChild(strip);\n\n  // Animate the rope points\n  app.ticker.add(() => {\n    count += 0.1;\n\n    // make the snake\n    for (let i = 0; i < points.length; i++) {\n      points[i].y = Math.sin(i * 0.5 + count) * 30;\n      points[i].x = i * ropeLength + Math.cos(i * 0.3 + count) * 20;\n    }\n  });\n})();\n"}})}function l(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["3085"],{27715:function(n,t,e){e.r(t),e.d(t,{default:()=>x,frontMatter:()=>l,metadata:()=>i,assets:()=>c,toc:()=>d,contentTitle:()=>p});var i=JSON.parse('{"id":"examples/filters-basic/color-matrix","title":"Color Matrix","description":"","source":"@site/versioned_docs/version-7.x/examples/filters-basic/color-matrix.mdx","sourceDirName":"examples/filters-basic","slug":"/examples/filters-basic/color-matrix","permalink":"/7.x/examples/filters-basic/color-matrix","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":1,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":1,"custom_edit_url":null,"title":"Color Matrix"},"sidebar":"examplesSidebar","previous":{"title":"Blur","permalink":"/7.x/examples/filters-basic/blur"},"next":{"title":"Displacement Map Crawlies","permalink":"/7.x/examples/filters-basic/displacement-map-crawlies"}}'),a=e("85893"),s=e("50065"),o=e("67963"),r=e("99883");let l={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:1,custom_edit_url:null,title:"Color Matrix"},p=void 0,c={},d=[];function h(n){return(0,a.jsx)(o.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application({ resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\napp.stage.eventMode = 'static';\n\nconst bg = PIXI.Sprite.from('https://pixijs.com/assets/bg_rotate.jpg');\n\nbg.anchor.set(0.5);\n\nbg.x = app.screen.width / 2;\nbg.y = app.screen.height / 2;\n\nconst filter = new PIXI.filters.ColorMatrixFilter();\n\nconst container = new PIXI.Container();\n\ncontainer.x = app.screen.width / 2;\ncontainer.y = app.screen.height / 2;\n\nconst bgFront = PIXI.Sprite.from('https://pixijs.com/assets/bg_scene_rotate.jpg');\n\nbgFront.anchor.set(0.5);\n\ncontainer.addChild(bgFront);\n\nconst light2 = PIXI.Sprite.from('https://pixijs.com/assets/light_rotate_2.png');\n\nlight2.anchor.set(0.5);\ncontainer.addChild(light2);\n\nconst light1 = PIXI.Sprite.from('https://pixijs.com/assets/light_rotate_1.png');\n\nlight1.anchor.set(0.5);\ncontainer.addChild(light1);\n\nconst panda = PIXI.Sprite.from('https://pixijs.com/assets/panda.png');\n\npanda.anchor.set(0.5);\n\ncontainer.addChild(panda);\n\napp.stage.addChild(container);\n\napp.stage.filters = [filter];\n\nlet count = 0;\nlet enabled = true;\n\napp.stage.on('pointertap', () =>\n{\n    enabled = !enabled;\n    app.stage.filters = enabled ? [filter] : null;\n});\n\nconst help = new PIXI.Text('Click or tap to turn filters on / off.', {\n    fontFamily: 'Arial',\n    fontSize: 12,\n    fontWeight: 'bold',\n    fill: 'white',\n});\n\nhelp.y = app.screen.height - 25;\nhelp.x = 10;\n\napp.stage.addChild(help);\n\napp.ticker.add((delta) =>\n{\n    bg.rotation += 0.01;\n    bgFront.rotation -= 0.01;\n    light1.rotation += 0.02;\n    light2.rotation += 0.01;\n\n    panda.scale.x = 1 + Math.sin(count) * 0.04;\n    panda.scale.y = 1 + Math.cos(count) * 0.04;\n\n    count += 0.1;\n\n    const { matrix } = filter;\n\n    matrix[1] = Math.sin(count) * 3;\n    matrix[2] = Math.cos(count);\n    matrix[3] = Math.cos(count) * 1.5;\n    matrix[4] = Math.sin(count / 3) * 2;\n    matrix[5] = Math.sin(count / 2);\n    matrix[6] = Math.sin(count / 4);\n});\n"},dependencies:{"pixi.js":r.npm}})}function x(n={}){let{wrapper:t}={...(0,s.a)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(h,{...n})}):h(n)}},99883:function(n){n.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["4713"],{38113:function(t,n,e){e.r(n),e.d(n,{frontMatter:()=>u,default:()=>x,toc:()=>c,metadata:()=>o,assets:()=>p,contentTitle:()=>l});var o=JSON.parse('{"id":"examples/events/custom-hitarea","title":"Custom Hitarea","description":"","source":"@site/versioned_docs/version-7.x/examples/events/custom-hitarea.mdx","sourceDirName":"examples/events","slug":"/examples/events/custom-hitarea","permalink":"/7.x/examples/events/custom-hitarea","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":4,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":4,"custom_edit_url":null,"title":"Custom Hitarea"},"sidebar":"examplesSidebar","previous":{"title":"Custom Mouse Icon","permalink":"/7.x/examples/events/custom-mouse-icon"},"next":{"title":"Logger","permalink":"/7.x/examples/events/logger"}}'),s=e(85893),r=e(50065),a=e(31531),i=e(99883);let u={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:4,custom_edit_url:null,title:"Custom Hitarea"},l=void 0,p={},c=[];function d(t){return(0,s.jsx)(a.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\nconst app = new PIXI.Application(800, 600, { background: '#1099bb' });\n\ndocument.body.appendChild(app.view);\n\nconst yellowStar = PIXI.Texture.from('https://pixijs.com/assets/yellowstar.png');\n\n// Standard Sprite Button\nconst starButton1 = new PIXI.Sprite(yellowStar);\n\nstarButton1.position.set(50, 200);\nstarButton1.cursor = 'pointer';\nstarButton1.eventMode = 'static';\n\nstarButton1\n  .on('pointerdown', onClick, starButton1)\n  .on('pointerover', onPointerOver, starButton1)\n  .on('pointerout', onPointerOut, starButton1);\n\n// Custom Hitarea Button\nconst starButton2 = new PIXI.Sprite(yellowStar);\n\nstarButton2.position.set(250, 200);\n\n// Create a hitarea that matches the sprite, which will be used for point\n// intersection\nstarButton2.hitArea = new PIXI.Polygon([\n  80, 0, 100, 50, 160, 55, 115, 95, 130, 150, 80, 120, 30, 150, 45, 95, 0, 55, 60, 50,\n]);\nstarButton2.cursor = 'pointer';\nstarButton2.eventMode = 'static';\n\nstarButton2\n  .on('pointerdown', onClick, starButton2)\n  .on('pointerover', onPointerOver, starButton2)\n  .on('pointerout', onPointerOut, starButton2);\n\n// With Mask, No Hit Area\nconst starButton3 = new PIXI.Sprite(yellowStar);\n\nstarButton3.position.set(450, 200);\nstarButton3.cursor = 'pointer';\nstarButton3.eventMode = 'static';\n\nconst squareMask = new PIXI.Graphics().beginFill(0xffffff).drawRect(starButton3.x, starButton3.y, 75, 200).endFill();\n\nstarButton3.mask = squareMask;\n\nstarButton3\n  .on('pointerdown', onClick, starButton3)\n  .on('pointerover', onPointerOver, starButton3)\n  .on('pointerout', onPointerOut, starButton3);\n\n// With a Mask and Hit Area\n// Hitareas ignore masks. You can still click on a button made in this way,\n// even from areas covered by a mask\nconst starButton4 = new PIXI.Sprite(yellowStar);\n\nstarButton4.position.set(600, 200);\n\nconst squareMask2 = new PIXI.Graphics().beginFill(0xffffff).drawRect(starButton4.x, starButton4.y, 75, 200).endFill();\n\nstarButton4.mask = squareMask2;\n\n// Again, hitarea for intersection checks\nstarButton4.hitArea = new PIXI.Polygon([\n  80, 0, 100, 50, 160, 55, 115, 95, 130, 150, 80, 120, 30, 150, 45, 95, 0, 55, 60, 50,\n]);\nstarButton4.cursor = 'pointer';\nstarButton4.eventMode = 'static';\n\nstarButton4\n  .on('pointerdown', onClick, starButton4)\n  .on('pointerover', onPointerOver, starButton4)\n  .on('pointerout', onPointerOut, starButton4);\n\nconst style = new PIXI.TextStyle({ fill: '#ffffff' });\n\nconst text1 = new PIXI.Text('Standard', style);\n\ntext1.x = starButton1.x + 25;\ntext1.y = starButton1.y + 170;\n\nconst text2 = new PIXI.Text('Hit Area', style);\n\ntext2.x = starButton2.x + 35;\ntext2.y = starButton2.y + 170;\n\nconst text3 = new PIXI.Text('Mask', style);\n\ntext3.x = starButton3.x + 10;\ntext3.y = starButton3.y + 170;\n\nconst text4 = new PIXI.Text('Mask + Hit Area', style);\n\ntext4.x = starButton4.x - 10;\ntext4.y = starButton4.y + 170;\n\n// Add to stage\napp.stage.addChild(\n  starButton2,\n  starButton1,\n  starButton3,\n  starButton4,\n  squareMask,\n  squareMask2,\n  text1,\n  text2,\n  text3,\n  text4,\n);\n\nfunction onClick() {\n  this.tint = 0x333333;\n}\n\nfunction onPointerOver() {\n  this.tint = 0x666666;\n}\n\nfunction onPointerOut() {\n  this.tint = 0xffffff;\n}\n"},dependencies:{"pixi.js":i.npm}})}function x(t={}){let{wrapper:n}={...(0,r.a)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}},99883:function(t){t.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);
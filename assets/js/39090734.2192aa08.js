"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["525"],{80376:function(n,e,t){t.r(e),t.d(e,{frontMatter:()=>d,default:()=>u,toc:()=>p,metadata:()=>i,assets:()=>l,contentTitle:()=>r});var i=JSON.parse('{"id":"examples/basic/blend-modes","title":"Blend Modes","description":"","source":"@site/docs/examples/basic/blend-modes.mdx","sourceDirName":"examples/basic","slug":"/examples/basic/blend-modes","permalink":"/8.x/examples/basic/blend-modes","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":4,"custom_edit_url":null,"title":"Blend Modes"},"sidebar":"examplesSidebar","previous":{"title":"Particle Container","permalink":"/8.x/examples/basic/particle-container"},"next":{"title":"Mesh Plane","permalink":"/8.x/examples/basic/mesh-plane"}}'),a=t(85893),s=t(50065),o=t(31531);let d={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:4,custom_edit_url:null,title:"Blend Modes"},r=void 0,l={},p=[];function c(n){return(0,a.jsx)(o.N,{files:{"index.js":"import { Application, Assets, Container, Sprite, Text, Texture } from 'pixi.js';\nimport 'pixi.js/advanced-blend-modes';\n\n(async () => {\n  // Create a new application\n  const app = new Application();\n\n  // Initialize the application\n  await app.init({\n    antialias: true,\n    backgroundColor: 'white',\n    resizeTo: window,\n    // NEEDS TO BE TRUE FOR WEBGL!\n    useBackBuffer: true,\n  });\n\n  // Append the application canvas to the document body\n  document.body.appendChild(app.canvas);\n\n  const pandaTexture = await Assets.load(`https://pixijs.com/assets/panda.png`);\n  const rainbowGradient = await Assets.load(`https://pixijs.com/assets/rainbow-gradient.png`);\n\n  const allBlendModes = [\n    'normal',\n    'add',\n    'screen',\n    'darken',\n    'lighten',\n    'color-dodge',\n    'color-burn',\n    'linear-burn',\n    'linear-dodge',\n    'linear-light',\n    'hard-light',\n    'soft-light',\n    'pin-light',\n    'difference',\n    'exclusion',\n    'overlay',\n    'saturation',\n    'color',\n    'luminosity',\n    'add-npm',\n    'subtract',\n    'divide',\n    'vivid-light',\n    'hard-mix',\n    'negation',\n  ];\n\n  const size = 800 / 5;\n\n  const pandas = [];\n\n  for (let i = 0; i < allBlendModes.length; i++) {\n    const container = new Container();\n\n    const sprite = new Sprite({\n      texture: pandaTexture,\n      width: 100,\n      height: 100,\n      anchor: 0.5,\n      position: { x: size / 2, y: size / 2 },\n    });\n\n    pandas.push(sprite);\n\n    const sprite2 = new Sprite({\n      texture: rainbowGradient,\n      width: size,\n      height: size,\n      blendMode: allBlendModes[i],\n    });\n\n    container.addChild(sprite, sprite2);\n\n    const text = new Text({\n      text: allBlendModes[i],\n      style: {\n        fontSize: 16,\n        fontFamily: 'short-stack',\n      },\n    });\n\n    // Add blend mode text labels\n    text.x = size / 2 - text.width / 2;\n    text.y = size - text.height;\n    const textBackground = new Sprite(Texture.WHITE);\n\n    textBackground.x = text.x - 2;\n    textBackground.y = text.y;\n    textBackground.width = text.width + 4;\n    textBackground.height = text.height + 4;\n    container.addChild(textBackground, text);\n\n    app.stage.addChild(container);\n\n    container.x = (i % 5) * size;\n    container.y = Math.floor(i / 5) * size;\n  }\n\n  app.ticker.add(() => {\n    pandas.forEach((panda, i) => {\n      panda.rotation += 0.01 * (i % 2 ? 1 : -1);\n    });\n  });\n})();\n"}})}function u(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},31531:function(n,e,t){t.d(e,{N:()=>o});var i=t(958),a=t(18146),s=t(85893);function o(n){return(0,a.J)("example",!0),(0,s.jsx)(i.M,{height:"calc(100vh - 325px)",fontSize:14,...n})}}}]);
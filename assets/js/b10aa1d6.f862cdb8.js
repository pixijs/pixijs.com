"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["2956"],{60161:function(e,n,s){s.r(n),s.d(n,{frontMatter:()=>r,default:()=>x,toc:()=>o,metadata:()=>t,assets:()=>c,contentTitle:()=>d});var t=JSON.parse('{"id":"guides/components/scene-objects/text/index","title":"Text","description":"Learn how to use PixiJS\'s text rendering classes `Text`, `BitmapText`, and `HTMLText`.","source":"@site/docs/guides/components/scene-objects/text/index.md","sourceDirName":"guides/components/scene-objects/text","slug":"/guides/components/scene-objects/text/","permalink":"/8.x/guides/components/scene-objects/text/","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/pixijs.com/tree/main/docs/guides/components/scene-objects/text/index.md","tags":[],"version":"current","frontMatter":{"description":"Learn how to use PixiJS\'s text rendering classes `Text`, `BitmapText`, and `HTMLText`."},"sidebar":"guidesSidebar","previous":{"title":"Graphics Pixel Line","permalink":"/8.x/guides/components/scene-objects/graphics/graphics-pixel-line"},"next":{"title":"Text (Canvas)","permalink":"/8.x/guides/components/scene-objects/text/canvas"}}'),i=s(85893),l=s(50065);let r={description:"Learn how to use PixiJS's text rendering classes `Text`, `BitmapText`, and `HTMLText`."},d="Text",c={},o=[{value:"<code>Text</code>: Rich Dynamic Text with Styles",id:"text-rich-dynamic-text-with-styles",level:2},{value:"<code>BitmapText</code>: High-Performance Glyph Rendering",id:"bitmaptext-high-performance-glyph-rendering",level:2},{value:"<code>HTMLText</code>: Styled HTML Inside the Scene",id:"htmltext-styled-html-inside-the-scene",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"API Reference",id:"api-reference",level:2}];function h(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"text",children:"Text"})}),"\n",(0,i.jsx)(n.p,{children:"Text is essential in games and applications, and PixiJS provides three different systems to cover different needs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Text"})}),": High-quality, styled raster text"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"BitmapText"})}),": Ultra-fast, GPU-optimized bitmap fonts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"HTMLText"})}),": Richly formatted HTML inside the Pixi scene"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Each approach has tradeoffs in fidelity, speed, and flexibility. Let\u2019s look at when and how to use each one."}),"\n",(0,i.jsxs)(n.h2,{id:"text-rich-dynamic-text-with-styles",children:[(0,i.jsx)(n.code,{children:"Text"}),": Rich Dynamic Text with Styles"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Text"})," class renders using the browser's native text engine, and then converts the result into a texture. This allows for:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Full CSS-like font control"}),"\n",(0,i.jsx)(n.li,{children:"Drop shadows, gradients, and alignment"}),"\n",(0,i.jsx)(n.li,{children:"Support for dynamic content and layout"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use it when"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You need detailed font control"}),"\n",(0,i.jsx)(n.li,{children:"Text changes occasionally"}),"\n",(0,i.jsx)(n.li,{children:"Fidelity is more important than speed"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Avoid when"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You're changing text every frame"}),"\n",(0,i.jsx)(n.li,{children:"You need to render hundreds of instances"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"bitmaptext-high-performance-glyph-rendering",children:[(0,i.jsx)(n.code,{children:"BitmapText"}),": High-Performance Glyph Rendering"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"BitmapText"})," uses a pre-baked bitmap font image for glyphs, bypassing font rasterization entirely. This gives:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"High rendering speed"}),"\n",(0,i.jsx)(n.li,{children:"Ideal for thousands of changing labels"}),"\n",(0,i.jsx)(n.li,{children:"Low memory usage"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use it when"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You need to render lots of dynamic text"}),"\n",(0,i.jsx)(n.li,{children:"You prioritize performance over styling"}),"\n",(0,i.jsx)(n.li,{children:"You predefine the characters and styles"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Avoid when"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You need fine-grained style control"}),"\n",(0,i.jsx)(n.li,{children:"You change fonts or font sizes frequently"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To use ",(0,i.jsx)(n.code,{children:"BitmapText"}),", you must first register a bitmap font via:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"BitmapFont.from(...)"})," to create on the fly, or"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Assets.load(...)"})," if using a 3rd-party BMFont or AngelCode export"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"htmltext-styled-html-inside-the-scene",children:[(0,i.jsx)(n.code,{children:"HTMLText"}),": Styled HTML Inside the Scene"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"HTMLText"})," lets you render actual HTML markup in your PixiJS scene. This allows:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<b>"}),", ",(0,i.jsx)(n.code,{children:"<i>"}),", ",(0,i.jsx)(n.code,{children:"<span>"})," style formatting"]}),"\n",(0,i.jsx)(n.li,{children:"Fine layout and text flow"}),"\n",(0,i.jsx)(n.li,{children:"Emoji, RTL, links, and more"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use it when"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You want complex HTML-style markup"}),"\n",(0,i.jsx)(n.li,{children:"Static or semi-dynamic content"}),"\n",(0,i.jsx)(n.li,{children:'Your users expect "document-like" layout'}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Avoid when"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"You need pixel-perfect performance"}),"\n",(0,i.jsx)(n.li,{children:"You're rendering hundreds of text blocks"}),"\n",(0,i.jsx)(n.li,{children:"You need GPU text effects"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"Each text type has a corresponding guide that covers setup, font loading, style options, and limitations in more detail:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/8.x/guides/components/scene-objects/text/canvas",children:"Text Guide \u2192"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/8.x/guides/components/scene-objects/text/bitmap",children:"BitmapText Guide \u2192"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/8.x/guides/components/scene-objects/text/html",children:"HTMLText Guide \u2192"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://pixijs.download/release/docs/scene.Text.html",children:"Text"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://pixijs.download/release/docs/scene.BitmapText.html",children:"BitmapText"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://pixijs.download/release/docs/scene.HTMLText.html",children:"HTMLText"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://pixijs.download/release/docs/text.TextStyle.html",children:"TextStyle"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://pixijs.download/release/docs/text.BitmapFont.html",children:"BitmapFont"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://pixijs.download/release/docs/scene.FillStyle.html",children:"FillStyle"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://pixijs.download/release/docs/scene.StrokeStyle.html",children:"StrokeStyle"})}),"\n"]})]})}function x(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},50065:function(e,n,s){s.d(n,{Z:()=>d,a:()=>r});var t=s(67294);let i={},l=t.createContext(i);function r(e){let n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);
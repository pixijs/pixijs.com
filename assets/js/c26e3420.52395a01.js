"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["2444"],{36869:function(t,n,e){e.r(n),e.d(n,{default:()=>l,frontMatter:()=>r,metadata:()=>o,assets:()=>p,toc:()=>c,contentTitle:()=>a});var o=JSON.parse('{"id":"examples/events/interactivity","title":"Interactivity","description":"","source":"@site/docs/examples/events/interactivity.mdx","sourceDirName":"examples/events","slug":"/examples/events/interactivity","permalink":"/8.x/examples/events/interactivity","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":1,"custom_edit_url":null,"title":"Interactivity"},"sidebar":"examplesSidebar","previous":{"title":"Click","permalink":"/8.x/examples/events/click"},"next":{"title":"Dragging","permalink":"/8.x/examples/events/dragging"}}'),s=e("85893"),i=e("50065"),u=e("43076");let r={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:1,custom_edit_url:null,title:"Interactivity"},a=void 0,p={},c=[];function d(t){return(0,s.jsx)(u.N,{files:{"index.js":"import { Application, Assets, Sprite, Texture } from 'pixi.js';\n\n(async () =>\n{\n    // Create a new application\n    const app = new Application();\n\n    // Initialize the application\n    await app.init({ resizeTo: window });\n\n    // Append the application canvas to the document body\n    document.body.appendChild(app.canvas);\n\n    // Load textures\n    await Assets.load([\n        'https://pixijs.com/assets/bg_button.jpg',\n        'https://pixijs.com/assets/button.png',\n        'https://pixijs.com/assets/button_down.png',\n        'https://pixijs.com/assets/button_over.png',\n    ]);\n\n    // Create a background...\n    const background = Sprite.from('https://pixijs.com/assets/bg_button.jpg');\n\n    background.width = app.screen.width;\n    background.height = app.screen.height;\n\n    // Add background to stage...\n    app.stage.addChild(background);\n\n    // Create some textures from an image path\n    const textureButton = Texture.from('https://pixijs.com/assets/button.png');\n    const textureButtonDown = Texture.from('https://pixijs.com/assets/button_down.png');\n    const textureButtonOver = Texture.from('https://pixijs.com/assets/button_over.png');\n\n    const buttons = [];\n\n    const buttonPositions = [175, 75, 655, 75, 410, 325, 150, 465, 685, 445];\n\n    for (let i = 0; i < 5; i++)\n    {\n        const button = new Sprite(textureButton);\n\n        button.anchor.set(0.5);\n        button.x = buttonPositions[i * 2];\n        button.y = buttonPositions[i * 2 + 1];\n\n        // Make the button interactive...\n        button.eventMode = 'static';\n        button.cursor = 'pointer';\n\n        button\n            // Mouse & touch events are normalized into\n            // the pointer* events for handling different\n            // button events.\n            .on('pointerdown', onButtonDown)\n            .on('pointerup', onButtonUp)\n            .on('pointerupoutside', onButtonUp)\n            .on('pointerover', onButtonOver)\n            .on('pointerout', onButtonOut);\n\n        // Use mouse-only events\n        // .on('mousedown', onButtonDown)\n        // .on('mouseup', onButtonUp)\n        // .on('mouseupoutside', onButtonUp)\n        // .on('mouseover', onButtonOver)\n        // .on('mouseout', onButtonOut)\n\n        // Use touch-only events\n        // .on('touchstart', onButtonDown)\n        // .on('touchend', onButtonUp)\n        // .on('touchendoutside', onButtonUp)\n\n        // Add it to the stage\n        app.stage.addChild(button);\n\n        // Add button to array\n        buttons.push(button);\n    }\n\n    // Set some silly values...\n    buttons[0].scale.set(1.2);\n    buttons[2].rotation = Math.PI / 10;\n    buttons[3].scale.set(0.8);\n    buttons[4].scale.set(0.8, 1.2);\n    buttons[4].rotation = Math.PI;\n\n    function onButtonDown()\n    {\n        this.isdown = true;\n        this.texture = textureButtonDown;\n        this.alpha = 1;\n    }\n\n    function onButtonUp()\n    {\n        this.isdown = false;\n        if (this.isOver)\n        {\n            this.texture = textureButtonOver;\n        }\n        else\n        {\n            this.texture = textureButton;\n        }\n    }\n\n    function onButtonOver()\n    {\n        this.isOver = true;\n        if (this.isdown)\n        {\n            return;\n        }\n        this.texture = textureButtonOver;\n    }\n\n    function onButtonOut()\n    {\n        this.isOver = false;\n        if (this.isdown)\n        {\n            return;\n        }\n        this.texture = textureButton;\n    }\n})();\n"}})}function l(t={}){let{wrapper:n}={...(0,i.a)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}}}]);
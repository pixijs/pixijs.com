"use strict";(self.webpackChunkpixi_docusaurus=self.webpackChunkpixi_docusaurus||[]).push([["516"],{73808:function(e,t,r){r.d(t,{A1:()=>n});var n={colors:{surface1:"#ffffff",surface2:"#F3F3F3",surface3:"#f5f5f5",clickable:"#959da5",base:"#24292e",disabled:"#d1d4d8",hover:"#24292e",accent:"#24292e"},syntax:{keyword:"#d73a49",property:"#005cc5",plain:"#24292e",static:"#032f62",string:"#032f62",definition:"#6f42c1",punctuation:"#24292e",tag:"#22863a",comment:{color:"#6a737d",fontStyle:"normal"}},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}}},19733:function(e,t,r){r.r(t),r.d(t,{frontMatter:()=>l,default:()=>m,toc:()=>c,metadata:()=>n,assets:()=>u,contentTitle:()=>d});var n=JSON.parse('{"id":"examples/filters-advanced/shader-toy-filter-render-texture","title":"Shader Toy Filter Render Texture","description":"","source":"@site/versioned_docs/version-7.x/examples/filters-advanced/shader-toy-filter-render-texture.mdx","sourceDirName":"examples/filters-advanced","slug":"/examples/filters-advanced/shader-toy-filter-render-texture","permalink":"/7.x/examples/filters-advanced/shader-toy-filter-render-texture","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"7.x","sidebarPosition":2,"frontMatter":{"hide_table_of_contents":true,"hide_edit_this_page":true,"sidebar_position":2,"custom_edit_url":null,"title":"Shader Toy Filter Render Texture"},"sidebar":"examplesSidebar","previous":{"title":"Custom","permalink":"/7.x/examples/filters-advanced/custom"},"next":{"title":"Textured Mesh Basic","permalink":"/7.x/examples/mesh-and-shaders/textured-mesh-basic"}}'),a=r(85893),i=r(50065),o=r(31531),s=r(99883);let l={hide_table_of_contents:!0,hide_edit_this_page:!0,sidebar_position:2,custom_edit_url:null,title:"Shader Toy Filter Render Texture"},d=void 0,u={},c=[];function p(e){return(0,a.jsx)(o.N,{files:{"index.js":"import * as PIXI from 'pixi.js';\n\n/**\n * Please note that this is not the most optimal way of doing pure shader generated rendering and should be used when the\n * scene is wanted as input texture. Check the mesh version of example for more performant version if you need only shader\n * generated content.\n **/\nconst app = new PIXI.Application({ background: '#1099bb', resizeTo: window });\n\ndocument.body.appendChild(app.view);\n\nPIXI.Assets.load('https://pixijs.com/assets/perlin.jpg').then(onAssetsLoaded);\n\nlet filter = null;\n\nconst text = new PIXI.Text('PixiJS', { fill: 0xffffff, fontSize: 80 });\n\ntext.anchor.set(0.5, 0.5);\ntext.position.set(app.renderer.screen.width / 2, app.renderer.screen.height / 2);\n\napp.stage.addChild(text);\n\nlet totalTime = 0;\n\n// Fragment shader, in real use this would be much cleaner when loaded from a file\n// or embedded into the application as data resource.\nconst fragment = `//Based on this: https://www.shadertoy.com/view/wtlSWX\n\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform sampler2D noise;\nuniform float time;\n// Distance function. Just calculates the height (z) from x,y plane with really simple length check.\n// Its not exact as there could be shorter distances.\nvec2 dist(vec3 p)\n{\n  float id = floor(p.x)+floor(p.y);\n  id = mod(id, 2.);\n  float h = texture2D(noise, vec2(p.x, p.y)*0.04).r*5.1;\n  float h2 = texture2D(uSampler, vTextureCoord).r;\n  return vec2(h+h2-p.z,id);\n}\n//Light calculation.\nvec3 calclight(vec3 p, vec3 rd)\n{\n  vec2 eps = vec2( 0., 0.001);\n  vec3 n = normalize( vec3(\n    dist(p+eps.yxx).x - dist(p-eps.yxx).x,\n    dist(p+eps.xyx).x - dist(p-eps.xyx).x,\n    dist(p+eps.xxy).x - dist(p-eps.xxy).x\n  ));\n\n  vec3 d = vec3( max( 0., dot( -rd ,n)));\n\n  return d;\n}\n\nvoid main()\n{\n  vec2 uv = vec2(vTextureCoord.x, 1.-vTextureCoord.y);\n  uv *=2.;\n  uv-=1.;\n\n  vec3 cam = vec3(0.,time -2., -3.);\n  vec3 target = vec3(sin(time)*0.1, time+cos(time)+2., 0. );\n  float fov = 2.2;\n  vec3 forward = normalize( target - cam);\n  vec3 up = normalize(cross( forward, vec3(0., 1.,0.)));\n  vec3 right = normalize( cross( up, forward));\n  vec3 raydir = normalize(vec3( uv.x *up + uv.y * right + fov*forward));\n\n  //Do the raymarch\n  vec3 col = vec3(0.);\n  float t = 0.;\n  for( int i = 0; i < 100; i++)\n  {\n    vec3 p = t * raydir + cam;\n    vec2 d = dist(p);\n    t+=d.x*0.5;//Jump only half of the distance as height function used is not really the best for heightmaps.\n    if(d.x < 0.001)\n    {\n      vec3 bc = d.y < 0.5 ? vec3(1.0, .8, 0.) :\n                vec3(0.8,0.0, 1.0);\n      col = vec3( 1.) * calclight(p, raydir) * (1. - t/150.) *bc;\n      break;\n    }\n    if(t > 1000.)\n    {\n      break;\n    }\n  }\n  gl_FragColor = vec4(col, 1.);\n}\n`;\n\nfunction onAssetsLoaded(perlin) {\n  // Add perlin noise for filter, make sure it's wrapping and does not have mipmap.\n  perlin.baseTexture.wrapMode = PIXI.WRAP_MODES.REPEAT;\n  perlin.baseTexture.mipmap = false;\n\n  // Build the filter\n  filter = new PIXI.Filter(null, fragment, {\n    time: 0.0,\n    noise: perlin,\n  });\n  app.stage.filterArea = app.renderer.screen;\n  app.stage.filters = [filter];\n\n  // Listen for animate update.\n  app.ticker.add((delta) => {\n    filter.uniforms.time = totalTime;\n    totalTime += delta / 60;\n  });\n}\n"},dependencies:{"pixi.js":s.npm}})}function m(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},18064:function(e,t,r){r.d(t,{M:()=>b});var n=r(67294);let a={colors:{surface1:"#242426",surface2:"#444950",surface3:"#44475a",clickable:"#fff",base:"#f8f8f2",disabled:"#6272a4",hover:"#f8f8f2",accent:"#e91e63",error:"#f8f8f2",errorSurface:"#44475a"},syntax:{plain:"#f8f8f2",comment:{color:"#6272a4",fontStyle:"italic"},keyword:"#ff79c6",tag:"#ff79c6",punctuation:"#ff79c6",definition:"#f8f8f2",property:"#50fa7b",static:"#bd93f9",string:"#f1fa8c"},font:{body:'-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',mono:'"Fira Mono", "DejaVu Sans Mono", Menlo, Consolas, "Liberation Mono", Monaco, "Lucida Console", monospace',size:"13px",lineHeight:"20px"}},i=e=>{let t=e.split(".");return t[t.length-1]},o=e=>{let t=i(e);return"js"===t?"javascript":"ts"===t?"typescript":"vert"===t||"frag"===t?"glsl":t},s=e=>(0,n.useMemo)(()=>o(e),[e]),l=async e=>{let t=`pixi-definitions-${e}`,r=JSON.parse(localStorage.getItem(t))||null;if(!r)try{let r=await fetch(`https://cdn.jsdelivr.net/npm/pixi.js@${e}/dist/pixi.js.d.ts`),n=await r.text();if(n.startsWith("// Generated by dts-bundle-generator"))return localStorage.setItem(t,JSON.stringify(n)),n;return null}catch(e){return console.error("Failed to fetch pixi.js types:",e),null}return r},d=(e,t="latest")=>{(0,n.useEffect)(()=>{let r=async e=>{let r=await l(t),n=`declare module 'pixi.js' { ${r} }`,a=`
            declare module '*.wgsl' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.vert' {
                const shader: 'string';
                export default shader;
            }

            declare module '*.frag' {
                const shader: 'string';
                export default shader;
            }`;e.languages.typescript.typescriptDefaults.addExtraLib(n,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.javascriptDefaults.addExtraLib(n,"file:///node_modules/pixi.js/index.d.ts"),e.languages.typescript.typescriptDefaults.addExtraLib(a),e.languages.typescript.javascriptDefaults.addExtraLib(a);let{languages:i}=e,o="glsl";i.register({id:o,extensions:[".frag",".vert"]}),i.setLanguageConfiguration(o,{comments:{lineComment:"//",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"',notIn:["string"]},{open:"'",close:"'",notIn:["string"]}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}]}),i.setMonarchTokensProvider(o,{tokenPostfix:".glsl",defaultToken:"invalid",directives:["#","#define","#undef","#if","#ifdef","#ifndef","#else","#elif","#endif","#error","#pragma","#extension","#version","#line"],macros:["__LINE__","__FILE__","__VERSION__"],storage:["in","out","uniform","layout","attribute","varying","precision","highp","mediump","lowp"],types:["void","bool","int","uint","float","double","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","uvec2","uvec3","uvec4","dvec2","dvec3","dvec4","mat2","mat3","mat4","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","dmat2","dmat3","dmat4","dmat2x2","dmat2x3","dmat2x4","dmat3x2","dmat3x3","dmat3x4","dmat4x2","dmat4x3","dmat4x4","sampler1D","texture1D","image1D","sampler1DShadow","sampler1DArray","texture1DArray","image1DArray","sampler1DArrayShadow","sampler2D","texture2D","image2D","sampler2DShadow","sampler2DArray","texture2DArray","image2DArray","sampler2DArrayShadow","sampler2DMS","texture2DMS","image2DMS","sampler2DMSArray","texture2DMSArray","image2DMSArray","sampler2DRect","texture2DRect","image2DRect","sampler2DRectShadow","sampler3D","texture3D","image3D","samplerCube","textureCube","imageCube","samplerCubeShadow","samplerCubeArray","textureCubeArray","imageCubeArray","samplerCubeArrayShadow","samplerBuffer","textureBuffer","imageBuffer","subpassInput","subpassInputMS","isampler1D","itexture1D","iimage1D","isampler1DArray","itexture1DArray","iimage1DArray","isampler2D","itexture2D","iimage2D","isampler2DArray","itexture2DArray","iimage2DArray","isampler2DMS","itexture2DMS","iimage2DMS","isampler2DMSArray","itexture2DMSArray","iimage2DMSArray","isampler2DRect","itexture2DRect","iimage2DRect","isampler3D","itexture3D","iimage3D","isamplerCube","itextureCube","iimageCube","isamplerCubeArray","itextureCubeArray","iimageCubeArray","isamplerBuffer","itextureBuffer","iimageBuffer","isubpassInput","isubpassInputMS","usampler1D","utexture1D","uimage1D","usampler1DArray","utexture1DArray","uimage1DArray","usampler2D","utexture2D","uimage2D","usampler2DArray","utexture2DArray","uimage2DArray","usampler2DMS","utexture2DMS","uimage2DMS","usampler2DMSArray","utexture2DMSArray","uimage2DMSArray","usampler2DRect","utexture2DRect","uimage2DRect","usampler3D","utexture3D","uimage3D","usamplerCube","utextureCube","uimageCube","usamplerCubeArray","utextureCubeArray","uimageCubeArray","usamplerBuffer","utextureBuffer","uimageBuffer","atomic_uint","usubpassInput","usubpassInputMS","sampler","samplerShadow"],operators:["*","+","-","/","~","!","%","<<",">>","<",">","<=",">=","==","!=","&","^","|","&&","^^","||","=","+=","-=","*=","/=","%=","<<=",">>=","&=","^=","|="],builtin_vars:["gl_VertexID","gl_InstanceID","gl_VertexIndex","gl_InstanceIndex","gl_DrawID","gl_BaseVertex","gl_BaseInstance","gl_Position","gl_PointSize","gl_ClipDistance","gl_CullDistance","gl_Color","gl_SecondaryColor","gl_Normal","gl_Vertex","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_FogCoord"],constants:["gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexUniformComponents","gl_MaxVertexOutputComponents"],intsuffix:"[uU]?",floatsuffix:"([fF]|(fl|FL))?",tokenizer:{root:[[/\/\/.*$/,"comment.line"],[/\/\*/,"comment.block","@comment"],[/#[a-z]*/,{cases:{"@directives":"keyword.control.preprocessor","@default":"invalid"}}],["GL_ES","meta.preprocessor"],[/__[A-Z_]+__/,{cases:{"@macros":"meta.preprocessor","@default":"invalid"}}],[/[{}()\[\]]/,"@brackets"],[/(true|false)/,"constant"],[/[\=\+\-\*\/\>\<\&\|\%\!\^]+/,{cases:{"@operators":"operator","@default":"invalid"}}],[/[a-zA-Z][a-zA-Z0-9_]*(?=\()/,"entity.name.function"],[/[a-zA-Z][a-zA-Z0-9_]*/,{cases:{"@storage":"storage.type","@types":"entity.name.type","@builtin_vars":"keyword","@default":"variable.name"}}],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F](@intsuffix)/,"number.hex"],[/0[0-7](@intsuffix)/,"number.octal"],[/\d+(@intsuffix)/,"number"],[/[;,.]/,"delimiter"]],comment:[["\\*/","comment.block","@pop"],[".*","comment.block"]]}})};e&&r(e)},[e,t])};var u=r(93862),c=r(35283),p=r(51443),m=r(85893);function f({fontSize:e=12,style:t,pixiVersion:r,handleEditorCodeChanged:a}){let{code:i,updateCode:o}=(0,u.m4)(),{sandpack:l}=(0,u.X3)(),f=function(){let[e,t]=(0,n.useState)(null),r=(0,n.useRef)(!0),a=(0,n.useRef)(null);return(0,n.useEffect)(()=>{let e=p._m.__getMonacoInstance();if(e)return void t(e);if(!a.current){p._m.config({"vs/nls":{availableLanguages:{}}});try{a.current=p._m.init(),a.current.then(e=>{r.current&&t(e)}).catch(e=>{r.current&&"cancelation"!==e.type&&console.error("Monaco initialization error:",e)})}catch(e){console.error("Failed to initialize Monaco:",e)}}return()=>{r.current=!1}},[]),e}(),x=s(l.activeFile),{colorMode:h}=(0,c.I)();return d(f,r),(0,m.jsxs)(u.el,{style:{height:"100%",margin:0,...t},children:[(0,m.jsx)(u.aM,{}),(0,m.jsx)("div",{style:{flex:1,paddingTop:8,background:"dark"===h?"#1e1e1e":"#FFFFFE"},children:(0,m.jsx)(p.ML,{width:"100%",height:"100%",language:x,theme:"dark"===h?"vs-dark":"light",defaultValue:i,onChange:e=>{o(e||""),a?.(e)},options:{minimap:{enabled:!1},scrollBeyondLastLine:!1,wordWrap:"on",automaticLayout:!0,fontSize:e}},l.activeFile)})]})}let x=({onClick:e})=>(0,m.jsx)(u.z,{style:{position:"relative"},onClick:e,children:(0,m.jsx)(u.zD,{})}),h=({onSelectionChange:e,defaultSelection:t="both"})=>{let[r,a]=(0,n.useState)(t),{colorMode:i}=(0,c.I)(),o=t=>{a(t),e(t)},s={height:"100%",width:"max-content",padding:"0 16px",display:"flex",alignItems:"center",justifyContent:"center",cursor:"pointer",color:"dark"===i?"#F6F8FA":"#2E3138",border:"none"},l="dark"===i?"#22232A":"#e2e2e2";return(0,m.jsxs)("div",{style:{height:32,width:"100%",overflow:"hidden",backgroundColor:"dark"===i?"#2E3138":"#F6F8FA",display:"flex",justifyContent:"right",borderBottomLeftRadius:4,borderBottomRightRadius:4},children:[(0,m.jsx)("button",{onClick:()=>o("editor"),style:{backgroundColor:"editor"===r?l:"transparent",...s},children:"Editor"}),(0,m.jsx)("button",{onClick:()=>o("preview"),style:{backgroundColor:"preview"===r?l:"transparent",...s},children:"Preview"}),(0,m.jsx)("button",{onClick:()=>o("both"),style:{backgroundColor:"both"===r?l:"transparent",...s},children:"Both"})]})};function g(e){let{viewType:t,showConsole:r,fontSize:a,pixiVersion:i}=e,[o,s]=(0,n.useState)(r),[l,d]=(0,n.useState)(t),c=(0,m.jsx)(m.Fragment,{children:(0,m.jsx)(x,{onClick:()=>s(e=>!e)})});return(0,m.jsxs)("div",{style:{height:"100%",width:"100%",display:"flex",flexDirection:"column"},children:[(0,m.jsxs)(u.sp,{style:{height:"100%",overflow:"hidden",borderBottomLeftRadius:0,borderBottomRightRadius:0,flexWrap:"nowrap"},children:[(0,m.jsx)(f,{fontSize:a,style:{flexGrow:+("preview"!==l),flexShrink:+("preview"!==l),flexBasis:"editor"===l?"100%":0,width:"100%",overflow:"hidden"},pixiVersion:i,handleEditorCodeChanged:e.handleEditorCodeChanged}),(0,m.jsxs)(u.el,{style:{height:"100%",width:"100%"},children:[(0,m.jsx)(u.Gj,{style:{flexGrow:100*("editor"!==l),flexShrink:100*("editor"!==l),flexBasis:"editor"!==l?"100%":0,overflow:"hidden"},showOpenInCodeSandbox:!1,actionsChildren:c}),o&&(0,m.jsx)("div",{style:{flexGrow:35*!!o,flexShrink:35*!!o,flexBasis:o?"35%":0,width:"100%",overflow:"hidden"},children:(0,m.jsx)(u.Tq,{showHeader:!1})})]})]}),(0,m.jsx)(h,{onSelectionChange:e=>{d(e)},defaultSelection:l})]})}var y=r(73808),v=r(646);function b({viewType:e="both",showConsole:t=!1,width:r="100%",height:i="100%",dependencies:o={"pixi.js":"latest"},files:s={"index.js":"// Your code here"},fontSize:l=12,handleEditorCodeChanged:d}){let{colorMode:p}=(0,c.I)(),f={...s};delete f["index.js"];let[x]=(0,n.useState)({"/index.html":{code:'<!doctype html>\n<html>\n  <head>\n    <title>PixiJS Playground</title>\n    <meta charset="UTF-8" />\n    <link rel="stylesheet" href="./styles.css" />\n  </head>\n  <body>\n    <script src="index.js"><\/script>\n  </body>\n</html>\n',hidden:!0},"/styles.css":{code:"body {\n  margin: 0;\n  overflow: hidden;\n}\n",hidden:!0},"sandbox.config.json":{code:'{"infiniteLoopProtection": false}',hidden:!0},"index.ts":{code:"",hidden:!0,active:!1},"index.js":{code:s["index.js"]??"// Your code here",hidden:!1,active:!0},...f});return(0,m.jsx)(v.Z,{children:()=>(0,m.jsx)(u.oT,{template:"vanilla-ts",theme:"dark"===p?a:y.A1,files:x,customSetup:{dependencies:o,entry:"index.html"},style:{height:i,width:r,margin:"0 auto",maxWidth:"100%"},options:{recompileDelay:500},children:(0,m.jsx)(g,{handleEditorCodeChanged:d,viewType:e,showConsole:t,fontSize:l,pixiVersion:o["pixi.js"]})})})}},31531:function(e,t,r){r.d(t,{N:()=>o});var n=r(18064),a=r(18146),i=r(85893);function o(e){return(0,a.J)("example",!0),(0,i.jsx)(n.M,{height:"calc(100vh - 325px)",fontSize:14,...e})}},18146:function(e,t,r){r.d(t,{J:()=>a});var n=r(67294);let a=(e,t=!0)=>{(0,n.useEffect)(()=>{let r=document.querySelector("main > .container");if(null!==r&&t)return r.classList.add(e),()=>{r.classList.remove(e)}},[e,t])}},50065:function(e,t,r){r.d(t,{Z:()=>s,a:()=>o});var n=r(67294);let a={},i=n.createContext(a);function o(e){let t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(i.Provider,{value:t},e.children)}},99883:function(e){e.exports=JSON.parse('{"versionLabel":"v7.x","version":"7.4.2","releaseNotes":"https://github.com/pixijs/pixijs/releases/tag/v7.4.2","build":"https://pixijs.download/v7.4.2/pixi.min.js","docs":"https://pixijs.download/v7.4.2/docs/index.html","npm":"7.4.2","prerelease":false,"latest":false}')}}]);